{"version":3,"mappings":"wTAgBA,MAAMA,EAAyB,CAC3B,GAAI,CACA,MAAO,CACH,IAAK,6BACL,UAAW,wBACf,EACA,KAAM,CAAC,KAAM,OAAQ,MAAM,CAC/B,EACA,UAAW,CACP,MAAO,CACH,IAAK,qCACL,UAAW,oBACf,EACA,KAAM,CAAC,SAAS,CACpB,EACA,IAAK,CACD,MAAO,CACH,IAAK,6BACL,UAAW,uBACf,EACA,KAAM,CAAC,KAAK,CAChB,EACA,GAAI,CACA,MAAO,CACH,IAAK,6BACL,UAAW,uBACf,EACA,KAAM,CACF,KACA,KACA,MACA,OACA,MACA,OACA,MACA,KACA,OACA,SACA,QACA,QACA,MACA,OACA,KACA,OACA,OACA,KACA,MACJ,CACJ,EACA,QAAS,CACL,MAAO,CACH,IAAK,mCACL,UAAW,yBACf,EACA,KAAM,CAAC,QAAS,OAAQ,MAAM,CAClC,EACA,GAAI,CACA,MAAO,CACH,IAAK,4BACL,UAAW,oBACf,EACA,KAAM,CAAC,KAAM,OAAQ,KAAM,MAAO,MAAO,UAAW,OAAO,CAC/D,EACA,GAAI,CACA,MAAO,CACH,IAAK,4BACL,UAAW,oBACf,EACA,KAAM,CACF,OACA,KACA,KACA,QACA,UACA,QACA,OACA,QACA,OACA,QACA,KACA,MACA,OACA,SACA,OACJ,CACJ,EACA,GAAI,CACA,MAAO,CACH,IAAK,6BACL,UAAW,sBACf,EACA,KAAM,CAAC,KAAM,UAAW,MAAO,QAAS,MAAM,CAClD,EACA,GAAI,CACA,MAAO,CACH,IAAK,6BACL,UAAW,iBACf,EACA,KAAM,CAAC,MAAO,OAAQ,KAAM,QAAS,MAAM,CAC/C,EACA,IAAK,CACD,MAAO,CACH,IAAK,uCACL,UAAW,oBACf,EACA,KAAM,CAAC,MAAO,OAAQ,OAAO,CACjC,EACA,GAAI,CACA,MAAO,CACH,IAAK,+BACL,UAAW,wBACf,EACA,KAAM,CAAC,KAAK,CAChB,EACA,IAAK,CACD,MAAO,CACH,IAAK,4BACL,UAAW,qBACf,EACA,KAAM,CAAC,QAAS,KAAK,CACzB,EACA,EAAG,CACC,MAAO,CACH,IAAK,gCACL,UAAW,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","names":["CATEGORIES","getAppCategory","name","CATEGORY","Thumb","category","appCategory","useState","holder","setHolder","src","setSrc","useEffect","copyRight","jsxs","jsx","COPYRIGHT_URL","DistanceContainer","location","Distance","useSwipeHook","elRef","onDragMove","dragMoveRef","useRef","manager","__vitePreload","module","DIRECTION_HORIZONTAL","container","Drag","event","__FLEX_GAP__","__LI_WIDTH__","__BORDER__","RestaurantList","resultInRadius","useAppSelector","state","nearest","swipeContainerRef","dataInUse","setDataInUse","left","setLeft","deltaX","prevLeft","newLeft","leftOfLastElement","restaurantInfo","RestaurantListItem","isFirst","_id","title","address","rating","reviews","certification","currentPage","liElement","CloseButton","dispatch","useAppDispatch","handleClose","appModalMode","CATEGORY_FILTER_MODAL","imgClose","SubmitButton","mapMode","handleClick","checkedNode","totalCategoryCount","checkedCategoryName","node","ADD_SELECTED_CATEGORY","SHOW_LIST_IN_REGION_MODAL","CategoryFilterModal","show","setShow","categoryFilterModalOn","categoryList","_","tempList","key","checkboxRefs","React","handleUncheck","ref","i","CategoryItem","index","selectedCategory","isChecked","setIsChecked","handleCheckboxChange"],"sources":["../../../../components/image/CATEGORY.ts","../../../../components/image/getAppCategory.ts","../../../../pages/search/ResultInRadius/Thumb.tsx","../../../../pages/search/ResultInRadius/DistanceContainer.tsx","../../../../pages/search/ResultInRadius/useSwipeHook.ts","../../../../pages/search/ResultInRadius/RestaurantList.tsx","../../../../pages/search/ResultInRadius/RestaurantListItem.tsx","../../../../pages/search/ModalGroup/CategoryFilterModal/CloseButton.tsx","../../../../pages/search/ModalGroup/CategoryFilterModal/SubmitButton.tsx","../../../../pages/search/ModalGroup/CategoryFilterModal/CategoryFilterModal.tsx"],"sourcesContent":["type Thumb = {\r\n    src: string;\r\n    copyRight: string;\r\n};\r\n\r\ntype MatchList = string[];\r\n\r\nexport type CategoryInfo = {\r\n    thumb: Thumb;\r\n    list: MatchList;\r\n};\r\n\r\ninterface CATEGORIES {\r\n    [key: string]: CategoryInfo;\r\n}\r\n\r\nconst CATEGORIES: CATEGORIES = {\r\n    일식: {\r\n        thumb: {\r\n            src: 'images/category-japan.webp',\r\n            copyRight: 'ultimatearm - Flaticon',\r\n        },\r\n        list: ['일식', '퓨전일식', '초밥,롤'],\r\n    },\r\n    '멕시칸/브라질': {\r\n        thumb: {\r\n            src: 'images/category-south-america.webp',\r\n            copyRight: 'Eucalyp - Flaticon',\r\n        },\r\n        list: ['멕시칸,브라질'],\r\n    },\r\n    샐러드: {\r\n        thumb: {\r\n            src: 'images/category-salad.webp',\r\n            copyRight: 'Victoruler - Flaticon',\r\n        },\r\n        list: ['샐러드'],\r\n    },\r\n    한식: {\r\n        thumb: {\r\n            src: 'images/category-korea.webp',\r\n            copyRight: 'Darius Dan - Flaticon',\r\n        },\r\n        list: [\r\n            '한식',\r\n            '분식',\r\n            '한정식',\r\n            '퓨전한식',\r\n            '칼국수',\r\n            '떡,한과',\r\n            '떡볶이',\r\n            '쌈밥',\r\n            '한식뷔페',\r\n            '돈까스,우동',\r\n            '두부전문점',\r\n            '찌개,전골',\r\n            '도시락',\r\n            '채식뷔페',\r\n            '뷔페',\r\n            '샤브샤브',\r\n            '구내식당',\r\n            '국수',\r\n            '퓨전요리',\r\n        ],\r\n    },\r\n    '인도/중동': {\r\n        thumb: {\r\n            src: 'images/category-middle-east.webp',\r\n            copyRight: 'cah nggunung - Flaticon',\r\n        },\r\n        list: ['인도/중동', '인도음식', '터키음식'],\r\n    },\r\n    양식: {\r\n        thumb: {\r\n            src: 'images/category-west.webp',\r\n            copyRight: 'pojok d - Flaticon',\r\n        },\r\n        list: ['양식', '이탈리안', '피자', '토스트', '햄버거', '패밀리레스토랑', '패스트푸드'],\r\n    },\r\n    카페: {\r\n        thumb: {\r\n            src: 'images/category-cafe.webp',\r\n            copyRight: 'Freepik - Flaticon',\r\n        },\r\n        list: [\r\n            '베이커리',\r\n            '까페',\r\n            '카페',\r\n            '커피전문점',\r\n            '제과,베이커리',\r\n            '디저트카페',\r\n            '샌드위치',\r\n            '갤러리카페',\r\n            '테마카페',\r\n            '아이스크림',\r\n            '도넛',\r\n            '북카페',\r\n            '전통찻집',\r\n            '스튜디오카페',\r\n            '고양이카페',\r\n        ],\r\n    },\r\n    술집: {\r\n        thumb: {\r\n            src: 'images/category-drink.webp',\r\n            copyRight: 'Good Ware - Flaticon',\r\n        },\r\n        list: ['술집', '호프,요리주점', '와인바', '일본식주점', '칵테일바'],\r\n    },\r\n    중식: {\r\n        thumb: {\r\n            src: 'images/category-china.webp',\r\n            copyRight: 'GOWI - Flaticon',\r\n        },\r\n        list: ['중국식', '중국요리', '중식', '아시아음식', '퓨전중식'],\r\n    },\r\n    동남아: {\r\n        thumb: {\r\n            src: 'images/category-east-south-asia.webp',\r\n            copyRight: 'Eucalyp - Flaticon',\r\n        },\r\n        list: ['동남아', '태국음식', '동남아음식'],\r\n    },\r\n    치킨: {\r\n        thumb: {\r\n            src: 'images/category-chicken.webp',\r\n            copyRight: 'Soni Sokell - Flaticon',\r\n        },\r\n        list: ['닭강정'],\r\n    },\r\n    해산물: {\r\n        thumb: {\r\n            src: 'images/category-fish.webp',\r\n            copyRight: 'fjstudio - Flaticon',\r\n        },\r\n        list: ['해물,생선', '참치회'],\r\n    },\r\n    죽: {\r\n        thumb: {\r\n            src: 'images/category-porridge.webp',\r\n            copyRight: 'Freepik - Flaticon',\r\n        },\r\n        list: ['죽'],\r\n    },\r\n    기타: {\r\n        thumb: {\r\n            src: 'images/category-food.webp',\r\n            copyRight: '3ab2ou - Flaticon',\r\n        },\r\n        list: ['과일,채소가게', '식품판매', '생과일전문점', '교육,학문', '음식점', '식품가공,제조', '슈퍼마켓'],\r\n    },\r\n};\r\n\r\nexport default CATEGORIES;\r\n","import CATEGORIES, { CategoryInfo } from './CATEGORY';\r\n\r\nexport default function getAppCategory(name: string | null): string {\r\n    if (name === '' || name === null) return '기타';\r\n\r\n    for (const CATEGORY in CATEGORIES) {\r\n        const categoryInfo: CategoryInfo = CATEGORIES[CATEGORY];\r\n\r\n        if (categoryInfo.list.includes(name)) {\r\n            return CATEGORY;\r\n        }\r\n    }\r\n\r\n    return '기타';\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { COPYRIGHT_URL } from '../../../renderer/CONSTANT_URL';\r\nimport getAppCategory from '../../../components/image/getAppCategory';\r\nimport CATEGORIES from '../../../components/image/CATEGORY';\r\n\r\nexport { Thumb };\r\n\r\nfunction Thumb({ category }: { category: string }) {\r\n    const [appCategory] = useState(() => getAppCategory(category));\r\n    const [holder, setHolder] = useState('');\r\n    const [src, setSrc] = useState('');\r\n\r\n    useEffect(() => {\r\n        const { copyRight, src } = CATEGORIES[appCategory].thumb;\r\n        setHolder(copyRight);\r\n        setSrc(import.meta.env.BASE_URL + src);\r\n    }, [appCategory]);\r\n\r\n    return (\r\n        <div className=\"container-img\">\r\n            <a href={import.meta.env.BASE_URL + COPYRIGHT_URL} title={`${appCategory} icon`}>\r\n                <span className=\"sr-only\">아이콘 제작자: {holder}</span>\r\n            </a>\r\n            {src !== '' && <img src={src} alt=\"카테고리 아이콘\" />}\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Distance } from '../../my-lists/bookmark/BookmarkListMain/BookmarkList/Distance';\r\n\r\nexport { DistanceContainer };\r\n\r\nfunction DistanceContainer({ location }: { location: [number, number] }) {\r\n    return (\r\n        <div className=\"container-distance\">\r\n            <Distance location={location} />\r\n        </div>\r\n    );\r\n}\r\n","import { RefObject, useEffect, useRef } from 'react';\r\n// import Hammer from 'hammerjs';\r\n// import * as hammerJs from 'hammerjs';\r\n\r\n// const { DIRECTION_HORIZONTAL } = ((hammerJs as any).default ?? hammerJs) as typeof hammerJs;\r\n\r\ntype PanCallback = HammerListener;\r\n\r\ntype UseSwipeHookProps = {\r\n    elRef: RefObject<Element>;\r\n    onDragMove: PanCallback;\r\n};\r\n\r\n// onDragMove에 등록되어 있는 콜백함수가 실행될 때마다\r\n// ref 객체에 콜백함수를 담아서 hammer 이벤트 실행 시 콜백 함수로 사용\r\nexport default function useSwipeHook({ elRef, onDragMove }: UseSwipeHookProps) {\r\n    const dragMoveRef = useRef<PanCallback | null>(null);\r\n    dragMoveRef.current = onDragMove;\r\n\r\n    useEffect(() => {\r\n        let manager: HammerManager;\r\n        import('hammerjs').then((module) => {\r\n            const { DIRECTION_HORIZONTAL } = module;\r\n\r\n            if (!elRef || !elRef.current) {\r\n                console.error('useSwipe hook은 swipe 컨테이너를 참조해야 합니다.');\r\n\r\n                return;\r\n            }\r\n\r\n            const container = elRef.current;\r\n            manager = new Hammer.Manager(container);\r\n            const Drag = new Hammer.Pan({ threshold: 10, direction: DIRECTION_HORIZONTAL });\r\n\r\n            manager.add(Drag);\r\n            manager.on('panmove', (event: HammerInput) => dragMoveRef.current && dragMoveRef.current(event));\r\n\r\n            return () => {\r\n                manager.off('panstart');\r\n                manager.off('panmove');\r\n            };\r\n        });\r\n    }, [dragMoveRef]);\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport useSwipeHook from './useSwipeHook';\r\nimport { useAppSelector } from '../../../renderer/store/hooks';\r\nimport { RestaurantListItem } from './RestaurantListItem';\r\nimport { Restaurant } from '../../../server/models/Restaurant';\r\n\r\nexport { RestaurantList };\r\n\r\nexport const __FLEX_GAP__ = 10;\r\nexport const __LI_WIDTH__ = 350;\r\nexport const __BORDER__ = 1 * 2;\r\n\r\nfunction RestaurantList() {\r\n    const resultInRadius = useAppSelector((state) => state.mapSlice.resultInRadius);\r\n    const nearest = useAppSelector((state) => state.mapSlice.nearest);\r\n    const swipeContainerRef = useRef<HTMLDivElement>(null);\r\n\r\n    const [dataInUse, setDataInUse] = useState<Restaurant[]>(resultInRadius);\r\n\r\n    useEffect(() => {\r\n        if (resultInRadius.length > 0) {\r\n            setDataInUse(resultInRadius);\r\n        } else {\r\n            setDataInUse(nearest);\r\n        }\r\n    }, [resultInRadius]);\r\n\r\n    const [left, setLeft] = useState(0);\r\n\r\n    const handleDragMove = (event: HammerInput) => {\r\n        const deltaX = event.deltaX;\r\n\r\n        setLeft((prevLeft) => {\r\n            const newLeft = prevLeft + deltaX;\r\n\r\n            // left가 바뀌면 left가 0 초과이거나 마지막요소의 왼쪽 위치보다 작으면 최대/최소값으로 이동\r\n            if (newLeft > 0) {\r\n                return 0;\r\n            }\r\n\r\n            const leftOfLastElement = (__FLEX_GAP__ + __LI_WIDTH__ + __BORDER__) * (dataInUse.length - 1) * -1;\r\n            if (newLeft < leftOfLastElement) {\r\n                return leftOfLastElement;\r\n            }\r\n\r\n            return newLeft;\r\n        });\r\n    };\r\n\r\n    useSwipeHook({\r\n        elRef: swipeContainerRef,\r\n        onDragMove: handleDragMove,\r\n    });\r\n\r\n    return (\r\n        <div className=\"wrapper-swiper\">\r\n            <div\r\n                className=\"container-swiper\"\r\n                ref={swipeContainerRef}\r\n                style={{ transform: `translateX(${left}px)`, transition: '1s' }}\r\n            >\r\n                {\r\n                    <ul className=\"ul-restaurant-in-radius\" style={{ gap: `${__FLEX_GAP__}px` }}>\r\n                        {dataInUse.map((restaurantInfo) => {\r\n                            return <RestaurantListItem key={Math.random()} restaurantInfo={restaurantInfo} />;\r\n                        })}\r\n                    </ul>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { Thumb } from './Thumb';\r\nimport { DistanceContainer } from './DistanceContainer';\r\nimport { __LI_WIDTH__, __BORDER__ } from './RestaurantList';\r\nimport { useAppSelector } from '../../../renderer/store/hooks';\r\nimport type { Restaurant } from '../../../server/models/Restaurant';\r\n\r\nexport { RestaurantListItem };\r\n\r\nfunction RestaurantListItem({ restaurantInfo, isFirst }: { restaurantInfo: Restaurant; isFirst?: boolean }) {\r\n    const { _id, category, title, address, rating, reviews, certification, location } = restaurantInfo;\r\n    const currentPage = useAppSelector((state) => state.paginationSlice.currentPage);\r\n\r\n    const liElement = useRef<HTMLLIElement>(null);\r\n\r\n    useEffect(() => {\r\n        if (isFirst && liElement.current) {\r\n            liElement.current.scrollIntoView(false); // search 결과에서 사용. 첫번째 아이템이 하단에 내려가게.\r\n        }\r\n    }, [isFirst, currentPage]);\r\n\r\n    return (\r\n        <li style={{ width: `${__LI_WIDTH__}px`, borderWidth: `${__BORDER__ / 2}px` }} ref={liElement}>\r\n            <div onClick={() => (window.location.href = `/search/${_id}`)}>\r\n                <Thumb category={category} />\r\n                <DistanceContainer location={location.coordinates} />\r\n                <div className=\"container-right\">\r\n                    <dl>\r\n                        {certification ? (\r\n                            <dl>\r\n                                <dt className=\"sr-only\">채식 인증 내용</dt>\r\n                                <dd className=\"txt-cert\">{certification}</dd>\r\n                            </dl>\r\n                        ) : null}\r\n                        <dl>\r\n                            <dt className=\"sr-only\">식당 이름</dt>\r\n                            <dd className=\"txt-title\">{title}</dd>\r\n                            <dt className=\"sr-only\">업종</dt>\r\n                            <dd className=\"txt-category\">{category}</dd>\r\n                        </dl>\r\n                        <dl>\r\n                            <dt className=\"sr-only\">주소</dt>\r\n                            <dd className=\"txt-address\">{address}</dd>\r\n                        </dl>\r\n\r\n                        <dl className=\"container-rating-count\">\r\n                            <dt className=\"sr-only\">평점</dt>\r\n                            <dd className=\"txt-rating\">{rating}</dd>\r\n                            <dt className=\"sr-only\">리뷰 수</dt>\r\n                            <dd className=\"txt-count-comment\">{reviews ? reviews.length : 0}</dd>\r\n                        </dl>\r\n                    </dl>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport imgClose from '/images/icon-plus.svg';\r\nimport { useAppDispatch } from '../../../../renderer/store/hooks';\r\nimport appModalMode from '../../../../components/modal/appModalMode';\r\nimport { CATEGORY_FILTER_MODAL } from '../../../../renderer/_reducers/_slices/mapSlice';\r\n\r\nexport function CloseButton() {\r\n    const dispatch = useAppDispatch();\r\n\r\n    function handleClose() {\r\n        appModalMode(false);\r\n\r\n        dispatch(CATEGORY_FILTER_MODAL(false));\r\n    }\r\n\r\n    return (\r\n        <button type=\"button\" className=\"button-close\" onClick={handleClose}>\r\n            <img src={imgClose} alt=\"X 아이콘\" className=\"img-close\" />\r\n        </button>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {\r\n    ADD_SELECTED_CATEGORY,\r\n    CATEGORY_FILTER_MODAL,\r\n    SHOW_LIST_IN_REGION_MODAL,\r\n} from '../../../../renderer/_reducers/_slices/mapSlice';\r\nimport { useAppDispatch, useAppSelector } from '../../../../renderer/store/hooks';\r\n\r\nexport function SubmitButton() {\r\n    const dispatch = useAppDispatch();\r\n\r\n    const mapMode = useAppSelector((state) => state.mapSlice.mapMode);\r\n\r\n    const handleClick = () => {\r\n        // 체크한 업종에 대한 필터 진행.\r\n        // 체크한 업종 리스트\r\n        const checkedNode = Array.from(\r\n            document.querySelectorAll('.checkbox-category-filter') as NodeList\r\n        ) as HTMLInputElement[];\r\n\r\n        const totalCategoryCount: number = checkedNode.length; // 13\r\n        const checkedCategoryName: string[] = checkedNode\r\n            .filter((node) => node.checked === true)\r\n            .map((node) => node.value);\r\n\r\n        if (checkedCategoryName.length === 0) {\r\n            alert('업종을 선택해주세요.');\r\n            return;\r\n        }\r\n\r\n        if (totalCategoryCount === checkedCategoryName.length) {\r\n            // 전체 카테고리\r\n            dispatch(ADD_SELECTED_CATEGORY('*'));\r\n        } else {\r\n            // 스토어에 저장하고 루트 데이터에서 이 상태를 구독하게 만들기\r\n            dispatch(ADD_SELECTED_CATEGORY(checkedCategoryName));\r\n        }\r\n\r\n        // 지역탐색 모드이면 지역탐색 결과에 대한 필터 진행\r\n        if (mapMode === '지역탐색 모드') {\r\n            // 업종 필터 모달 끄기\r\n            dispatch(CATEGORY_FILTER_MODAL(false));\r\n\r\n            // show 지역리스트 모달 켜기\r\n            dispatch(SHOW_LIST_IN_REGION_MODAL(true));\r\n        } else if (mapMode === '반경탐색 모드') {\r\n            // 업종 필터 모달 끄기\r\n            dispatch(CATEGORY_FILTER_MODAL(false));\r\n\r\n            // 스와이프에서 보여주기\r\n        }\r\n\r\n        // 검색 모드이면 ...?\r\n    };\r\n\r\n    return (\r\n        <button type=\"button\" onClick={handleClick} className=\"button-apply-filter\">\r\n            적용하기\r\n        </button>\r\n    );\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../../../../renderer/store/hooks';\r\nimport { ADD_SELECTED_CATEGORY } from '../../../../renderer/_reducers/_slices/mapSlice';\r\nimport { CloseButton } from './CloseButton';\r\nimport { SubmitButton } from './SubmitButton';\r\nimport CATEGORIES from '../../../../components/image/CATEGORY';\r\n\r\nexport { CategoryFilterModal };\r\n\r\nfunction CategoryFilterModal() {\r\n    const dispatch = useAppDispatch();\r\n\r\n    const [show, setShow] = useState(false);\r\n    const categoryFilterModalOn = useAppSelector((state) => state.mapSlice.categoryFilterModalOn);\r\n\r\n    const [categoryList, _] = useState<string[]>(() => {\r\n        const tempList = Object.keys(CATEGORIES).filter((key) => key !== '기타'); // [일식, ... ]\r\n\r\n        dispatch(ADD_SELECTED_CATEGORY([...tempList].sort()));\r\n\r\n        return [...tempList].sort(); // 체크박스 렌더링용\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (categoryFilterModalOn === true) setShow(true);\r\n        else setShow(false);\r\n    }, [categoryFilterModalOn]);\r\n\r\n    const checkboxRefs = useRef<Array<React.RefObject<HTMLInputElement>>>([]);\r\n\r\n    useEffect(() => {\r\n        // current에 배열을 할당(ref 배열)\r\n        checkboxRefs.current = Array(categoryList.length)\r\n            .fill(null)\r\n            .map(() => React.createRef<HTMLInputElement>());\r\n    }, [categoryList]);\r\n\r\n    const handleUncheck = () => {\r\n        // current 배열을 순회하면서 check 끔\r\n        checkboxRefs.current.map((ref) => {\r\n            if (ref.current !== null) {\r\n                ref.current.checked = false;\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <article className={`modal-group-item ${show ? 'on' : ''}`}>\r\n            <h4>업종 필터</h4>\r\n            <form>\r\n                <div className=\"container-button-all-in-modal\">\r\n                    <button type=\"button\" onClick={handleUncheck} className=\"button-all-category\">\r\n                        전체 해제\r\n                    </button>\r\n                    <button type=\"reset\" className=\"button-all-category\">\r\n                        전체 선택\r\n                    </button>\r\n                </div>\r\n                <div className=\"wrapper-checkbox-category\">\r\n                    {categoryList.map((name, i) => {\r\n                        return <CategoryItem key={Math.random()} name={name} index={i} ref={checkboxRefs.current[i]} />;\r\n                    })}\r\n                </div>\r\n                <SubmitButton />\r\n            </form>\r\n            <CloseButton />\r\n        </article>\r\n    );\r\n}\r\n\r\n// 검색결과에서 재사용\r\nexport const CategoryItem = React.forwardRef<HTMLInputElement, { name: string; index: number }>(function CategoryItem(\r\n    { name, index }: { name: string; index: number },\r\n    ref: React.ForwardedRef<HTMLInputElement>\r\n) {\r\n    const selectedCategory = useAppSelector((state) => state.mapSlice.selectedCategory);\r\n    const [isChecked, setIsChecked] = useState(true);\r\n\r\n    const handleCheckboxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setIsChecked(event.target.checked);\r\n    };\r\n\r\n    useEffect(() => {\r\n        // 카테고리 선택 완료한 경우 체크상태 기억\r\n        setIsChecked(selectedCategory.includes(name));\r\n    }, [selectedCategory]);\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"checkbox\"\r\n                checked={isChecked}\r\n                onChange={handleCheckboxChange}\r\n                id={`checkboxCategory-${index}`}\r\n                className=\"checkbox-category-filter\"\r\n                value={name}\r\n                ref={ref}\r\n            />\r\n            <label htmlFor={`checkboxCategory-${index}`}>{name}</label>\r\n        </div>\r\n    );\r\n});\r\n"],"file":"assets/chunks/chunk-4063904f.js"}