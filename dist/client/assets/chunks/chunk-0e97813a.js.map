{"version":3,"file":"chunk-0e97813a.js","sources":["../../../../node_modules/vite-plugin-ssr/dist/esm/utils/isNodeJS.js","../../../../node_modules/vite-plugin-ssr/dist/esm/utils/createErrorWithCleanStackTrace.js","../../../../node_modules/vite-plugin-ssr/dist/esm/utils/getGlobalObject.js","../../../../node_modules/vite-plugin-ssr/dist/esm/utils/isObject.js","../../../../node_modules/vite-plugin-ssr/dist/esm/utils/unique.js","../../../../node_modules/vite-plugin-ssr/dist/esm/utils/assertSingleInstance.js","../../../../node_modules/vite-plugin-ssr/dist/esm/utils/projectInfo.js","../../../../node_modules/@brillout/picocolors/picocolors.browser.mjs","../../../../node_modules/vite-plugin-ssr/dist/esm/utils/assert.js","../../../../node_modules/vite-plugin-ssr/dist/esm/utils/isBrowser.js","../../../../node_modules/vite-plugin-ssr/dist/esm/utils/assertRoutingType.js","../../../../node_modules/vite-plugin-ssr/dist/esm/utils/isScriptFile.js","../../../../node_modules/vite-plugin-ssr/dist/esm/utils/slice.js","../../../../node_modules/vite-plugin-ssr/dist/esm/utils/parseUrl.js","../../../../node_modules/vite-plugin-ssr/dist/esm/utils/objectAssign.js","../../../../node_modules/vite-plugin-ssr/dist/esm/utils/isCallable.js","../../../../node_modules/vite-plugin-ssr/dist/esm/utils/sorter.js","../../../../node_modules/vite-plugin-ssr/dist/esm/utils/hasProp.js","../../../../node_modules/vite-plugin-ssr/dist/esm/utils/compareString.js","../../../../node_modules/vite-plugin-ssr/dist/esm/utils/isNotNullish.js","../../../../node_modules/vite-plugin-ssr/dist/esm/utils/filesystemPathHandling.js","../../../../node_modules/vite-plugin-ssr/dist/esm/utils/assertDefaultExport.js","../../../../node_modules/vite-plugin-ssr/dist/esm/utils/objectEntries.js","../../../../node_modules/vite-plugin-ssr/dist/esm/shared/getPageFiles/assertExports.js","../../../../node_modules/vite-plugin-ssr/dist/esm/shared/getPageFiles/getExports.js","../../../../node_modules/vite-plugin-ssr/dist/esm/shared/determinePageIdOld.js","../../../../node_modules/vite-plugin-ssr/dist/esm/shared/assertPageFilePath.js","../../../../node_modules/vite-plugin-ssr/dist/esm/shared/error-page.js","../../../../node_modules/vite-plugin-ssr/dist/esm/shared/getPageFiles/fileTypes.js","../../../../node_modules/vite-plugin-ssr/dist/esm/shared/getPageFiles/getPageFileObject.js","../../../../node_modules/vite-plugin-ssr/dist/esm/shared/getPageFiles/assertPageConfigs.js","../../../../node_modules/@brillout/json-serializer/dist/esm/types.js","../../../../node_modules/@brillout/json-serializer/dist/esm/parse.js","../../../../node_modules/vite-plugin-ssr/dist/esm/shared/getPageFiles/parsePageConfigs.js","../../../../node_modules/vite-plugin-ssr/dist/esm/shared/getPageFiles/parseGlobResults.js","../../../../node_modules/vite-plugin-ssr/dist/esm/shared/getPageFiles/setPageFiles.js","../../../../node_modules/vite-plugin-ssr/dist/esm/shared/getPageFiles/getAllPageIdFiles.js","../../../../node_modules/vite-plugin-ssr/dist/esm/utils/humanizeTime.js","../../../../node_modules/vite-plugin-ssr/dist/esm/utils/executeHook.js","../../../../node_modules/vite-plugin-ssr/dist/esm/utils/getCurrentUrl.js","../../../../node_modules/vite-plugin-ssr/dist/esm/client/utils.js","../../../../node_modules/vite-plugin-ssr/dist/esm/client/getPageContextSerializedInHtml.js","../../../../node_modules/vite-plugin-ssr/dist/esm/shared/getHook.js","../../../../node_modules/vite-plugin-ssr/dist/esm/shared/sortPageContext.js","../../../../node_modules/vite-plugin-ssr/dist/esm/shared/addIs404ToPageProps.js","../../../../node_modules/vite-plugin-ssr/dist/esm/shared/notSerializable.js","../../../../node_modules/vite-plugin-ssr/dist/esm/client/getPageContextProxyForUser.js","../../../../node_modules/vite-plugin-ssr/dist/esm/client/preparePageContextForUserConsumptionClientSide.js","../../../../node_modules/vite-plugin-ssr/dist/esm/shared/page-configs/findPageConfig.js","../../../../node_modules/vite-plugin-ssr/dist/esm/shared/page-configs/loadPageCode.js","../../../../node_modules/vite-plugin-ssr/dist/esm/client/loadPageFilesClientSide.js","../../../../node_modules/vite-plugin-ssr/dist/esm/client/executeOnRenderClientHook.js"],"sourcesContent":["export function isNodeJS() {\n    if (typeof process === 'undefined')\n        return false;\n    if (!process.cwd)\n        return false;\n    // https://stackoverflow.com/questions/4224606/how-to-check-whether-a-script-is-running-under-node-js/35813135#35813135\n    if (!process.versions || typeof process.versions.node === 'undefined')\n        return false;\n    // https://stackoverflow.com/questions/4224606/how-to-check-whether-a-script-is-running-under-node-js/35813135#comment92529277_35813135\n    if (!process.release || process.release.name !== 'node')\n        return false;\n    return true;\n}\n","export { createErrorWithCleanStackTrace };\nimport { isNodeJS } from './isNodeJS';\nfunction createErrorWithCleanStackTrace(errorMessage, numberOfStackTraceLinesToRemove) {\n    let err;\n    {\n        var stackTraceLimit__original = Error.stackTraceLimit;\n        Error.stackTraceLimit = Infinity;\n        err = new Error(errorMessage);\n        Error.stackTraceLimit = stackTraceLimit__original;\n    }\n    if (isNodeJS()) {\n        err.stack = clean(err.stack, numberOfStackTraceLinesToRemove);\n    }\n    return err;\n}\nfunction clean(errStack, numberOfStackTraceLinesToRemove) {\n    if (!errStack) {\n        return errStack;\n    }\n    const stackLines = splitByLine(errStack);\n    let linesRemoved = 0;\n    const stackLine__cleaned = stackLines\n        .filter((line) => {\n        // Remove internal stack traces\n        if (line.includes(' (internal/') || line.includes(' (node:internal')) {\n            return false;\n        }\n        if (linesRemoved < numberOfStackTraceLinesToRemove && isStackTraceLine(line)) {\n            linesRemoved++;\n            return false;\n        }\n        return true;\n    })\n        .join('\\n');\n    return stackLine__cleaned;\n}\nfunction isStackTraceLine(line) {\n    return line.startsWith('    at ');\n}\nfunction splitByLine(str) {\n    // https://stackoverflow.com/questions/21895233/how-in-node-to-split-string-by-newline-n\n    return str.split(/\\r?\\n/);\n}\n","export function getGlobalObject(\n// We use the filename as key; each `getGlobalObject()` call should live in a unique filename.\nkey, defaultValue) {\n    const allGlobalObjects = (globalThis.__vite_plugin_ssr = globalThis.__vite_plugin_ssr || {});\n    const globalObject = (allGlobalObjects[key] = allGlobalObjects[key] || defaultValue);\n    return globalObject;\n}\n","export function isObject(value) {\n    return typeof value === 'object' && value !== null;\n}\n","export { unique };\nfunction unique(arr) {\n    return Array.from(new Set(arr));\n}\n","export { onClientEntry_ServerRouting };\nexport { onClientEntry_ClientRouting };\nexport { onProjectInfo };\n//  - Throw error if there are two different versions of vite-plugin-ssr loaded\n//  - Show warning if entry of Client Routing and entry of Server Routing are both loaded\n//  - Show warning if vite-plugin-ssr is loaded twice\nimport { unique } from './unique';\nimport { getGlobalObject } from './getGlobalObject';\n/* Use original assertUsage() & assertWarning() after all CJS is removed from node_modules/vite-plugin-ssr/dist/\nimport { assertUsage, assertWarning } from './assert'\n*/\nconst globalObject = getGlobalObject('assertPackageInstances.ts', {\n    instances: [],\n    alreadyLogged: new Set()\n});\nconst clientRuntimesClonflict = \"The client runtime of Server Routing as well as the client runtime of Client Routing are both being loaded. Make sure they aren't loaded both at the same time for a given page. See https://vite-plugin-ssr.com/client-runtimes-conflict\";\nconst clientNotSingleInstance = \"Two vite-plugin-ssr client runtime instances are being loaded. Make sure your client-side bundles don't include vite-plugin-ssr twice. (In order to reduce the size of your client-side JavaScript bundles.)\";\nfunction assertSingleInstance() {\n    {\n        const versions = unique(globalObject.instances);\n        if (versions.length > 1) {\n            const errMsg = `Both vite-plugin-ssr@${versions[0]} and vite-plugin-ssr@${versions[1]} loaded. Only one version should be loaded.`;\n            /*/\n            console.warn(errMsg)\n            /*/\n            assertUsage(false, errMsg);\n            //*/\n        }\n    }\n    if (globalObject.checkSingleInstance && globalObject.instances.length > 1) {\n        /*/ Not sure whether circular dependency can cause problems? In principle not since client-side code is ESM.\n        console.warn(clientNotSingleInstance)\n        /*/\n        assertWarning(false, clientNotSingleInstance, { onlyOnce: true, showStackTrace: true });\n        //*/\n    }\n}\nfunction onClientEntry_ServerRouting(isProduction) {\n    assertWarning(globalObject.isClientRouting !== true, clientRuntimesClonflict, {\n        onlyOnce: true,\n        showStackTrace: true\n    });\n    assertWarning(globalObject.isClientRouting === undefined, clientNotSingleInstance, {\n        onlyOnce: true,\n        showStackTrace: true\n    });\n    globalObject.isClientRouting = false;\n    if (isProduction)\n        globalObject.checkSingleInstance = true;\n    assertSingleInstance();\n}\nfunction onClientEntry_ClientRouting(isProduction) {\n    assertWarning(globalObject.isClientRouting !== false, clientRuntimesClonflict, {\n        onlyOnce: true,\n        showStackTrace: true\n    });\n    assertWarning(globalObject.isClientRouting === undefined, clientNotSingleInstance, {\n        onlyOnce: true,\n        showStackTrace: true\n    });\n    globalObject.isClientRouting = true;\n    if (isProduction)\n        globalObject.checkSingleInstance = true;\n    assertSingleInstance();\n}\n// Called by utils/projectInfo.ts which is loaded by all entries (since utils/asserts.ts depends on utils/projectInfo.ts, we can have confidence that onProjectInfo() is called by each entry). That way we don't have to call a callback for every entry (there are a *lot* of entries: `client/router/`, `client/`, `node/runtime/`, `node/plugin/`, `node/cli`).\nfunction onProjectInfo(projectVersion) {\n    globalObject.instances.push(projectVersion);\n    assertSingleInstance();\n}\nfunction assertUsage(condition, errorMessage) {\n    if (condition) {\n        return;\n    }\n    const errMsg = `[vite-plugin-ssr][Wrong Usage] ${errorMessage}`;\n    throw new Error(errMsg);\n}\nfunction assertWarning(condition, errorMessage, { onlyOnce, showStackTrace }) {\n    if (condition) {\n        return;\n    }\n    const msg = `[vite-plugin-ssr][Warning] ${errorMessage}`;\n    if (onlyOnce) {\n        const { alreadyLogged } = globalObject;\n        const key = onlyOnce === true ? msg : onlyOnce;\n        if (alreadyLogged.has(key)) {\n            return;\n        }\n        else {\n            alreadyLogged.add(key);\n        }\n    }\n    if (showStackTrace) {\n        console.warn(new Error(msg));\n    }\n    else {\n        console.warn(msg);\n    }\n}\n","export { projectInfo };\nimport { onProjectInfo } from './assertSingleInstance';\nconst PROJECT_VERSION = '0.4.134';\nconst projectInfo = {\n    projectName: 'vite-plugin-ssr',\n    projectVersion: PROJECT_VERSION,\n    npmPackageName: 'vite-plugin-ssr',\n    githubRepository: 'https://github.com/brillout/vite-plugin-ssr'\n};\n// Trick: since `utils/asserts.ts` depends on this file (`utils/projectInfo.ts`), we can have confidence that this file is always instantiated. So that we don't have to initialize this code snippet at every possible entry. (There are a *lot* of entries: `client/router/`, `client/`, `node/`, `node/plugin/`, `node/cli`, etc.)\nonProjectInfo(projectInfo.projectVersion);\n","const v=new Proxy((s) => s,{get:()=>v})\nexport default v\n","export { assert };\nexport { assertUsage };\nexport { assertWarning };\nexport { assertInfo };\nexport { getProjectError };\nexport { addOnBeforeLogHook };\nexport { getAssertErrMsg };\nexport { overwriteAssertProductionLogger };\nexport { isBug };\nimport { createErrorWithCleanStackTrace } from './createErrorWithCleanStackTrace';\nimport { getGlobalObject } from './getGlobalObject';\nimport { isObject } from './isObject';\nimport { projectInfo } from './projectInfo';\nimport pc from '@brillout/picocolors';\nconst globalObject = getGlobalObject('utils/assert.ts', {\n    alreadyLogged: new Set(),\n    // Production logger. Overwritten by loggerNotProd.ts in non-production environments.\n    logger(msg, logType) {\n        if (logType === 'info') {\n            console.log(msg);\n        }\n        else {\n            console.warn(msg);\n        }\n    },\n    showStackTraceList: new WeakSet()\n});\nconst projectTag = `[${projectInfo.npmPackageName}]`;\nconst projectTagWithVersion = `[${projectInfo.npmPackageName}@${projectInfo.projectVersion}]`;\nconst numberOfStackTraceLinesToRemove = 2;\nfunction assert(condition, debugInfo) {\n    var _a;\n    if (condition)\n        return;\n    const debugStr = (() => {\n        if (!debugInfo) {\n            return null;\n        }\n        const debugInfoSerialized = typeof debugInfo === 'string' ? debugInfo : '`' + JSON.stringify(debugInfo) + '`';\n        return `Debug info (this is for the ${projectInfo.projectName} maintainers; you can ignore this): ${debugInfoSerialized}`;\n    })();\n    let errMsg = [\n        `You stumbled upon a bug in ${projectInfo.projectName}'s source code.`,\n        `Go to ${projectInfo.githubRepository}/issues/new and copy-paste this error; a maintainer will fix the bug (usually under 24 hours).`,\n        debugStr\n    ]\n        .filter(Boolean)\n        .join(' ');\n    errMsg = addWhitespace(errMsg);\n    errMsg = addPrefixAssertType(errMsg, 'Bug');\n    errMsg = addPrefixProjctName(errMsg, true);\n    const internalError = createErrorWithCleanStackTrace(errMsg, numberOfStackTraceLinesToRemove);\n    (_a = globalObject.onBeforeLog) === null || _a === void 0 ? void 0 : _a.call(globalObject);\n    throw internalError;\n}\nfunction assertUsage(condition, errMsg, { showStackTrace } = {}) {\n    var _a;\n    if (condition)\n        return;\n    errMsg = addWhitespace(errMsg);\n    errMsg = addPrefixAssertType(errMsg, 'Wrong Usage');\n    errMsg = addPrefixProjctName(errMsg);\n    const usageError = createErrorWithCleanStackTrace(errMsg, numberOfStackTraceLinesToRemove);\n    if (showStackTrace) {\n        globalObject.showStackTraceList.add(usageError);\n    }\n    (_a = globalObject.onBeforeLog) === null || _a === void 0 ? void 0 : _a.call(globalObject);\n    throw usageError;\n}\nfunction getProjectError(errMsg) {\n    errMsg = addWhitespace(errMsg);\n    errMsg = addPrefixAssertType(errMsg, 'Error');\n    errMsg = addPrefixProjctName(errMsg);\n    const projectError = createErrorWithCleanStackTrace(errMsg, numberOfStackTraceLinesToRemove);\n    return projectError;\n}\nfunction assertWarning(condition, msg, { onlyOnce, showStackTrace }) {\n    var _a;\n    if (condition)\n        return;\n    msg = addWhitespace(msg);\n    msg = addPrefixAssertType(msg, 'Warning');\n    msg = addPrefixProjctName(msg);\n    if (onlyOnce) {\n        const { alreadyLogged } = globalObject;\n        const key = onlyOnce === true ? msg : onlyOnce;\n        if (alreadyLogged.has(key)) {\n            return;\n        }\n        else {\n            alreadyLogged.add(key);\n        }\n    }\n    (_a = globalObject.onBeforeLog) === null || _a === void 0 ? void 0 : _a.call(globalObject);\n    if (showStackTrace) {\n        const err = new Error(msg);\n        globalObject.showStackTraceList.add(err);\n        globalObject.logger(err, 'warn');\n    }\n    else {\n        globalObject.logger(msg, 'warn');\n    }\n}\nfunction assertInfo(condition, msg, { onlyOnce }) {\n    var _a;\n    if (condition) {\n        return;\n    }\n    msg = addWhitespace(msg);\n    msg = addPrefixProjctName(msg);\n    if (onlyOnce) {\n        const { alreadyLogged } = globalObject;\n        const key = msg;\n        if (alreadyLogged.has(key)) {\n            return;\n        }\n        else {\n            alreadyLogged.add(key);\n        }\n    }\n    (_a = globalObject.onBeforeLog) === null || _a === void 0 ? void 0 : _a.call(globalObject);\n    globalObject.logger(msg, 'info');\n}\nfunction addOnBeforeLogHook(onBeforeLog) {\n    globalObject.onBeforeLog = onBeforeLog;\n}\nfunction addPrefixAssertType(msg, tag) {\n    let prefix = `[${tag}]`;\n    const color = tag === 'Warning' ? 'yellow' : 'red';\n    prefix = pc[color](prefix);\n    return `${prefix}${msg}`;\n}\nfunction addWhitespace(msg) {\n    if (msg.startsWith('[')) {\n        return msg;\n    }\n    else {\n        return ` ${msg}`;\n    }\n}\nfunction addPrefixProjctName(msg, showProjectVersion = false) {\n    const prefix = showProjectVersion ? projectTagWithVersion : projectTag;\n    return `${prefix}${msg}`;\n}\nfunction getAssertErrMsg(thing) {\n    let errMsg;\n    let errStack = null;\n    if (typeof thing === 'string') {\n        errMsg = thing;\n    }\n    else if (isObject(thing) && typeof thing.message === 'string' && typeof thing.stack === 'string') {\n        errMsg = thing.message;\n        errStack = thing.stack;\n    }\n    else {\n        return null;\n    }\n    let assertMsg;\n    let isBug;\n    if (errMsg.startsWith(projectTag)) {\n        assertMsg = errMsg.slice(projectTag.length);\n        isBug = false;\n    }\n    else if (errMsg.startsWith(projectTagWithVersion)) {\n        assertMsg = errMsg.slice(projectTagWithVersion.length);\n        isBug = true;\n    }\n    else {\n        return null;\n    }\n    // Append stack trace\n    if (errStack && (isBug || globalObject.showStackTraceList.has(thing))) {\n        assertMsg = `${assertMsg}\\n${removeErrMsg(errStack)}`;\n    }\n    const showVikeVersion = isBug;\n    return { assertMsg, showVikeVersion };\n}\nfunction removeErrMsg(stack) {\n    if (typeof stack !== 'string')\n        return String(stack);\n    const [firstLine, ...stackLines] = stack.split('\\n');\n    if (!firstLine.startsWith('Error: '))\n        return stack;\n    return stackLines.join('\\n');\n}\nfunction overwriteAssertProductionLogger(logger) {\n    globalObject.logger = logger;\n}\nfunction isBug(err) {\n    return !String(err).includes('[Bug]');\n}\n","export function isBrowser() {\n    // Using `typeof window !== 'undefined'` alone is not enough because some users use https://www.npmjs.com/package/ssr-window\n    return typeof window !== 'undefined' && typeof window.scrollY === 'number';\n}\n","export { assertClientRouting };\nexport { assertServerRouting };\nexport { checkIfClientRouting };\nimport { assertUsage, assertWarning } from './assert';\nimport { getGlobalObject } from './getGlobalObject';\nimport { isBrowser } from './isBrowser';\nconst state = getGlobalObject('utils/assertRouterType.ts', {});\nfunction assertClientRouting() {\n    assertNoContradiction(checkIfClientRouting());\n    state.isClientRouting = true;\n}\nfunction checkIfClientRouting() {\n    return state.isClientRouting !== false;\n}\nfunction assertServerRouting() {\n    assertNoContradiction(state.isClientRouting !== true);\n    state.isClientRouting = false;\n}\nfunction assertNoContradiction(noContradiction) {\n    // If an assertion fails because of a wrong usage, then we assume that the user is trying to import from 'vite-plugin-ssr/client/router' while not setting `clientRouting` to `true`. Note that 'vite-plugin-ssr/client' only exports the type `PageContextBuiltInClient` and that the package.json#exports entry 'vite-plugin-ssr/client' will eventually be removed.\n    assertUsage(isBrowser(), \"`import { something } from 'vite-plugin-ssr/client/router'` is forbidden on the server-side\", { showStackTrace: true });\n    assertWarning(noContradiction, \"You shouldn't `import { something } from 'vite-plugin-ssr/client/router'` when using Server Routing. The 'vite-plugin-ssr/client/router' utilities work only with Client Routing. In particular, don't `import { navigate }` nor `import { prefetch }` as they unnecessarily bloat your client-side bundle.\", { showStackTrace: true, onlyOnce: true });\n}\n","export { isScriptFile };\nexport { isTemplateFile };\nexport { scriptFileExtensions };\nexport { scriptFileExtensionList };\nimport { assert } from './assert';\n// We can't use a RegExp:\n//  - Needs to work with Micromatch: https://github.com/micromatch/micromatch because:\n//    - Vite's `import.meta.glob()` uses Micromatch\n//  - We need this to be a whitelist because:\n//   - A pattern `*([a-zA-Z0-9]` doesn't work.\n//     - Because of ReScript: `.res` are ReScript source files which need to be ignored. (The ReScript compiler generates `.js` files alongside `.res` files.)\n//   - Black listing doesn't work.\n//     - We cannot implement a blacklist with a glob pattern.\n//     - A post `import.meta.glob()` blacklist filtering doesn't work because Vite would still process the files (e.g. including them in the bundle).\n// prettier-ignore\nconst extJavaScript = [\n    'js',\n    'ts',\n    'cjs',\n    'cts',\n    'mjs',\n    'mts',\n    'jsx',\n    'tsx',\n    'cjsx',\n    'ctsx',\n    'mjsx',\n    'mtsx',\n];\n// prettier-ignore\nconst extTemplates = [\n    'vue',\n    'svelte',\n    'marko',\n    'md',\n    'mdx'\n];\nconst scriptFileExtensionList = [...extJavaScript, ...extTemplates];\nconst scriptFileExtensions = '(' + scriptFileExtensionList.join('|') + ')';\nfunction isScriptFile(filePath) {\n    const yes = scriptFileExtensionList.some((ext) => filePath.endsWith('.' + ext));\n    assert(!isJavaScriptFile(filePath) || yes);\n    return yes;\n}\nfunction isJavaScriptFile(filePath) {\n    return /\\.(c|m)?(j|t)sx?$/.test(filePath);\n}\nfunction isTemplateFile(filePath) {\n    return extTemplates.some((ext) => filePath.endsWith('.' + ext));\n}\n","import { assert } from './assert';\nexport { slice };\nfunction slice(thing, from, to) {\n    if (typeof thing === 'string') {\n        return sliceArray(thing.split(''), from, to).join('');\n    }\n    else {\n        return sliceArray(thing, from, to);\n    }\n}\nfunction sliceArray(list, from, to) {\n    const listSlice = [];\n    let start = from >= 0 ? from : list.length + from;\n    assert(start >= 0 && start <= list.length);\n    let end = to >= 0 ? to : list.length + to;\n    assert(end >= 0 && end <= list.length);\n    while (true) {\n        if (start === end) {\n            break;\n        }\n        if (start === list.length) {\n            start = 0;\n        }\n        if (start === end) {\n            break;\n        }\n        const el = list[start];\n        assert(el !== undefined);\n        listSlice.push(el);\n        start++;\n    }\n    return listSlice;\n}\n","// Unit tests at ./parseUrl.spec.ts\nexport { parseUrl };\nexport { isParsable };\nexport { prependBase };\nexport { assertUsageUrl };\nexport { normalizeBaseServer };\nexport { isBaseServer };\nexport { isBaseAssets };\nimport { slice } from './slice';\nimport { assert, assertUsage } from './assert';\nfunction isParsable(url) {\n    // `parseUrl()` works with these URLs\n    return (url.startsWith('/') ||\n        url.startsWith('http') ||\n        url.startsWith('tauri://') ||\n        url.startsWith('.') ||\n        url.startsWith('?') ||\n        url.startsWith('#') ||\n        url === '');\n}\nfunction assertUsageUrl(url, errPrefix) {\n    assert(errPrefix.includes(' but '));\n    assertUsage(typeof url === 'string', `${errPrefix} should be a string`);\n    if (isParsable(url))\n        return;\n    if (!url.startsWith('/') && !url.includes(':')) {\n        assertUsage(false, `${errPrefix} is '${url}' and it should be '/${url}' instead (URL pathnames should start with a leading slash)`);\n    }\n    else {\n        assertUsage(false, `${errPrefix} isn't a valid URL`);\n    }\n}\nfunction parseUrl(url, baseServer) {\n    assert(isParsable(url), { url });\n    assert(baseServer.startsWith('/'), { url, baseServer });\n    // Hash\n    const [urlWithoutHash, ...hashList] = url.split('#');\n    assert(urlWithoutHash !== undefined);\n    const hashOriginal = ['', ...hashList].join('#') || null;\n    assert(hashOriginal === null || hashOriginal.startsWith('#'));\n    const hash = hashOriginal === null ? '' : decodeSafe(hashOriginal.slice(1));\n    // Search\n    const [urlWithoutSearch, ...searchList] = urlWithoutHash.split('?');\n    assert(urlWithoutSearch !== undefined);\n    const searchOriginal = ['', ...searchList].join('?') || null;\n    assert(searchOriginal === null || searchOriginal.startsWith('?'), { url, searchOriginal });\n    const search = {};\n    const searchAll = {};\n    Array.from(new URLSearchParams(searchOriginal || '')).forEach(([key, val]) => {\n        search[key] = val;\n        searchAll[key] = [...(searchAll[key] || []), val];\n    });\n    // Origin + pathname\n    const { origin, pathnameResolved } = parseWithNewUrl(urlWithoutSearch, baseServer);\n    assert(origin === null || origin === decodeSafe(origin), { origin }); // AFAICT decoding the origin is useless\n    assert(pathnameResolved.startsWith('/'), { url, pathnameResolved });\n    assert(origin === null || url.startsWith(origin), { url, origin });\n    // `pathnameOriginal`\n    const pathnameOriginal = urlWithoutSearch.slice((origin || '').length);\n    {\n        const urlRecreated = `${origin || ''}${pathnameOriginal}${searchOriginal || ''}${hashOriginal || ''}`;\n        assert(url === urlRecreated, { url, urlRecreated });\n    }\n    // Base URL\n    let { pathname, hasBaseServer } = analyzeBaseServer(pathnameResolved, baseServer);\n    pathname = decodePathname(pathname);\n    assert(pathname.startsWith('/'));\n    return {\n        origin,\n        pathname,\n        pathnameOriginal: pathnameOriginal,\n        hasBaseServer,\n        search,\n        searchAll,\n        searchOriginal,\n        hash,\n        hashOriginal\n    };\n}\nfunction decodeSafe(urlComponent) {\n    try {\n        return decodeURIComponent(urlComponent);\n    }\n    catch { }\n    try {\n        return decodeURI(urlComponent);\n    }\n    catch { }\n    return urlComponent;\n}\nfunction decodePathname(urlPathname) {\n    return urlPathname\n        .split('/')\n        .map((dir) => decodeSafe(dir).split('/').join('%2F'))\n        .join('/');\n}\nfunction parseWithNewUrl(urlWithoutSearch, baseServer) {\n    var _a;\n    // `new URL('//', 'https://example.org')` throws `ERR_INVALID_URL`\n    if (urlWithoutSearch.startsWith('//')) {\n        return { origin: null, pathnameResolved: urlWithoutSearch };\n    }\n    let isTauriProtocol = false;\n    const PROTOCOL_TAURI = 'tauri://';\n    const PROTOCOL_FAKE = 'http://';\n    if (urlWithoutSearch.startsWith(PROTOCOL_TAURI)) {\n        isTauriProtocol = true;\n        urlWithoutSearch = PROTOCOL_FAKE + urlWithoutSearch.slice(PROTOCOL_TAURI.length);\n    }\n    let origin;\n    let pathnameResolved;\n    try {\n        // `new URL(url)` throws an error if `url` doesn't have an origin\n        const urlParsed = new URL(urlWithoutSearch);\n        origin = urlParsed.origin;\n        pathnameResolved = urlParsed.pathname;\n    }\n    catch (err) {\n        // `url` has no origin\n        origin = null;\n        // In the browser, this is the Base URL of the current URL\n        let base = typeof window !== 'undefined' &&\n            (\n            // We need to access safely in case the user sets `window` in Node.js\n            (_a = window === null || window === void 0 ? void 0 : window.document) === null || _a === void 0 ? void 0 : _a.baseURI);\n        base = base || 'http://fake.example.org' + baseServer;\n        // `new Url()` supports:\n        //  - `url === '/absolute/path'`\n        //  - `url === './relative/path'`\n        //  - `url === '?queryWithoutPath'`\n        //  - `url === '''`\n        // `base` in `new URL(url, base)` is used for resolving relative paths (`new URL()` doesn't remove `base` from `pathname`)\n        const urlParsed = new URL(urlWithoutSearch, base);\n        pathnameResolved = urlParsed.pathname;\n    }\n    if (!pathnameResolved)\n        pathnameResolved = '/';\n    if (isTauriProtocol) {\n        assert(origin);\n        assert(origin.startsWith(PROTOCOL_FAKE));\n        origin = PROTOCOL_TAURI + origin.slice(PROTOCOL_FAKE.length);\n    }\n    assert(pathnameResolved.startsWith('/'), { urlWithoutSearch, pathnameResolved });\n    // The URL pathname should be the URL without origin, query string, and hash.\n    //  - https://developer.mozilla.org/en-US/docs/Web/API/URL/pathname\n    assert(pathnameResolved === pathnameResolved.split('?')[0].split('#')[0]);\n    return { origin, pathnameResolved };\n}\n/* Not needed anymore?\nfunction assertUsageBaseServer(baseServer: string, usageErrorMessagePrefix: string = '') {\n  assertUsage(\n    !baseServer.startsWith('http'),\n    usageErrorMessagePrefix +\n      '`base` is not allowed to start with `http`. Consider using `baseAssets` instead, see https://vite-plugin-ssr.com/base-url'\n  )\n  assertUsage(\n    baseServer.startsWith('/'),\n    usageErrorMessagePrefix + 'Wrong `base` value `' + baseServer + '`; `base` should start with `/`.'\n  )\n  assert(isBaseServer(baseServer))\n}\n*/\nfunction assertPathname(urlPathname) {\n    assert(urlPathname.startsWith('/'));\n    assert(!urlPathname.includes('?'));\n    assert(!urlPathname.includes('#'));\n}\nfunction analyzeBaseServer(urlPathnameWithBase, baseServer) {\n    assertPathname(urlPathnameWithBase);\n    assert(isBaseServer(baseServer));\n    // Mutable\n    let urlPathname = urlPathnameWithBase;\n    assert(urlPathname.startsWith('/'));\n    assert(baseServer.startsWith('/'));\n    if (baseServer === '/') {\n        const pathname = urlPathnameWithBase;\n        return { pathname, hasBaseServer: true };\n    }\n    // Support `url === '/some-base-url' && baseServer === '/some-base-url/'`\n    let baseServerNormalized = baseServer;\n    if (baseServer.endsWith('/') && urlPathname === slice(baseServer, 0, -1)) {\n        baseServerNormalized = slice(baseServer, 0, -1);\n        assert(urlPathname === baseServerNormalized);\n    }\n    if (!urlPathname.startsWith(baseServerNormalized)) {\n        const pathname = urlPathnameWithBase;\n        return { pathname, hasBaseServer: false };\n    }\n    assert(urlPathname.startsWith('/') || urlPathname.startsWith('http'));\n    assert(urlPathname.startsWith(baseServerNormalized));\n    urlPathname = urlPathname.slice(baseServerNormalized.length);\n    if (!urlPathname.startsWith('/'))\n        urlPathname = '/' + urlPathname;\n    assert(urlPathname.startsWith('/'));\n    return { pathname: urlPathname, hasBaseServer: true };\n}\nfunction prependBase(url, baseServer) {\n    if (baseServer.startsWith('http')) {\n        const baseAssets = baseServer;\n        const baseAssetsNormalized = normalizeBaseAssets(baseAssets);\n        assert(!baseAssetsNormalized.endsWith('/'));\n        assert(url.startsWith('/'));\n        return `${baseAssetsNormalized}${url}`;\n    }\n    assert(isBaseServer(baseServer));\n    const baseServerNormalized = normalizeBaseServer(baseServer);\n    if (baseServerNormalized === '/')\n        return url;\n    assert(!baseServerNormalized.endsWith('/'));\n    assert(url.startsWith('/'));\n    return `${baseServerNormalized}${url}`;\n}\nfunction normalizeBaseServer(baseServer) {\n    let baseServerNormalized = baseServer;\n    if (baseServerNormalized.endsWith('/') && baseServerNormalized !== '/') {\n        baseServerNormalized = slice(baseServerNormalized, 0, -1);\n    }\n    // We can and should expect `baseServer` to not contain `/` doublets.\n    assert(!baseServerNormalized.endsWith('/') || baseServerNormalized === '/');\n    return baseServerNormalized;\n}\nfunction isBaseServer(baseServer) {\n    return baseServer.startsWith('/');\n}\nfunction isBaseAssets(base) {\n    return base.startsWith('/') || base.startsWith('http://') || base.startsWith('https://');\n}\nfunction normalizeBaseAssets(baseAssets) {\n    let baseAssetsNormalized = baseAssets;\n    if (baseAssetsNormalized.endsWith('/')) {\n        baseAssetsNormalized = slice(baseAssetsNormalized, 0, -1);\n    }\n    assert(!baseAssetsNormalized.endsWith('/'));\n    return baseAssetsNormalized;\n}\n","export { objectAssign };\n// Same as `Object.assign()` but with type inference\nfunction objectAssign(obj, objAddendum) {\n    Object.assign(obj, objAddendum);\n}\n","export function isCallable(thing) {\n    return thing instanceof Function || typeof thing === 'function';\n}\n","import { assert } from './assert';\nexport { higherFirst };\nexport { lowerFirst };\nexport { makeFirst };\nexport { makeLast };\n// -1 => element1 first (i.e. `indexOf(element1) < indexOf(element2)`)\n// +1 => element2 first (i.e. `indexOf(element2) < indexOf(element1)`)\n// 0 => keep original order of element1 and element2\nfunction higherFirst(getValue) {\n    return (element1, element2) => {\n        const val1 = getValue(element1);\n        const val2 = getValue(element2);\n        if (val1 === val2) {\n            return 0;\n        }\n        return val1 > val2 ? -1 : 1;\n    };\n}\nfunction lowerFirst(getValue) {\n    return (element1, element2) => {\n        const val1 = getValue(element1);\n        const val2 = getValue(element2);\n        if (val1 === val2) {\n            return 0;\n        }\n        return val1 < val2 ? -1 : 1;\n    };\n}\nfunction makeFirst(getValue) {\n    return (element1, element2) => {\n        const val1 = getValue(element1);\n        const val2 = getValue(element2);\n        assert([true, false, null].includes(val1));\n        assert([true, false, null].includes(val2));\n        if (val1 === val2) {\n            return 0;\n        }\n        if (val1 === true || val2 === false) {\n            return -1;\n        }\n        if (val2 === true || val1 === false) {\n            return 1;\n        }\n        assert(false);\n    };\n}\nfunction makeLast(getValue) {\n    return makeFirst((element) => {\n        const val = getValue(element);\n        if (val === null) {\n            return null;\n        }\n        else {\n            return !val;\n        }\n    });\n}\n","export { hasProp };\n// - https://2ality.com/2020/06/type-guards-assertion-functions-typescript.html\n// - https://www.typescriptlang.org/play?#code/GYVwdgxgLglg9mABDAzgFQJ4AcCmdgAUAbgIYA2IOAXIiWBgDSJTbWIDkARnHGTnewCUNUhRzIUibr35gA3AFgAUKEiwEEzLnzFylGnUbNWNdmBABbTjgBOQkXvGpE5q7cUrw0eElRa8hKL6tPRMLLimKFA2MGAA5vaIQU6SUTHxHqreGn6sOskGocYRHOAA1mBwAO5gickSiOWVNZle6r7oeYGOhUbhbGmxcYgAvKVgFdW1wlI8fHSIAN7KiMiExeIjW+OTNeyIgksrq4g2OFAgNkjRlMcAvsdnF1cb+EmOo9v9Hg9KyhAIKK0GhNKajRAAFgATMplCQUChbFACLltIQSEwzJZrHZBIJ-oCZAA6MhwOIEEj4v6eNQ+WgIpEEAFgAAmMHaIImzTAM3hiJsUEkzLZ7SOShOa0QTIQIp8hyelzAx1WUAAFjZqi4cFVEABRGwamwEdgAQQZArpADESDAyEJlHcgA\nimport { isCallable } from './isCallable';\nimport { isObject } from './isObject';\n// prettier-ignore\nfunction hasProp(obj, prop, type = 'unknown') {\n    if (!isObject(obj))\n        return false;\n    if (!(prop in obj)) {\n        return type === 'undefined';\n    }\n    if (type === 'unknown') {\n        return true;\n    }\n    const propValue = obj[prop];\n    if (type === 'array') {\n        return Array.isArray(propValue);\n    }\n    if (type === 'object') {\n        return isObject(propValue);\n    }\n    if (type === 'string[]') {\n        return Array.isArray(propValue) && propValue.every(el => typeof el === 'string');\n    }\n    if (type === 'function') {\n        return isCallable(propValue);\n    }\n    if (Array.isArray(type)) {\n        return typeof propValue === 'string' && type.includes(propValue);\n    }\n    if (type === 'null') {\n        return propValue === null;\n    }\n    if (type === 'undefined') {\n        return propValue === undefined;\n    }\n    if (type === 'true') {\n        return propValue === true;\n    }\n    if (type === 'false') {\n        return propValue === false;\n    }\n    return typeof propValue === type;\n}\n","export { compareString };\nfunction compareString(str1, str2) {\n    if (str1.toLowerCase() < str2.toLowerCase())\n        return -1;\n    if (str1.toLowerCase() > str2.toLowerCase())\n        return 1;\n    return 0;\n}\n","export const isNotNullish = (p) => p !== null && p !== undefined;\n","export { toPosixPath };\nexport { assertPosixPath };\nexport { toSystemPath };\nexport { isPosixPath };\nimport { assert } from './assert';\nconst sepPosix = '/';\nconst sepWin32 = '\\\\';\nfunction isPosixPath(path) {\n    return !path.includes(sepWin32);\n}\nfunction toPosixPath(path) {\n    const pathPosix = path.split(sepWin32).join(sepPosix);\n    assertPosixPath(pathPosix);\n    return pathPosix;\n}\nfunction assertPosixPath(path) {\n    const errMsg = (msg) => `Not a posix path: ${msg}`;\n    assert(path !== null, errMsg('null'));\n    assert(typeof path === 'string', errMsg(`typeof path === '${typeof path}'`));\n    assert(path !== '', errMsg('(empty string)'));\n    assert(path);\n    assert(!path.includes(sepWin32), errMsg(path));\n}\nfunction toSystemPath(path) {\n    if (isPosixEnv()) {\n        return toPosixPath(path);\n    }\n    if (isWin32Env()) {\n        return path.split(sepPosix).join(sepWin32);\n    }\n    assert(false);\n}\nfunction isWin32Env() {\n    return process.platform === 'win32';\n}\nfunction isPosixEnv() {\n    return !isWin32Env();\n}\n","export { assertDefaultExportUnknown };\nexport { assertDefaultExportObject };\nimport { assert, assertUsage, assertWarning } from './assert';\nimport { isObject } from './isObject';\nconst IGNORE = [\n    // vite-plugin-solid adds `export { $$registrations }`\n    '$$registrations',\n    // @vitejs/plugin-vue adds `export { _rerender_only }`\n    '_rerender_only'\n];\n// support `export { frontmatter }` in .mdx files\nconst FILES_WITH_SIDE_EXPORTS = ['.md', '.mdx'];\nfunction assertDefaultExportUnknown(fileExports, filePath) {\n    assertSingleDefaultExport(fileExports, filePath, true);\n}\nfunction assertDefaultExportObject(fileExports, filePath) {\n    assertSingleDefaultExport(fileExports, filePath, false);\n    const defaultExport = fileExports.default;\n    assertUsage(isObject(defaultExport), `${filePath} should default export an object: its \\`export default\\` is a \\`${typeof defaultExport}\\` but it should be an object instead`);\n}\nfunction assertSingleDefaultExport(fileExports, filePath, defaultExportValueIsUnknown) {\n    const exportsAll = Object.keys(fileExports);\n    const exportsRelevant = exportsAll.filter((exportName) => !IGNORE.includes(exportName));\n    const exportsInvalid = exportsRelevant.filter((e) => e !== 'default');\n    const exportsHasDefault = exportsRelevant.includes('default');\n    if (exportsInvalid.length === 0) {\n        if (exportsHasDefault) {\n            return;\n        }\n        else {\n            assert(exportsRelevant.length === 0);\n            assertUsage(false, `${filePath} doesn't export any value, but it should have a \\`export default\\` instead`);\n        }\n    }\n    else if (!FILES_WITH_SIDE_EXPORTS.some((ext) => filePath.endsWith(ext))) {\n        const exportsInvalidStr = exportsInvalid.join(', ');\n        if (defaultExportValueIsUnknown) {\n            assertWarning(exportsInvalid.length === 0, `${filePath} should only have a default export: remove \\`export { ${exportsInvalidStr} }\\``, { onlyOnce: true });\n        }\n        else {\n            assertWarning(exportsInvalid.length === 0, `${filePath} replace \\`export { ${exportsInvalidStr} }\\` with \\`export default { ${exportsInvalidStr} }\\``, { onlyOnce: true });\n        }\n    }\n}\n","export { objectEntries };\n// Same as `Object.entries()` but with type inference\nfunction objectEntries(obj) {\n    return Object.entries(obj);\n}\n","// TODO/v1-release: remove this\nexport { assertDefaultExports };\nexport { assertExportValues };\nexport { forbiddenDefaultExports };\nimport { assert, assertUsage } from '../utils';\nconst enforceTrue = ['clientRouting'];\nfunction assertExportValues(pageFile) {\n    enforceTrue.forEach((exportName) => {\n        assert(pageFile.fileExports);\n        if (!(exportName in pageFile.fileExports))\n            return;\n        const explainer = `The value of \\`${exportName}\\` is only allowed to be \\`true\\`.`;\n        assertUsage(pageFile.fileExports[exportName] !== false, `${pageFile.filePath} has \\`export { ${exportName} }\\` with the value \\`false\\` which is prohibited: remove \\`export { ${exportName} }\\` instead. (${explainer})`);\n        assertUsage(pageFile.fileExports[exportName] === true, `${pageFile.filePath} has \\`export { ${exportName} }\\` with a forbidden value. ${explainer}`);\n    });\n}\n// Forbid exports such as `export default { render }`, because only `export { render }` can be statically analyzed by `es-module-lexer`.\nconst forbiddenDefaultExports = ['render', 'clientRouting', 'prerender', 'doNotPrerender'];\nfunction assertDefaultExports(defaultExportName, filePath) {\n    assertUsage(!forbiddenDefaultExports.includes(defaultExportName), `${filePath} has \\`export default { ${defaultExportName} }\\` which is prohibited, use \\`export { ${defaultExportName} }\\` instead.`);\n}\n","export { getExportUnion };\nexport { getExports };\nimport { isScriptFile, isTemplateFile } from '../../utils/isScriptFile';\nimport { assert, hasProp, isObject, assertWarning, assertUsage, makeLast, isBrowser, objectEntries } from '../utils';\nimport { assertDefaultExports, forbiddenDefaultExports } from './assertExports';\nfunction getExports(pageFiles, pageConfig) {\n    const configEntries = {};\n    const config = {};\n    const exportsAll = {};\n    // V0.4 design\n    // TODO/v1-release: remove\n    pageFiles.forEach((pageFile) => {\n        const exportValues = getExportValues(pageFile);\n        exportValues.forEach(({ exportName, exportValue, isFromDefaultExport }) => {\n            var _a;\n            assert(exportName !== 'default');\n            exportsAll[exportName] = (_a = exportsAll[exportName]) !== null && _a !== void 0 ? _a : [];\n            exportsAll[exportName].push({\n                exportValue,\n                exportSource: `${pageFile.filePath} > ${isFromDefaultExport ? `\\`export default { ${exportName} }\\`` : `\\`export { ${exportName} }\\``}`,\n                filePath: pageFile.filePath,\n                _filePath: pageFile.filePath,\n                _fileType: pageFile.fileType,\n                _isFromDefaultExport: isFromDefaultExport\n            });\n        });\n    });\n    // V1 design\n    if (pageConfig) {\n        const { configValues } = pageConfig;\n        objectEntries(configValues).forEach(([configName, configValue]) => {\n            var _a, _b, _c;\n            const configElement = pageConfig.configElements[configName];\n            assert(configElement);\n            const { configDefinedByFile, configDefinedAt } = configElement;\n            assert(configDefinedByFile);\n            config[configName] = (_a = config[configName]) !== null && _a !== void 0 ? _a : configValue;\n            configEntries[configName] = (_b = configEntries[configName]) !== null && _b !== void 0 ? _b : [];\n            // Currently each configName has only one entry. Adding an entry for each overriden config value isn't implemented yet. (This is an isomorphic file and it isn't clear whether this can/should be implemented on the client-side. We should load a minimum amount of code on the client-side.)\n            assert(configEntries[configName].length === 0);\n            configEntries[configName].push({\n                configValue,\n                configDefinedAt,\n                configDefinedByFile\n            });\n            // TODO/v1-release: remove\n            const exportName = configName;\n            exportsAll[exportName] = (_c = exportsAll[exportName]) !== null && _c !== void 0 ? _c : [];\n            exportsAll[exportName].push({\n                exportValue: configValue,\n                exportSource: configDefinedAt,\n                filePath: configDefinedByFile,\n                _filePath: configDefinedByFile,\n                _fileType: null,\n                _isFromDefaultExport: null\n            });\n        });\n    }\n    const pageExports = createObjectWithDeprecationWarning();\n    const exports = {};\n    Object.entries(exportsAll).forEach(([exportName, values]) => {\n        values.forEach(({ exportValue, _fileType, _isFromDefaultExport }) => {\n            var _a;\n            exports[exportName] = (_a = exports[exportName]) !== null && _a !== void 0 ? _a : exportValue;\n            // Legacy `pageContext.pageExports`\n            if (_fileType === '.page' && !_isFromDefaultExport) {\n                if (!(exportName in pageExports)) {\n                    pageExports[exportName] = exportValue;\n                }\n            }\n        });\n    });\n    assert(!('default' in exports));\n    assert(!('default' in exportsAll));\n    return {\n        config,\n        configEntries,\n        // TODO/v1-release: remove\n        exports,\n        exportsAll,\n        pageExports\n    };\n}\nfunction getExportValues(pageFile) {\n    const { filePath, fileExports } = pageFile;\n    assert(fileExports); // assume pageFile.loadFile() was called\n    assert(isScriptFile(filePath));\n    const exportValues = [];\n    Object.entries(fileExports)\n        .sort(makeLast(([exportName]) => exportName === 'default')) // `export { bla }` should override `export default { bla }`\n        .forEach(([exportName, exportValue]) => {\n        let isFromDefaultExport = exportName === 'default';\n        if (isFromDefaultExport) {\n            if (isTemplateFile(filePath)) {\n                exportName = 'Page';\n            }\n            else {\n                assertUsage(isObject(exportValue), `The \\`export default\\` of ${filePath} should be an object.`);\n                Object.entries(exportValue).forEach(([defaultExportName, defaultExportValue]) => {\n                    assertDefaultExports(defaultExportName, filePath);\n                    exportValues.push({\n                        exportName: defaultExportName,\n                        exportValue: defaultExportValue,\n                        isFromDefaultExport\n                    });\n                });\n                return;\n            }\n        }\n        exportValues.push({\n            exportName,\n            exportValue,\n            isFromDefaultExport\n        });\n    });\n    exportValues.forEach(({ exportName, isFromDefaultExport }) => {\n        assert(!(isFromDefaultExport && forbiddenDefaultExports.includes(exportName)));\n    });\n    return exportValues;\n}\nfunction createObjectWithDeprecationWarning() {\n    return new Proxy({}, {\n        get(...args) {\n            // We only show the warning in Node.js because when using Client Routing Vue integration uses `Object.assign(pageContextReactive, pageContext)` which will wrongully trigger the warning. There is no cross-browser way to catch whether the property accessor was initiated by an `Object.assign()` call.\n            if (!isBrowser()) {\n                assertWarning(false, '`pageContext.pageExports` is outdated. Use `pageContext.exports` instead, see https://vite-plugin-ssr.com/exports', { onlyOnce: true, showStackTrace: true });\n            }\n            return Reflect.get(...args);\n        }\n    });\n}\nfunction getExportUnion(exportsAll, propName) {\n    var _a, _b;\n    return ((_b = (_a = exportsAll[propName]) === null || _a === void 0 ? void 0 : _a.map((e) => {\n        assertUsage(hasProp(e, 'exportValue', 'string[]'), `${e.exportSource} should be an array of strings.`);\n        return e.exportValue;\n    }).flat()) !== null && _b !== void 0 ? _b : []);\n}\n","export { determinePageIdOld };\nimport { slice, assert } from './utils';\n// TODO/v1-release: remove\nfunction determinePageIdOld(filePath) {\n    const pageSuffix = '.page.';\n    const pageId = slice(filePath.split(pageSuffix), 0, -1).join(pageSuffix);\n    assert(!pageId.includes('\\\\'));\n    return pageId;\n}\n","// TODO/v1-release: remove\nexport { assertPageFilePath };\nimport { assertPosixPath } from './utils';\nfunction assertPageFilePath(filePath) {\n    assertPosixPath(filePath);\n    /* This assert() is skipped to reduce client-side bundle size\n    assert(filePath.startsWith('/') || isNpmPackageImport(filePath), { filePath })\n    */\n}\n","export { getErrorPageId };\nexport { isErrorPageId };\nexport { isErrorPage };\n// TODO/v1-release: consider loading this file only for Client Routing\nimport { assert, assertUsage, unique } from './utils';\nfunction getErrorPageId(pageFilesAll, pageConfigs) {\n    if (pageConfigs.length > 0) {\n        const errorPageConfigs = pageConfigs.filter((p) => p.isErrorPage);\n        if (errorPageConfigs.length === 0)\n            return null;\n        assertUsage(errorPageConfigs.length === 1, 'Only one error page can be defined');\n        return errorPageConfigs[0].pageId;\n    }\n    // TODO/v1-release: remove\n    const errorPageIds = unique(pageFilesAll.map(({ pageId }) => pageId).filter((pageId) => isErrorPageId(pageId, false)));\n    assertUsage(errorPageIds.length <= 1, `Only one _error.page.js is allowed, but found several: ${errorPageIds.join(' ')}`);\n    if (errorPageIds.length > 0) {\n        const errorPageId = errorPageIds[0];\n        assert(errorPageId);\n        return errorPageId;\n    }\n    return null;\n}\n// TODO/v1-release: remove\nfunction isErrorPageId(pageId, _isV1Design) {\n    assert(!pageId.includes('\\\\'));\n    return pageId.includes('/_error');\n}\nfunction isErrorPage(pageId, pageConfigs) {\n    if (pageConfigs.length > 0) {\n        const pageConfig = pageConfigs.find((p) => p.pageId === pageId);\n        assert(pageConfig);\n        return pageConfig.isErrorPage;\n    }\n    else {\n        return isErrorPageId(pageId, false);\n    }\n}\n","// TODO/v1-release: remove\nexport { fileTypes };\nexport { isValidFileType };\nexport { determineFileType };\nimport { assert, assertPosixPath } from '../utils';\nimport { isScriptFile } from '../../utils/isScriptFile';\nconst fileTypes = [\n    '.page',\n    '.page.server',\n    '.page.route',\n    '.page.client',\n    // New type `.page.css`/`.page.server.css`/`.page.client.css` for `extensions[number].pageFileDist`.\n    //  - Extensions using `pageFileDist` are expected to use a bundler that generates a `.css` colocated next to the original `.page.js` file (e.g. `/renderer/_default.page.server.css` for `/renderer/_default.page.server.js`.\n    //  - Since these `.page.css` files Bundlers We can therefore expect that there isn't any `.page.server.sass`/...\n    '.css'\n];\nfunction isValidFileType(filePath) {\n    return ['.js', '.mjs', '.cjs', '.css'].some((ext) => filePath.endsWith(ext));\n}\nfunction determineFileType(filePath) {\n    assertPosixPath(filePath);\n    {\n        const isCSS = filePath.endsWith('.css');\n        if (isCSS) {\n            /* This assert() is skipped to reduce client-side bundle size\n            assert(isNpmPackageImport(filePath), filePath) // `.css` page files are only supported for npm packages\n            */\n            return '.css';\n        }\n    }\n    assert(isScriptFile(filePath), filePath);\n    const fileName = filePath.split('/').slice(-1)[0];\n    const parts = fileName.split('.');\n    const suffix1 = parts.slice(-3)[0];\n    const suffix2 = parts.slice(-2)[0];\n    if (suffix2 === 'page') {\n        return '.page';\n    }\n    assert(suffix1 === 'page', filePath);\n    if (suffix2 === 'server') {\n        return '.page.server';\n    }\n    if (suffix2 === 'client') {\n        return '.page.client';\n    }\n    if (suffix2 === 'route') {\n        return '.page.route';\n    }\n    assert(false, filePath);\n}\n","// TODO/v1-release: remove\nexport { getPageFileObject };\nimport { determinePageIdOld } from '../determinePageIdOld';\nimport { assertPageFilePath } from '../assertPageFilePath';\nimport { isErrorPageId } from '../error-page';\nimport { assert, slice } from '../utils';\nimport { determineFileType } from './fileTypes';\nfunction getPageFileObject(filePath) {\n    const isRelevant = (pageId) => pageFile.pageId === pageId ||\n        (pageFile.isDefaultPageFile &&\n            (isRendererFilePath(pageFile.filePath) || isAncestorDefaultPage(pageId, pageFile.filePath)));\n    const fileType = determineFileType(filePath);\n    const isEnv = (env) => {\n        assert(fileType !== '.page.route'); // We can't determine `.page.route.js`\n        if (env === 'CLIENT_ONLY') {\n            return fileType === '.page.client' || fileType === '.css';\n        }\n        if (env === 'SERVER_ONLY') {\n            return fileType === '.page.server';\n        }\n        if (env === 'CLIENT_AND_SERVER') {\n            return fileType === '.page';\n        }\n        assert(false);\n    };\n    const pageFile = {\n        filePath,\n        fileType,\n        isEnv,\n        isRelevant,\n        isDefaultPageFile: isDefaultFilePath(filePath),\n        isRendererPageFile: fileType !== '.css' && isDefaultFilePath(filePath) && isRendererFilePath(filePath),\n        isErrorPageFile: isErrorPageId(filePath, false),\n        pageId: determinePageIdOld(filePath)\n    };\n    return pageFile;\n}\nfunction isDefaultFilePath(filePath) {\n    assertPageFilePath(filePath);\n    if (isErrorPageId(filePath, false)) {\n        return false;\n    }\n    return filePath.includes('/_default');\n}\nfunction isRendererFilePath(filePath) {\n    assertPageFilePath(filePath);\n    return filePath.includes('/renderer/');\n}\nfunction isAncestorDefaultPage(pageId, defaultPageFilePath) {\n    assertPageFilePath(pageId);\n    assertPageFilePath(defaultPageFilePath);\n    assert(!pageId.endsWith('/'));\n    assert(!defaultPageFilePath.endsWith('/'));\n    assert(isDefaultFilePath(defaultPageFilePath));\n    const defaultPageDir = slice(defaultPageFilePath.split('/'), 0, -1)\n        .filter((filePathSegment) => filePathSegment !== '_default')\n        .join('/');\n    return pageId.startsWith(defaultPageDir);\n}\n","export { assertPageConfigs };\nexport { assertPageConfigGlobal };\nimport { assert, isObject, hasProp } from '../utils';\nfunction assertPageConfigs(pageConfigs) {\n    assert(Array.isArray(pageConfigs) || pageConfigs === null);\n    // TODO: remove obsolete comment?\n    // if `plusConfigFilesCannotBeLoaded === null` => then `import.meta.glob('/**/+config.${scriptFileExtensions}', { eager: true })` cannot be transpiled/loaded => code of virtual file cannot be generated or run => assertPageConfigs() is never called\n    assert(pageConfigs !== null);\n    pageConfigs.forEach((pageConfig) => {\n        assert(isObject(pageConfig));\n        assert(hasProp(pageConfig, 'pageId', 'string'));\n        assert(hasProp(pageConfig, 'routeFilesystem', 'string') || hasProp(pageConfig, 'routeFilesystem', 'null'));\n        assert(hasProp(pageConfig, 'routeFilesystemDefinedBy', 'string') ||\n            hasProp(pageConfig, 'routeFilesystemDefinedBy', 'null'));\n        assert(hasProp(pageConfig, 'loadCodeFiles', 'function'));\n        assert(hasProp(pageConfig, 'isErrorPage', 'boolean'));\n        assert(hasProp(pageConfig, 'configElements', 'object'));\n        assertConfigElements(pageConfig.configElements, false);\n    });\n}\nfunction assertPageConfigGlobal(pageConfigGlobal) {\n    assertConfigElements(pageConfigGlobal, true);\n}\nfunction assertConfigElements(configElements, isGlobalConfig) {\n    assert(isObject(configElements));\n    Object.entries(configElements).forEach(([configName, configElement]) => {\n        assert(isObject(configElement) || configElement === null);\n        if (configElement === null) {\n            assert(isGlobalConfig);\n            return;\n        }\n        assert(hasProp(configElement, 'configDefinedAt', 'string'));\n        assert(hasProp(configElement, 'plusConfigFilePath', 'string') || hasProp(configElement, 'plusConfigFilePath', 'null'));\n        assert(hasProp(configElement, 'configEnv', 'string'));\n        assert(hasProp(configElement, 'codeFilePath', 'string') || hasProp(configElement, 'codeFilePath', 'null'));\n        assert(hasProp(configElement, 'codeFileExport', 'string') || hasProp(configElement, 'codeFileExport', 'null'));\n        assert(hasProp(configElement, 'configValueSerialized', 'string') ||\n            hasProp(configElement, 'configValueSerialized', 'undefined'));\n        if (isGlobalConfig ||\n            // Route files are eagerly loaded (both code files and config value files)\n            configName === 'route') {\n            assert(hasProp(configElement, 'configValue') || hasProp(configElement, 'configValueSerialized'));\n        }\n    });\n}\n","export { types };\nconst types = [\n    ts({\n        is: (val) => val === undefined,\n        match: (str) => str === '!undefined',\n        serialize: () => '!undefined',\n        deserialize: () => undefined\n    }),\n    ts({\n        is: (val) => val === Infinity,\n        match: (str) => str === '!Infinity',\n        serialize: () => '!Infinity',\n        deserialize: () => Infinity\n    }),\n    ts({\n        is: (val) => val === -Infinity,\n        match: (str) => str === '!-Infinity',\n        serialize: () => '!-Infinity',\n        deserialize: () => -Infinity\n    }),\n    ts({\n        is: (val) => typeof val === 'number' && isNaN(val),\n        match: (str) => str === '!NaN',\n        serialize: () => '!NaN',\n        deserialize: () => NaN\n    }),\n    ts({\n        is: (val) => val instanceof Date,\n        match: (str) => str.startsWith('!Date:'),\n        serialize: (val) => '!Date:' + val.toISOString(),\n        deserialize: (str) => new Date(str.slice('!Date:'.length))\n    }),\n    ts({\n        is: (val) => typeof val === 'bigint',\n        match: (str) => str.startsWith('!BigInt:'),\n        serialize: (val) => '!BigInt:' + val.toString(),\n        deserialize: (str) => {\n            if (typeof BigInt === 'undefined') {\n                throw new Error('Your JavaScript environement does not support BigInt. Consider adding a polyfill.');\n            }\n            return BigInt(str.slice('!BigInt:'.length));\n        }\n    }),\n    ts({\n        is: (val) => val instanceof RegExp,\n        match: (str) => str.startsWith('!RegExp:'),\n        serialize: (val) => '!RegExp:' + val.toString(),\n        deserialize: (str) => {\n            str = str.slice('!RegExp:'.length);\n            // const args: string[] = str.match(/\\/(.*?)\\/([gimy])?$/)!\n            const args = str.match(/\\/(.*)\\/(.*)?/);\n            const pattern = args[1];\n            const flags = args[2];\n            return new RegExp(pattern, flags);\n        }\n    }),\n    ts({\n        is: (val) => val instanceof Map,\n        match: (str) => str.startsWith('!Map:'),\n        serialize: (val, serializer) => '!Map:' + serializer(Array.from(val.entries())),\n        deserialize: (str, deserializer) => new Map(deserializer(str.slice('!Map:'.length)))\n    }),\n    ts({\n        is: (val) => val instanceof Set,\n        match: (str) => str.startsWith('!Set:'),\n        serialize: (val, serializer) => '!Set:' + serializer(Array.from(val.values())),\n        deserialize: (str, deserializer) => new Set(deserializer(str.slice('!Set:'.length)))\n    }),\n    // Avoid collisions with the special strings defined above\n    ts({\n        is: (val) => typeof val === 'string' && val.startsWith('!'),\n        match: (str) => str.startsWith('!'),\n        serialize: (val) => '!' + val,\n        deserialize: (str) => str.slice(1)\n    })\n];\n// Type check\nfunction ts(t) {\n    return t;\n}\n","export { parse };\nimport { types } from './types';\nfunction parse(str) {\n    // We don't use the reviver option in `JSON.parse(str, reviver)` because it doesn't support `undefined` values\n    const value = JSON.parse(str);\n    return modifier(value);\n}\nfunction modifier(value) {\n    if (typeof value === 'string') {\n        return reviver(value);\n    }\n    if (typeof value === 'object' && value !== null) {\n        Object.entries(value).forEach(([key, val]) => {\n            ;\n            value[key] = modifier(val);\n        });\n    }\n    return value;\n}\nfunction reviver(value) {\n    for (const { match, deserialize } of types) {\n        if (match(value)) {\n            return deserialize(value, parse);\n        }\n    }\n    return value;\n}\n","// Counterpart: ../../node/plugin/plugins/importUserCode/v1-design/serializePageConfigs.ts\nexport { parsePageConfigs };\nimport { parse } from '@brillout/json-serializer/parse';\nimport { assert, assertUsage, hasProp, isCallable } from '../utils';\nfunction parsePageConfigs(pageConfigs) {\n    pageConfigs.forEach((pageConfig) => {\n        Object.entries(pageConfig.configElements).forEach(([configName, configElement]) => {\n            parseConfigValue(configElement);\n            if (configName === 'route') {\n                assertRouteConfigValue(configElement);\n            }\n        });\n    });\n}\nfunction parseConfigValue(configElement) {\n    const { configValueSerialized } = configElement;\n    if (configValueSerialized !== undefined) {\n        configElement.configValue = parse(configValueSerialized);\n    }\n}\nfunction assertRouteConfigValue(configElement) {\n    assert(hasProp(configElement, 'configValue')); // route files are eagerly loaded\n    const { configValue } = configElement;\n    const configValueType = typeof configValue;\n    assertUsage(configValueType === 'string' || isCallable(configValue), `${configElement.configDefinedAt} has an invalid type '${configValueType}': it should be a string or a function instead, see https://vite-plugin-ssr.com/route`);\n    /* We don't do that to avoid unnecessarily bloating the client-side bundle when using Server Routing\n     *  - When using Server Routing, this file is loaded as well\n     *  - When using Server Routing, client-side validation is superfluous as Route Strings only need to be validated on the server-side\n    if (typeof configValue === 'string') {\n      assertRouteString(configValue, `${configElement.configDefinedAt} defines an`)\n    }\n    */\n}\n","export { parseGlobResults };\nimport { assert, hasProp, isCallable, isObject, cast, assertUsage } from '../utils';\nimport { assertExportValues } from './assertExports';\nimport { getPageFileObject } from './getPageFileObject';\nimport { fileTypes } from './fileTypes';\nimport { assertPageConfigGlobal, assertPageConfigs } from './assertPageConfigs';\nimport { parsePageConfigs } from './parsePageConfigs';\n// TODO: rename to parseVirtualFile\nfunction parseGlobResults(pageFilesExports) {\n    assert(hasProp(pageFilesExports, 'isGeneratedFile'));\n    assert(pageFilesExports.isGeneratedFile !== false, `vite-plugin-ssr was re-installed(/re-built). Restart your app.`);\n    assert(pageFilesExports.isGeneratedFile === true, `\\`isGeneratedFile === ${pageFilesExports.isGeneratedFile}\\``);\n    assert(hasProp(pageFilesExports, 'pageFilesLazy', 'object'));\n    assert(hasProp(pageFilesExports, 'pageFilesEager', 'object'));\n    assert(hasProp(pageFilesExports, 'pageFilesExportNamesLazy', 'object'));\n    assert(hasProp(pageFilesExports, 'pageFilesExportNamesEager', 'object'));\n    assert(hasProp(pageFilesExports.pageFilesLazy, '.page'));\n    assert(hasProp(pageFilesExports.pageFilesLazy, '.page.client') || hasProp(pageFilesExports.pageFilesLazy, '.page.server'));\n    assert(hasProp(pageFilesExports, 'pageFilesList', 'string[]'));\n    assert(hasProp(pageFilesExports, 'pageConfigs'));\n    assert(hasProp(pageFilesExports, 'pageConfigGlobal'));\n    const { pageConfigs, pageConfigGlobal } = pageFilesExports;\n    assertPageConfigs(pageConfigs);\n    parsePageConfigs(pageConfigs);\n    assertPageConfigGlobal(pageConfigGlobal);\n    const pageFilesMap = {};\n    parseGlobResult(pageFilesExports.pageFilesLazy).forEach(({ filePath, pageFile, globValue }) => {\n        var _a;\n        pageFile = pageFilesMap[filePath] = (_a = pageFilesMap[filePath]) !== null && _a !== void 0 ? _a : pageFile;\n        const loadModule = globValue;\n        assertLoadModule(loadModule);\n        pageFile.loadFile = async () => {\n            if (!('fileExports' in pageFile)) {\n                pageFile.fileExports = await loadModule();\n                assertExportValues(pageFile);\n            }\n        };\n    });\n    parseGlobResult(pageFilesExports.pageFilesExportNamesLazy).forEach(({ filePath, pageFile, globValue }) => {\n        var _a;\n        pageFile = pageFilesMap[filePath] = (_a = pageFilesMap[filePath]) !== null && _a !== void 0 ? _a : pageFile;\n        const loadModule = globValue;\n        assertLoadModule(loadModule);\n        pageFile.loadExportNames = async () => {\n            if (!('exportNames' in pageFile)) {\n                const moduleExports = await loadModule();\n                // Vite 2 seems to choke following assertion: https://github.com/brillout/vite-plugin-ssr/issues/455\n                assertUsage('exportNames' in moduleExports, 'You seem to be using Vite 2 but the latest vite-plugin-ssr versions only work with Vite 3');\n                assert(hasProp(moduleExports, 'exportNames', 'string[]'), pageFile.filePath);\n                pageFile.exportNames = moduleExports.exportNames;\n            }\n        };\n    });\n    // `pageFilesEager` contains `.page.route.js` files\n    parseGlobResult(pageFilesExports.pageFilesEager).forEach(({ filePath, pageFile, globValue }) => {\n        var _a;\n        pageFile = pageFilesMap[filePath] = (_a = pageFilesMap[filePath]) !== null && _a !== void 0 ? _a : pageFile;\n        const moduleExports = globValue;\n        assert(isObject(moduleExports));\n        pageFile.fileExports = moduleExports;\n    });\n    parseGlobResult(pageFilesExports.pageFilesExportNamesEager).forEach(({ filePath, pageFile, globValue }) => {\n        var _a;\n        pageFile = pageFilesMap[filePath] = (_a = pageFilesMap[filePath]) !== null && _a !== void 0 ? _a : pageFile;\n        const moduleExports = globValue;\n        assert(isObject(moduleExports));\n        assert(hasProp(moduleExports, 'exportNames', 'string[]'), pageFile.filePath);\n        pageFile.exportNames = moduleExports.exportNames;\n    });\n    pageFilesExports.pageFilesList.forEach((filePath) => {\n        var _a;\n        pageFilesMap[filePath] = (_a = pageFilesMap[filePath]) !== null && _a !== void 0 ? _a : getPageFileObject(filePath);\n    });\n    const pageFiles = Object.values(pageFilesMap);\n    pageFiles.forEach(({ filePath }) => {\n        assert(!filePath.includes('\\\\'));\n    });\n    return { pageFiles, pageConfigs, pageConfigGlobal };\n}\nfunction parseGlobResult(globObject) {\n    const ret = [];\n    Object.entries(globObject).forEach(([fileType, globFiles]) => {\n        cast(fileType);\n        assert(fileTypes.includes(fileType));\n        assert(isObject(globFiles));\n        Object.entries(globFiles).forEach(([filePath, globValue]) => {\n            const pageFile = getPageFileObject(filePath);\n            assert(pageFile.fileType === fileType);\n            ret.push({ filePath, pageFile, globValue });\n        });\n    });\n    return ret;\n}\nfunction assertLoadModule(globValue) {\n    assert(isCallable(globValue));\n}\n","export { setPageFiles };\nexport { setPageFilesAsync };\nexport { getPageFilesAll };\nimport { assert, unique } from '../utils';\nimport { parseGlobResults } from './parseGlobResults';\nimport { getGlobalObject } from '../../utils/getGlobalObject';\nconst globalObject = getGlobalObject('setPageFiles.ts', {});\nfunction setPageFiles(pageFilesExports) {\n    const { pageFiles, pageConfigs, pageConfigGlobal } = parseGlobResults(pageFilesExports);\n    globalObject.pageFilesAll = pageFiles;\n    globalObject.pageConfigs = pageConfigs;\n    globalObject.pageConfigGlobal = pageConfigGlobal;\n}\nfunction setPageFilesAsync(getPageFilesExports) {\n    globalObject.pageFilesGetter = async () => {\n        setPageFiles(await getPageFilesExports());\n    };\n}\nasync function getPageFilesAll(isClientSide, isProduction) {\n    if (isClientSide) {\n        assert(!globalObject.pageFilesGetter);\n        assert(isProduction === undefined);\n    }\n    else {\n        assert(globalObject.pageFilesGetter);\n        assert(typeof isProduction === 'boolean');\n        if (!globalObject.pageFilesAll ||\n            // We reload all glob imports in dev to make auto-reload work\n            !isProduction) {\n            await globalObject.pageFilesGetter();\n        }\n    }\n    const { pageFilesAll, pageConfigs, pageConfigGlobal } = globalObject;\n    assert(pageFilesAll && pageConfigs && pageConfigGlobal);\n    const allPageIds = getAllPageIds(pageFilesAll, pageConfigs);\n    return { pageFilesAll, allPageIds, pageConfigs, pageConfigGlobal };\n}\nfunction getAllPageIds(allPageFiles, pageConfigs) {\n    const fileIds = allPageFiles.filter(({ isDefaultPageFile }) => !isDefaultPageFile).map(({ pageId }) => pageId);\n    const allPageIds = unique(fileIds);\n    const allPageIds2 = pageConfigs.map((p) => p.pageId);\n    return [...allPageIds, ...allPageIds2];\n}\n","// TODO:v1-release: remove this file\nexport { getPageFilesClientSide };\nexport { getPageFilesServerSide };\nimport { assert, assertUsage, isNotNullish } from '../utils';\nimport { assertPageFilePath } from '../assertPageFilePath';\nfunction getPageFilesClientSide(pageFilesAll, pageId) {\n    return determine(pageFilesAll, pageId, true);\n}\nfunction getPageFilesServerSide(pageFilesAll, pageId) {\n    return determine(pageFilesAll, pageId, false);\n}\nfunction determine(pageFilesAll, pageId, envIsClient) {\n    const env = envIsClient ? 'CLIENT_ONLY' : 'SERVER_ONLY';\n    const pageFilesRelevant = pageFilesAll\n        .filter((p) => p.isRelevant(pageId) && p.fileType !== '.page.route')\n        .sort(getPageFilesSorter(envIsClient, pageId));\n    // Load the `.page.js` files specific to `pageId`\n    const getPageIdFile = (iso) => {\n        const files = pageFilesRelevant.filter((p) => p.pageId === pageId && p.isEnv(iso ? 'CLIENT_AND_SERVER' : env));\n        assertUsage(files.length <= 1, `Merge the following files into a single file: ${files.map((p) => p.filePath).join(' ')}`);\n        const pageIdFile = files[0];\n        assert(pageIdFile === undefined || !pageIdFile.isDefaultPageFile);\n        return pageIdFile;\n    };\n    const pageIdFileEnv = getPageIdFile(false);\n    const pageIdFileIso = getPageIdFile(true);\n    // A page can have only one renderer. In other words: Multiple `renderer/` overwrite each other.\n    // Load only load renderer (`/renderer/_default.*`)\n    const getRendererFile = (iso) => pageFilesRelevant.filter((p) => p.isRendererPageFile && p.isEnv(iso ? 'CLIENT_AND_SERVER' : env))[0];\n    const rendererFileEnv = getRendererFile(false);\n    const rendererFileIso = getRendererFile(true);\n    // A page can load multiple `_defaut.page.*` files of the same `fileType`. In other words: non-renderer `_default.page.*` files are cumulative.\n    // The exception being HTML-only pages because we pick a single page file as client entry. We handle that use case at `renderPage()`.\n    const defaultFilesNonRenderer = pageFilesRelevant.filter((p) => p.isDefaultPageFile && !p.isRendererPageFile && (p.isEnv(env) || p.isEnv('CLIENT_AND_SERVER')));\n    // Ordered by `pageContext.exports` precendence\n    const pageFiles = [pageIdFileEnv, pageIdFileIso, ...defaultFilesNonRenderer, rendererFileEnv, rendererFileIso].filter(isNotNullish);\n    return pageFiles;\n}\nfunction getPageFilesSorter(envIsClient, pageId) {\n    const env = envIsClient ? 'CLIENT_ONLY' : 'SERVER_ONLY';\n    const e1First = -1;\n    const e2First = +1;\n    const noOrder = 0;\n    return (e1, e2) => {\n        // `.page.js` files specific to `pageId` first\n        if (!e1.isDefaultPageFile && e2.isDefaultPageFile) {\n            return e1First;\n        }\n        if (!e2.isDefaultPageFile && e1.isDefaultPageFile) {\n            return e2First;\n        }\n        // Non-renderer `_default.page.*` before `renderer/**/_default.page.*`\n        {\n            const e1_isRenderer = e1.isRendererPageFile;\n            const e2_isRenderer = e2.isRendererPageFile;\n            if (!e1_isRenderer && e2_isRenderer) {\n                return e1First;\n            }\n            if (!e2_isRenderer && e1_isRenderer) {\n                return e2First;\n            }\n            assert(e1_isRenderer === e2_isRenderer);\n        }\n        // Filesystem nearest first\n        {\n            const e1_distance = getPathDistance(pageId, e1.filePath);\n            const e2_distance = getPathDistance(pageId, e2.filePath);\n            if (e1_distance < e2_distance) {\n                return e1First;\n            }\n            if (e2_distance < e1_distance) {\n                return e2First;\n            }\n            assert(e1_distance === e2_distance);\n        }\n        // `.page.server.js`/`.page.client.js` before `.page.js`\n        {\n            if (e1.isEnv(env) && e2.isEnv('CLIENT_AND_SERVER')) {\n                return e1First;\n            }\n            if (e2.isEnv(env) && e1.isEnv('CLIENT_AND_SERVER')) {\n                return e2First;\n            }\n        }\n        return noOrder;\n    };\n}\nfunction getPathDistance(pathA, pathB) {\n    assertPageFilePath(pathA);\n    assertPageFilePath(pathB);\n    // Index of first different character\n    let idx = 0;\n    for (; idx < pathA.length && idx < pathB.length; idx++) {\n        if (pathA[idx] !== pathB[idx])\n            break;\n    }\n    const pathAWithoutCommon = pathA.slice(idx);\n    const pathBWithoutCommon = pathB.slice(idx);\n    const distanceA = pathAWithoutCommon.split('/').length;\n    const distanceB = pathBWithoutCommon.split('/').length;\n    const distance = distanceA + distanceB;\n    return distance;\n}\n","export { humanizeTime };\nfunction humanizeTime(milliseconds) {\n    const seconds = milliseconds / 1000;\n    if (seconds < 120) {\n        const n = round(seconds);\n        return `${n} second${plural(n)}`;\n    }\n    {\n        const minutes = seconds / 60;\n        const n = round(minutes);\n        return `${n} minute${plural(n)}`;\n    }\n}\nfunction round(n) {\n    let rounded = n.toFixed(1);\n    if (rounded.endsWith('.0'))\n        rounded = rounded.slice(0, -2);\n    return rounded;\n}\nfunction plural(n) {\n    return n === '1' ? '' : 's';\n}\n","export { executeHook };\nexport { isUserHookError };\nimport { getProjectError, assertWarning } from './assert';\nimport { getGlobalObject } from './getGlobalObject';\nimport { humanizeTime } from './humanizeTime';\nimport { isObject } from './isObject';\nconst globalObject = getGlobalObject('utils/executeHook.ts', {\n    userHookErrors: new Map()\n});\nfunction isUserHookError(err) {\n    var _a;\n    if (!isObject(err))\n        return false;\n    return (_a = globalObject.userHookErrors.get(err)) !== null && _a !== void 0 ? _a : false;\n}\nfunction executeHook(hookFn, hookName, hookFilePath) {\n    const { timeoutErr, timeoutWarn } = getTimeouts(hookName);\n    let resolve;\n    let reject;\n    const promise = new Promise((resolve_, reject_) => {\n        resolve = (ret) => {\n            clearTimeouts();\n            resolve_(ret);\n        };\n        reject = (err) => {\n            clearTimeouts();\n            reject_(err);\n        };\n    });\n    const clearTimeouts = () => {\n        clearTimeout(t1);\n        clearTimeout(t2);\n    };\n    const t1 = setTimeout(() => {\n        assertWarning(false, `The ${hookName}() hook defined by ${hookFilePath} is taking more than ${humanizeTime(timeoutWarn)}`, { onlyOnce: false });\n    }, timeoutWarn);\n    const t2 = setTimeout(() => {\n        const err = getProjectError(`Hook timeout: the ${hookName}() hook defined by ${hookFilePath} didn't finish after ${humanizeTime(timeoutErr)}`);\n        reject(err);\n    }, timeoutErr);\n    (async () => {\n        try {\n            const ret = await hookFn();\n            resolve(ret);\n        }\n        catch (err) {\n            if (isObject(err)) {\n                globalObject.userHookErrors.set(err, { hookName, hookFilePath });\n            }\n            reject(err);\n        }\n    })();\n    return promise;\n}\nfunction getTimeouts(hookName) {\n    if (hookName === 'onBeforeRoute') {\n        return {\n            timeoutErr: 5 * 1000,\n            timeoutWarn: 1 * 1000\n        };\n    }\n    if (hookName === 'onBeforePrerender') {\n        return {\n            timeoutErr: 10 * 60 * 1000,\n            timeoutWarn: 30 * 1000\n        };\n    }\n    return {\n        timeoutErr: 40 * 1000,\n        timeoutWarn: 4 * 1000\n    };\n}\n","export { getCurrentUrl };\nimport { parseUrl } from './parseUrl';\nimport { assert } from './assert';\nfunction getCurrentUrl(options) {\n    const url = window.location.href;\n    const { searchOriginal, hashOriginal, pathname } = parseUrl(url, '/');\n    let urlCurrent;\n    if (options === null || options === void 0 ? void 0 : options.withoutHash) {\n        urlCurrent = `${pathname}${searchOriginal || ''}`;\n    }\n    else {\n        urlCurrent = `${pathname}${searchOriginal || ''}${hashOriginal || ''}`;\n    }\n    assert(urlCurrent.startsWith('/'));\n    return urlCurrent;\n}\n","// Utils needed by Server Routing.\n// Ensure we don't bloat the server-side with client utils\nimport { isBrowser } from '../utils/isBrowser';\nimport { assert } from '../utils/assert';\nassert(isBrowser());\nexport * from '../utils/assert';\nexport * from '../utils/assertSingleInstance';\nexport * from '../utils/executeHook';\nexport * from '../utils/checkType'; // Only used by Server Routing (not needed for Client Routing)\nexport * from '../utils/getCurrentUrl';\nexport * from '../utils/getGlobalObject';\nexport * from '../utils/hasProp';\nexport * from '../utils/isCallable';\nexport * from '../utils/isObject';\nexport * from '../utils/objectAssign';\nexport * from '../utils/parseUrl';\nexport * from '../utils/projectInfo';\nexport * from '../utils/slice';\nexport * from '../utils/unique'; // Only used by Server Routing (not needed for Client Routing)\n","import { parse } from '@brillout/json-serializer/parse';\nimport { hasProp, assert, assertUsage, objectAssign } from './utils';\nexport { getPageContextSerializedInHtml };\nfunction getPageContextSerializedInHtml() {\n    const id = 'vite-plugin-ssr_pageContext';\n    const elem = document.getElementById(id);\n    assertUsage(elem, `The element #${id} (which vite-plugin-ssr automatically injects into the HTML) is missing from the DOM. This may happen if your HTML is malformed. Make sure your HTML isn't malformed, and make sure you don't remove #${id} from the HTML nor from the DOM.`);\n    const pageContextJson = elem.textContent;\n    assert(pageContextJson);\n    const pageContextSerializedInHtml = parse(pageContextJson);\n    assert(hasProp(pageContextSerializedInHtml, '_pageId', 'string'));\n    objectAssign(pageContextSerializedInHtml, {\n        _hasPageContextFromServer: true\n    });\n    return pageContextSerializedInHtml;\n}\n","export { getHook };\nexport { assertHook };\nimport { assert, assertUsage, isCallable } from './utils';\nfunction getHook(pageContext, hookName) {\n    if (!(hookName in pageContext.exports)) {\n        return null;\n    }\n    const hookFn = pageContext.exports[hookName];\n    const file = pageContext.exportsAll[hookName][0];\n    assert(file.exportValue === hookFn);\n    const hookFilePath = file.exportSource;\n    assert(hookFilePath);\n    assert(!hookName.endsWith(')'));\n    assertUsage(isCallable(hookFn), `hook ${hookName}() defined by ${hookFilePath} should be a function`);\n    return { hookFn, hookFilePath };\n}\nfunction assertHook(pageContext, hookName) {\n    getHook(pageContext, hookName);\n}\n","import { compareString } from './utils';\nexport { sortPageContext };\n// Sort `pageContext` keys alphabetically, in order to make reading `console.log(pageContext)` easier\nfunction sortPageContext(pageContext) {\n    const entries = Object.entries(pageContext);\n    for (const key in pageContext) {\n        delete pageContext[key];\n    }\n    entries\n        .sort(([key1], [key2]) => compareString(key1, key2))\n        .forEach(([key, val]) => {\n        pageContext[key] = val;\n    });\n}\n","export { addIs404ToPageProps };\nimport { assert, assertWarning, hasProp, isObject } from './utils';\nimport { isErrorPage } from './error-page';\nfunction addIs404ToPageProps(pageContext) {\n    assertIs404(pageContext);\n    addIs404(pageContext);\n}\nfunction assertIs404(pageContext) {\n    if (isErrorPage(pageContext._pageId, pageContext._pageConfigs)) {\n        assert(hasProp(pageContext, 'is404', 'boolean'));\n    }\n}\nfunction addIs404(pageContext) {\n    if (pageContext.is404 === undefined || pageContext.is404 === null)\n        return;\n    const pageProps = pageContext.pageProps || {};\n    if (!isObject(pageProps)) {\n        assertWarning(false, 'pageContext.pageProps should be an object', { showStackTrace: true, onlyOnce: true });\n        return;\n    }\n    pageProps.is404 = pageProps.is404 || pageContext.is404;\n    pageContext.pageProps = pageProps;\n}\n","// TODO: move to ../node/runtime/html/notSerializable.ts once code is distributed as ESM\nexport const notSerializable = 'not-serializable';\n","export { getPageContextProxyForUser };\nimport { assert, assertUsage, getGlobalObject } from './utils';\nimport { notSerializable } from '../shared/notSerializable';\nconst globalObject = getGlobalObject('getPageContextProxyForUser.ts', {});\n/**\n * - Throw error when pageContext value isn't serializable\n * - Throw error when pageContext prop is missing in passToClient\n */\nfunction getPageContextProxyForUser(pageContext) {\n    assert([true, false].includes(pageContext._hasPageContextFromServer));\n    assert([true, false].includes(pageContext._hasPageContextFromClient));\n    return new Proxy(pageContext, {\n        get(_, prop) {\n            const val = pageContext[prop];\n            const propName = JSON.stringify(prop);\n            assertUsage(val !== notSerializable, `pageContext[${propName}] couldn't be serialized and, therefore, is missing on the client-side. Check the server logs for more information.`);\n            assertPassToClient(pageContext, prop, `pageContext[${propName}] isn't available on the client-side because ${propName} is missing in passToClient, see https://vite-plugin-ssr.com/passToClient`);\n            return val;\n        }\n    });\n}\nfunction assertPassToClient(pageContext, prop, errMsg) {\n    // We disable assertPassToClient() for the next attempt to read `prop`, because of how Vue's reactivity work.\n    //  - (When changing a reactive object, Vue tries to read it's old value first. This triggers a `assertPassToClient()` failure if e.g. `pageContextOldReactive.routeParams = pageContextNew.routeParams` and `pageContextOldReactive` has no `routeParams`.)\n    if (globalObject.disable === prop)\n        return;\n    ignoreNextRead(prop);\n    if (prop in pageContext)\n        return;\n    if (isExpected(prop))\n        return;\n    if (pageContext._hasPageContextFromServer && !pageContext._hasPageContextFromClient) {\n        // We can safely assume that the property is missing in passToClient, because the server-side defines all passToClient properties even if they have an undefined value:\n        // ```\n        // <script id=\"vite-plugin-ssr_pageContext\" type=\"application/json\">{\"_pageId\":\"/pages/admin\",\"user\":\"!undefined\",\"pageProps\":\"!undefined\",\"title\":\"!undefined\",\"abortReason\":\"!undefined\",\"_urlRewrite\":null}</script>\n        // ```\n        // Note how properties have \"!undefined\" values => we can tell whether an undefined pageContext value exists in passToClient.\n        assertUsage(false, errMsg);\n    }\n    else {\n        // Do nothing, not even a warning.\n        // Because we don't know whether the user expects the pageContext value to be undefined. (E.g. a client-side onBeforeRender() hook conditionally setting a pageContext value.)\n    }\n}\nconst IGNORE_LIST = [\n    'then',\n    'toJSON' // Vue tries to get `toJSON`\n];\nfunction isExpected(prop) {\n    if (IGNORE_LIST.includes(prop))\n        return true;\n    if (typeof prop === 'symbol')\n        return true; // Vue tries to access some symbols\n    if (typeof prop !== 'string')\n        return true;\n    if (prop.startsWith('__v_'))\n        return true; // Vue internals upon `reactive(pageContext)`\n    return false;\n}\nfunction ignoreNextRead(prop) {\n    globalObject.disable = prop;\n    window.setTimeout(() => {\n        globalObject.disable = undefined;\n    }, 0);\n}\n","export { preparePageContextForUserConsumptionClientSide };\nimport { assert, isObject, objectAssign } from './utils';\nimport { sortPageContext } from '../shared/sortPageContext';\nimport { addIs404ToPageProps } from '../shared/addIs404ToPageProps';\nimport { getPageContextProxyForUser } from './getPageContextProxyForUser';\n// Release `pageContext` for user consumption.\n//\n// This adds `assertPassToClient()`.\n//\n// With Vue support (when `pageContext` is made reactive with Vue).\n//\n// For Vue + Cient Routing, the `pageContext` needs to be made reactive:\n// ```js\n// import { reactive } from 'vue'\n// // See entire example at `/examples/vue-full/`\n// const pageContextReactive = reactive(pageContext)\n// ```\nfunction preparePageContextForUserConsumptionClientSide(pageContext, isClientRouting) {\n    if (isClientRouting) {\n        const pageContextTyped = pageContext;\n        assert([true, false].includes(pageContextTyped.isHydration));\n        assert([true, false, null].includes(pageContextTyped.isBackwardNavigation));\n    }\n    else {\n        const pageContextTyped = pageContext;\n        assert(pageContextTyped.isHydration === true);\n        assert(pageContextTyped.isBackwardNavigation === null);\n    }\n    assert('config' in pageContext);\n    assert('configEntries' in pageContext);\n    // TODO/v1-release: remove\n    assert('exports' in pageContext);\n    assert('exportsAll' in pageContext);\n    assert('pageExports' in pageContext);\n    assert(isObject(pageContext.pageExports));\n    const Page = pageContext.exports.Page;\n    objectAssign(pageContext, { Page });\n    // For Vue's reactivity\n    resolveGetters(pageContext);\n    // For prettier `console.log(pageContext)`\n    sortPageContext(pageContext);\n    const pageContextForUserConsumption = getPageContextProxyForUser(pageContext);\n    addIs404ToPageProps(pageContext);\n    return pageContextForUserConsumption;\n}\n// Remove propery descriptor getters because they break Vue's reactivity.\n// E.g. resolve the `pageContext.urlPathname` getter.\nfunction resolveGetters(pageContext) {\n    Object.entries(pageContext).forEach(([key, val]) => {\n        delete pageContext[key];\n        pageContext[key] = val;\n    });\n}\n","export { findPageConfig };\nimport { assert } from '../utils';\nfunction findPageConfig(pageConfigs, pageId) {\n    var _a;\n    const result = pageConfigs.filter((p) => p.pageId === pageId);\n    assert(result.length <= 1);\n    const pageConfig = (_a = result[0]) !== null && _a !== void 0 ? _a : null;\n    return pageConfig;\n}\n","export { loadPageCode };\nimport { assert, assertDefaultExportUnknown, objectAssign } from '../utils';\nasync function loadPageCode(pageConfig, isDev) {\n    const configValues = {};\n    // In dev, Vite already caches the page's virtual module\n    if (!isDev && 'configValues' in pageConfig) {\n        return pageConfig;\n    }\n    const codeFiles = await pageConfig.loadCodeFiles();\n    codeFiles.forEach((codeFile) => {\n        const { configName, codeFilePath } = codeFile;\n        let configValue;\n        if (codeFile.isPlusFile) {\n            const { codeFileExports } = codeFile;\n            if (configName !== 'client') {\n                assertDefaultExportUnknown(codeFileExports, codeFilePath);\n            }\n            Object.entries(codeFileExports).forEach(([exportName, exportValue]) => {\n                const isSideExport = exportName !== 'default';\n                const configName = isSideExport ? exportName : codeFile.configName;\n                const configValue = exportValue;\n                configValues[configName] = configValue;\n                if (isSideExport) {\n                    const configElementOfMainExport = pageConfig.configElements[codeFile.configName];\n                    assert(configElementOfMainExport);\n                    pageConfig.configElements[configName] = {\n                        configValue,\n                        codeFileExport: exportName,\n                        codeFilePath,\n                        configDefinedByFile: codeFilePath,\n                        configDefinedAt: `${codeFilePath} > export { ${exportName} }`,\n                        configEnv: configElementOfMainExport.configEnv,\n                        plusConfigFilePath: null\n                    };\n                }\n            });\n        }\n        else {\n            configValue = codeFile.codeFileExportValue;\n            configValues[configName] = configValue;\n        }\n    });\n    Object.entries(pageConfig.configElements).map(([configName, configElement]) => {\n        if (configElement.codeFilePath)\n            return;\n        configValues[configName] = configElement.configValue;\n    });\n    objectAssign(pageConfig, { configValues });\n    return pageConfig;\n}\n","import { getPageFilesClientSide, getExports } from '../shared/getPageFiles';\nimport { findPageConfig } from '../shared/page-configs/findPageConfig';\nimport { loadPageCode } from '../shared/page-configs/loadPageCode';\nexport { loadPageFilesClientSide };\nexport { isErrorFetchingStaticAssets };\nconst stamp = '__whileFetchingAssets';\nasync function loadPageFilesClientSide(pageFilesAll, pageConfigs, pageId) {\n    const pageFilesClientSide = getPageFilesClientSide(pageFilesAll, pageId);\n    const pageConfig = findPageConfig(pageConfigs, pageId);\n    let pageConfigLoaded;\n    try {\n        // prettier-ignore\n        const result = await Promise.all([\n            pageConfig && loadPageCode(pageConfig, import.meta.env.DEV),\n            ...pageFilesClientSide.map((p) => { var _a; return (_a = p.loadFile) === null || _a === void 0 ? void 0 : _a.call(p); }),\n        ]);\n        pageConfigLoaded = result[0];\n    }\n    catch (err) {\n        // To trigger this catch: add `throw new Error()` in the global scope of +onRenderClient.js\n        if (isFetchError(err)) {\n            Object.assign(err, { [stamp]: true });\n        }\n        throw err;\n    }\n    const { config, configEntries, exports, exportsAll, pageExports } = getExports(pageFilesClientSide, pageConfigLoaded);\n    const pageContextAddendum = {\n        config,\n        configEntries,\n        exports,\n        exportsAll,\n        pageExports,\n        _pageFilesLoaded: pageFilesClientSide\n    };\n    return pageContextAddendum;\n}\nfunction isErrorFetchingStaticAssets(err) {\n    if (!err) {\n        return false;\n    }\n    return err[stamp] === true;\n}\n// https://stackoverflow.com/questions/75928310/how-to-detect-that-import-some-url-failed-because-some-url-isnt-a-javasc\nfunction isFetchError(err) {\n    if (!(err instanceof Error))\n        return false;\n    // https://github.com/stacks-network/clarity-js-sdk/blob/e757666b59af00b5db04dd1bf0df016e3a459ea2/packages/clarity/src/providers/registry.ts#L40-L45\n    // https://github.com/modernweb-dev/web/blob/0a59b56e4c1b50af81fbf4588f36a1ceb71f3976/integration/test-runner/tests/test-failure/runTestFailureTest.ts#L11-L18\n    const FAILED_TO_FETCH_MESSAGES = [\n        // chromium\n        'Failed to fetch dynamically imported module',\n        // firefox\n        'error loading dynamically imported module',\n        // safari\n        'Importing a module script failed',\n        // ??\n        'error resolving module specifier',\n        // ??\n        'failed to resolve module'\n    ];\n    return FAILED_TO_FETCH_MESSAGES.some((s) => err.message.toLowerCase().includes(s.toLowerCase()));\n}\n","export { executeOnRenderClientHook };\nimport { assert, assertUsage, executeHook } from './utils';\nimport { getHook } from '../shared/getHook';\nimport { preparePageContextForUserConsumptionClientSide } from './preparePageContextForUserConsumptionClientSide';\nasync function executeOnRenderClientHook(pageContext, isClientRouting) {\n    const pageContextForUserConsumption = preparePageContextForUserConsumptionClientSide(pageContext, isClientRouting);\n    let hook = null;\n    let hookName;\n    {\n        const renderHook = getHook(pageContext, 'render');\n        hook = renderHook;\n        hookName = 'render';\n    }\n    {\n        const renderHook = getHook(pageContext, 'onRenderClient');\n        if (renderHook) {\n            hook = renderHook;\n            hookName = 'onRenderClient';\n        }\n    }\n    if (!hook) {\n        const urlLogical = getUrlLogical(pageContext);\n        if (pageContext._pageConfigs.length > 0) {\n            // V1 design\n            assertUsage(false, `No onRenderClient() hook defined for URL '${urlLogical}', but it's needed, see https://vite-plugin-ssr.com/onRenderClient`);\n        }\n        else {\n            // TODO/v1-release: remove\n            // V0.4 design\n            const pageClientsFilesLoaded = pageContext._pageFilesLoaded.filter((p) => p.fileType === '.page.client');\n            let errMsg;\n            if (pageClientsFilesLoaded.length === 0) {\n                errMsg = 'No file `*.page.client.*` found for URL ' + urlLogical;\n            }\n            else {\n                errMsg =\n                    'One of the following files should export a `render()` hook: ' +\n                        pageClientsFilesLoaded.map((p) => p.filePath).join(' ');\n            }\n            assertUsage(false, errMsg);\n        }\n    }\n    assert(hook);\n    const renderHook = hook.hookFn;\n    assert(hookName);\n    // We don't use a try-catch wrapper because rendering errors are usually handled by the UI framework. (E.g. React's Error Boundaries.)\n    const hookResult = await executeHook(() => renderHook(pageContextForUserConsumption), hookName, hook.hookFilePath);\n    assertUsage(hookResult === undefined, `The ${hookName}() hook defined by ${hook.hookFilePath} isn't allowed to return a value`);\n}\nfunction getUrlLogical(pageContext) {\n    var _a;\n    let url;\n    // try/catch to avoid passToClient assertUsage() (although: this may not be needed anymore, since we're now accessing pageContext and not pageContextForUserConsumption)\n    try {\n        url =\n            // Client Routing\n            (_a = pageContext.urlPathname) !== null && _a !== void 0 ? _a : \n            // Server Routing\n            pageContext.urlOriginal;\n    }\n    catch { }\n    url = url !== null && url !== void 0 ? url : window.location.href;\n    return url;\n}\n"],"names":["isNodeJS","createErrorWithCleanStackTrace","errorMessage","numberOfStackTraceLinesToRemove","err","stackTraceLimit__original","clean","errStack","stackLines","splitByLine","linesRemoved","line","isStackTraceLine","str","getGlobalObject","key","defaultValue","allGlobalObjects","isObject","value","unique","arr","globalObject","clientRuntimesClonflict","clientNotSingleInstance","assertSingleInstance","versions","errMsg","assertUsage","assertWarning","onClientEntry_ServerRouting","isProduction","onClientEntry_ClientRouting","onProjectInfo","projectVersion","condition","onlyOnce","showStackTrace","msg","alreadyLogged","PROJECT_VERSION","projectInfo","v","s","pc","logType","projectTag","projectTagWithVersion","assert","debugInfo","_a","debugStr","debugInfoSerialized","addWhitespace","addPrefixAssertType","addPrefixProjctName","internalError","usageError","getProjectError","assertInfo","tag","prefix","showProjectVersion","isBrowser","state","assertClientRouting","assertNoContradiction","checkIfClientRouting","assertServerRouting","noContradiction","extJavaScript","extTemplates","scriptFileExtensionList","isScriptFile","filePath","yes","ext","isJavaScriptFile","isTemplateFile","slice","thing","from","to","sliceArray","list","listSlice","start","end","el","isParsable","url","assertUsageUrl","errPrefix","parseUrl","baseServer","urlWithoutHash","hashList","hashOriginal","hash","decodeSafe","urlWithoutSearch","searchList","searchOriginal","search","searchAll","val","origin","pathnameResolved","parseWithNewUrl","pathnameOriginal","urlRecreated","pathname","hasBaseServer","analyzeBaseServer","decodePathname","urlComponent","urlPathname","dir","isTauriProtocol","PROTOCOL_TAURI","PROTOCOL_FAKE","urlParsed","base","assertPathname","urlPathnameWithBase","isBaseServer","baseServerNormalized","objectAssign","obj","objAddendum","isCallable","higherFirst","getValue","element1","element2","val1","val2","makeFirst","makeLast","element","hasProp","prop","type","propValue","compareString","str1","str2","isNotNullish","p","sepWin32","assertPosixPath","path","IGNORE","FILES_WITH_SIDE_EXPORTS","assertDefaultExportUnknown","fileExports","assertSingleDefaultExport","defaultExportValueIsUnknown","exportsRelevant","exportName","exportsInvalid","e","exportsHasDefault","exportsInvalidStr","objectEntries","enforceTrue","assertExportValues","pageFile","explainer","forbiddenDefaultExports","assertDefaultExports","defaultExportName","getExports","pageFiles","pageConfig","configEntries","config","exportsAll","getExportValues","exportValue","isFromDefaultExport","configValues","configName","configValue","_b","_c","configElement","configDefinedByFile","configDefinedAt","pageExports","createObjectWithDeprecationWarning","exports","values","_fileType","_isFromDefaultExport","exportValues","defaultExportValue","args","determinePageIdOld","pageSuffix","pageId","assertPageFilePath","getErrorPageId","pageFilesAll","pageConfigs","errorPageConfigs","errorPageIds","isErrorPageId","errorPageId","_isV1Design","isErrorPage","fileTypes","determineFileType","parts","suffix1","suffix2","getPageFileObject","isRelevant","isRendererFilePath","isAncestorDefaultPage","fileType","env","isDefaultFilePath","defaultPageFilePath","defaultPageDir","filePathSegment","assertPageConfigs","assertConfigElements","assertPageConfigGlobal","pageConfigGlobal","configElements","isGlobalConfig","types","pattern","flags","serializer","deserializer","parse","modifier","reviver","match","deserialize","parsePageConfigs","parseConfigValue","assertRouteConfigValue","configValueSerialized","configValueType","parseGlobResults","pageFilesExports","pageFilesMap","parseGlobResult","globValue","loadModule","assertLoadModule","moduleExports","globObject","ret","globFiles","setPageFiles","getPageFilesAll","isClientSide","allPageIds","getAllPageIds","allPageFiles","fileIds","isDefaultPageFile","allPageIds2","getPageFilesClientSide","determine","getPageFilesServerSide","envIsClient","pageFilesRelevant","getPageFilesSorter","getPageIdFile","iso","files","pageIdFile","pageIdFileEnv","pageIdFileIso","getRendererFile","rendererFileEnv","rendererFileIso","defaultFilesNonRenderer","e1First","e2First","noOrder","e1","e2","e1_isRenderer","e2_isRenderer","e1_distance","getPathDistance","e2_distance","pathA","pathB","idx","pathAWithoutCommon","pathBWithoutCommon","distanceA","distanceB","humanizeTime","milliseconds","seconds","round","plural","minutes","n","rounded","executeHook","hookFn","hookName","hookFilePath","timeoutErr","timeoutWarn","getTimeouts","resolve","reject","promise","resolve_","reject_","clearTimeouts","t1","t2","getCurrentUrl","options","urlCurrent","getPageContextSerializedInHtml","id","elem","pageContextJson","pageContextSerializedInHtml","getHook","pageContext","file","assertHook","sortPageContext","entries","key1","key2","addIs404ToPageProps","assertIs404","addIs404","pageProps","notSerializable","getPageContextProxyForUser","_","propName","assertPassToClient","ignoreNextRead","isExpected","IGNORE_LIST","preparePageContextForUserConsumptionClientSide","isClientRouting","pageContextTyped","Page","resolveGetters","pageContextForUserConsumption","findPageConfig","result","loadPageCode","isDev","codeFile","codeFilePath","codeFileExports","isSideExport","configElementOfMainExport","stamp","loadPageFilesClientSide","pageFilesClientSide","pageConfigLoaded","isFetchError","isErrorFetchingStaticAssets","executeOnRenderClientHook","hook","renderHook","urlLogical","getUrlLogical","pageClientsFilesLoaded","hookResult"],"mappings":"AAAO,SAASA,IAAW,CASvB,MARI,SAAO,QAAY,KAEnB,CAAC,QAAQ,KAGT,CAAC,QAAQ,UAAY,OAAO,QAAQ,SAAS,KAAS,KAGtD,CAAC,QAAQ,SAAW,QAAQ,QAAQ,OAAS,OAGrD,CCVA,SAASC,EAA+BC,EAAcC,EAAiC,CACnF,IAAIC,EACJ,CACI,IAAIC,EAA4B,MAAM,gBACtC,MAAM,gBAAkB,IACxBD,EAAM,IAAI,MAAMF,CAAY,EAC5B,MAAM,gBAAkBG,CAC3B,CACD,OAAIL,GAAQ,IACRI,EAAI,MAAQE,GAAMF,EAAI,MAAOD,CAA+B,GAEzDC,CACX,CACA,SAASE,GAAMC,EAAUJ,EAAiC,CACtD,GAAI,CAACI,EACD,OAAOA,EAEX,MAAMC,EAAaC,GAAYF,CAAQ,EACvC,IAAIG,EAAe,EAcnB,OAb2BF,EACtB,OAAQG,GAELA,EAAK,SAAS,aAAa,GAAKA,EAAK,SAAS,iBAAiB,EACxD,GAEPD,EAAeP,GAAmCS,GAAiBD,CAAI,GACvED,IACO,IAEJ,EACV,EACI,KAAK;AAAA,CAAI,CAElB,CACA,SAASE,GAAiBD,EAAM,CAC5B,OAAOA,EAAK,WAAW,SAAS,CACpC,CACA,SAASF,GAAYI,EAAK,CAEtB,OAAOA,EAAI,MAAM,OAAO,CAC5B,CC1CO,SAASC,EAEhBC,EAAKC,EAAc,CACf,MAAMC,EAAoB,WAAW,kBAAoB,WAAW,mBAAqB,CAAA,EAEzF,OADsBA,EAAiBF,CAAG,EAAIE,EAAiBF,CAAG,GAAKC,CAE3E,CCNO,SAASE,EAASC,EAAO,CAC5B,OAAO,OAAOA,GAAU,UAAYA,IAAU,IAClD,CCDA,SAASC,EAAOC,EAAK,CACjB,OAAO,MAAM,KAAK,IAAI,IAAIA,CAAG,CAAC,CAClC,CCQA,MAAMC,EAAeR,EAAgB,4BAA6B,CAC9D,UAAW,CAAE,EACb,cAAe,IAAI,GACvB,CAAC,EACKS,GAA0B,4OAC1BC,EAA0B,+MAChC,SAASC,GAAuB,CAC5B,CACI,MAAMC,EAAWN,EAAOE,EAAa,SAAS,EAC9C,GAAII,EAAS,OAAS,EAAG,CACrB,MAAMC,EAAS,wBAAwBD,EAAS,CAAC,yBAAyBA,EAAS,CAAC,+CAIpFE,GAAY,GAAOD,CAAM,EAGhC,CACGL,EAAa,qBAAuBA,EAAa,UAAU,OAAS,GAIpEO,EAAc,GAAOL,EAAyB,CAAE,SAAU,GAAM,eAAgB,EAAI,CAAE,CAG9F,CACA,SAASM,GAA4BC,EAAc,CAC/CF,EAAcP,EAAa,kBAAoB,GAAMC,GAAyB,CAC1E,SAAU,GACV,eAAgB,EACxB,CAAK,EACDM,EAAcP,EAAa,kBAAoB,OAAWE,EAAyB,CAC/E,SAAU,GACV,eAAgB,EACxB,CAAK,EACDF,EAAa,gBAAkB,GAC3BS,IACAT,EAAa,oBAAsB,IACvCG,GACJ,CACA,SAASO,GAA4BD,EAAc,CAC/CF,EAAcP,EAAa,kBAAoB,GAAOC,GAAyB,CAC3E,SAAU,GACV,eAAgB,EACxB,CAAK,EACDM,EAAcP,EAAa,kBAAoB,OAAWE,EAAyB,CAC/E,SAAU,GACV,eAAgB,EACxB,CAAK,EACDF,EAAa,gBAAkB,GAC3BS,IACAT,EAAa,oBAAsB,IACvCG,GACJ,CAEA,SAASQ,GAAcC,EAAgB,CACnCZ,EAAa,UAAU,KAAKY,CAAc,EAC1CT,GACJ,CACA,SAASG,GAAYO,EAAWjC,EAAc,CAC1C,GAAIiC,EACA,OAEJ,MAAMR,EAAS,kCAAkCzB,IACjD,MAAM,IAAI,MAAMyB,CAAM,CAC1B,CACA,SAASE,EAAcM,EAAWjC,EAAc,CAAE,SAAAkC,EAAU,eAAAC,CAAc,EAAI,CAC1E,GAAIF,EACA,OAEJ,MAAMG,EAAM,8BAA8BpC,IAC1C,GAAIkC,EAAU,CACV,KAAM,CAAE,cAAAG,CAAe,EAAGjB,EACpBP,EAAMqB,IAAa,GAAOE,EAAMF,EACtC,GAAIG,EAAc,IAAIxB,CAAG,EACrB,OAGAwB,EAAc,IAAIxB,CAAG,EAIzB,QAAQ,KADRsB,EACa,IAAI,MAAMC,CAAG,EAGbA,CAHc,CAKnC,CChGA,MAAME,GAAkB,UAClBC,EAAc,CAChB,YAAa,kBACb,eAAgBD,GAChB,eAAgB,kBAChB,iBAAkB,6CACtB,EAEAP,GAAcQ,EAAY,cAAc,ECVxC,MAAMC,GAAE,IAAI,MAAOC,GAAMA,EAAE,CAAC,IAAI,IAAID,EAAC,CAAC,EACvBE,GAAAF,GCaTpB,EAAeR,EAAgB,kBAAmB,CACpD,cAAe,IAAI,IAEnB,OAAOwB,EAAKO,EAAS,CACbA,IAAY,OACZ,QAAQ,IAAIP,CAAG,EAGf,QAAQ,KAAKA,CAAG,CAEvB,EACD,mBAAoB,IAAI,OAC5B,CAAC,EACKQ,GAAa,IAAIL,EAAY,kBAC7BM,GAAwB,IAAIN,EAAY,kBAAkBA,EAAY,kBACtEtC,EAAkC,EACxC,SAAS6C,EAAOb,EAAWc,EAAW,CAClC,IAAIC,EACJ,GAAIf,EACA,OACJ,MAAMgB,GAAY,IAAM,CACpB,GAAI,CAACF,EACD,OAAO,KAEX,MAAMG,EAAsB,OAAOH,GAAc,SAAWA,EAAY,IAAM,KAAK,UAAUA,CAAS,EAAI,IAC1G,MAAO,+BAA+BR,EAAY,kDAAkDW,GAC5G,KACI,IAAIzB,EAAS,CACT,8BAA8Bc,EAAY,6BAC1C,SAASA,EAAY,iHACrBU,CACH,EACI,OAAO,OAAO,EACd,KAAK,GAAG,EACbxB,EAAS0B,EAAc1B,CAAM,EAC7BA,EAAS2B,EAAoB3B,EAAQ,KAAK,EAC1CA,EAAS4B,EAAoB5B,EAAQ,EAAI,EACzC,MAAM6B,EAAgBvD,EAA+B0B,EAAQxB,CAA+B,EAC5F,MAAC+C,EAAK5B,EAAa,eAAiB,MAAQ4B,IAAO,QAAkBA,EAAG,KAAK5B,CAAY,EACnFkC,CACV,CACA,SAAS5B,EAAYO,EAAWR,EAAQ,CAAE,eAAAU,CAAc,EAAK,CAAA,EAAI,CAC7D,IAAIa,EACJ,GAAIf,EACA,OACJR,EAAS0B,EAAc1B,CAAM,EAC7BA,EAAS2B,EAAoB3B,EAAQ,aAAa,EAClDA,EAAS4B,EAAoB5B,CAAM,EACnC,MAAM8B,EAAaxD,EAA+B0B,EAAQxB,CAA+B,EACzF,MAAIkC,GACAf,EAAa,mBAAmB,IAAImC,CAAU,GAEjDP,EAAK5B,EAAa,eAAiB,MAAQ4B,IAAO,QAAkBA,EAAG,KAAK5B,CAAY,EACnFmC,CACV,CACA,SAASC,GAAgB/B,EAAQ,CAC7B,OAAAA,EAAS0B,EAAc1B,CAAM,EAC7BA,EAAS2B,EAAoB3B,EAAQ,OAAO,EAC5CA,EAAS4B,EAAoB5B,CAAM,EACd1B,EAA+B0B,EAAQxB,CAA+B,CAE/F,CACA,SAAS0B,EAAcM,EAAWG,EAAK,CAAE,SAAAF,EAAU,eAAAC,CAAc,EAAI,CACjE,IAAIa,EACJ,GAAI,CAAAf,EAKJ,IAHAG,EAAMe,EAAcf,CAAG,EACvBA,EAAMgB,EAAoBhB,EAAK,SAAS,EACxCA,EAAMiB,EAAoBjB,CAAG,EACzBF,EAAU,CACV,KAAM,CAAE,cAAAG,CAAe,EAAGjB,EACpBP,EAAMqB,IAAa,GAAOE,EAAMF,EACtC,GAAIG,EAAc,IAAIxB,CAAG,EACrB,OAGAwB,EAAc,IAAIxB,CAAG,EAI7B,IADCmC,EAAK5B,EAAa,eAAiB,MAAQ4B,IAAO,QAAkBA,EAAG,KAAK5B,CAAY,EACrFe,EAAgB,CAChB,MAAMjC,EAAM,IAAI,MAAMkC,CAAG,EACzBhB,EAAa,mBAAmB,IAAIlB,CAAG,EACvCkB,EAAa,OAAOlB,EAAK,MAAM,OAG/BkB,EAAa,OAAOgB,EAAK,MAAM,EAEvC,CACA,SAASqB,GAAWxB,EAAWG,EAAK,CAAE,SAAAF,CAAQ,EAAI,CAC9C,IAAIc,EACJ,GAAI,CAAAf,EAKJ,IAFAG,EAAMe,EAAcf,CAAG,EACvBA,EAAMiB,EAAoBjB,CAAG,EACzBF,EAAU,CACV,KAAM,CAAE,cAAAG,CAAe,EAAGjB,EACpBP,EAAMuB,EACZ,GAAIC,EAAc,IAAIxB,CAAG,EACrB,OAGAwB,EAAc,IAAIxB,CAAG,GAG5BmC,EAAK5B,EAAa,eAAiB,MAAQ4B,IAAO,QAAkBA,EAAG,KAAK5B,CAAY,EACzFA,EAAa,OAAOgB,EAAK,MAAM,EACnC,CAIA,SAASgB,EAAoBhB,EAAKsB,EAAK,CACnC,IAAIC,EAAS,IAAID,KAEjB,OAAAC,EAASjB,GADKgB,IAAQ,UAAY,SAAW,KAC5B,EAAEC,CAAM,EAClB,GAAGA,IAASvB,GACvB,CACA,SAASe,EAAcf,EAAK,CACxB,OAAIA,EAAI,WAAW,GAAG,EACXA,EAGA,IAAIA,GAEnB,CACA,SAASiB,EAAoBjB,EAAKwB,EAAqB,GAAO,CAE1D,MAAO,GADQA,EAAqBf,GAAwBD,KACzCR,GACvB,CC/IO,SAASyB,GAAY,CAExB,OAAO,OAAO,OAAW,KAAe,OAAO,OAAO,SAAY,QACtE,CCGA,MAAMC,EAAQlD,EAAgB,4BAA6B,CAAA,CAAE,EAC7D,SAASmD,IAAsB,CAC3BC,GAAsBC,GAAoB,CAAE,EAC5CH,EAAM,gBAAkB,EAC5B,CACA,SAASG,IAAuB,CAC5B,OAAOH,EAAM,kBAAoB,EACrC,CACA,SAASI,IAAsB,CAC3BF,GAAsBF,EAAM,kBAAoB,EAAI,EACpDA,EAAM,gBAAkB,EAC5B,CACA,SAASE,GAAsBG,EAAiB,CAE5CzC,EAAYmC,EAAS,EAAI,8FAA+F,CAAE,eAAgB,EAAI,CAAE,EAChJlC,EAAcwC,EAAiB,8SAA+S,CAAE,eAAgB,GAAM,SAAU,EAAI,CAAE,CAC1X,CCPA,MAAMC,GAAgB,CAClB,KACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,MACJ,EAEMC,GAAe,CACjB,MACA,SACA,QACA,KACA,KACJ,EACMC,GAA0B,CAAC,GAAGF,GAAe,GAAGC,EAAY,EAElE,SAASE,GAAaC,EAAU,CAC5B,MAAMC,EAAMH,GAAwB,KAAMI,GAAQF,EAAS,SAAS,IAAME,CAAG,CAAC,EAC9E,OAAA5B,EAAO,CAAC6B,GAAiBH,CAAQ,GAAKC,CAAG,EAClCA,CACX,CACA,SAASE,GAAiBH,EAAU,CAChC,MAAO,oBAAoB,KAAKA,CAAQ,CAC5C,CACA,SAASI,GAAeJ,EAAU,CAC9B,OAAOH,GAAa,KAAMK,GAAQF,EAAS,SAAS,IAAME,CAAG,CAAC,CAClE,CC/CA,SAASG,EAAMC,EAAOC,EAAMC,EAAI,CAC5B,OAAI,OAAOF,GAAU,SACVG,EAAWH,EAAM,MAAM,EAAE,EAAGC,EAAMC,CAAE,EAAE,KAAK,EAAE,EAG7CC,EAAWH,EAAOC,EAAMC,CAAE,CAEzC,CACA,SAASC,EAAWC,EAAMH,EAAMC,EAAI,CAChC,MAAMG,EAAY,CAAA,EAClB,IAAIC,EAAQL,GAAQ,EAAIA,EAAOG,EAAK,OAASH,EAC7CjC,EAAOsC,GAAS,GAAKA,GAASF,EAAK,MAAM,EACzC,IAAIG,EAAML,GAAM,EAAIA,EAAKE,EAAK,OAASF,EAEvC,IADAlC,EAAOuC,GAAO,GAAKA,GAAOH,EAAK,MAAM,EAE7B,EAAAE,IAAUC,IAGVD,IAAUF,EAAK,SACfE,EAAQ,GAERA,IAAUC,KAPL,CAUT,MAAMC,EAAKJ,EAAKE,CAAK,EACrBtC,EAAOwC,IAAO,MAAS,EACvBH,EAAU,KAAKG,CAAE,EACjBF,IAEJ,OAAOD,CACX,CCtBA,SAASI,GAAWC,EAAK,CAErB,OAAQA,EAAI,WAAW,GAAG,GACtBA,EAAI,WAAW,MAAM,GACrBA,EAAI,WAAW,UAAU,GACzBA,EAAI,WAAW,GAAG,GAClBA,EAAI,WAAW,GAAG,GAClBA,EAAI,WAAW,GAAG,GAClBA,IAAQ,EAChB,CACA,SAASC,GAAeD,EAAKE,EAAW,CACpC5C,EAAO4C,EAAU,SAAS,OAAO,CAAC,EAClChE,EAAY,OAAO8D,GAAQ,SAAU,GAAGE,sBAA8B,EAClE,CAAAH,GAAWC,CAAG,IAEd,CAACA,EAAI,WAAW,GAAG,GAAK,CAACA,EAAI,SAAS,GAAG,EACzC9D,EAAY,GAAO,GAAGgE,SAAiBF,yBAA2BA,8DAAgE,EAGlI9D,EAAY,GAAO,GAAGgE,qBAA6B,EAE3D,CACA,SAASC,GAASH,EAAKI,EAAY,CAC/B9C,EAAOyC,GAAWC,CAAG,EAAG,CAAE,IAAAA,CAAK,CAAA,EAC/B1C,EAAO8C,EAAW,WAAW,GAAG,EAAG,CAAE,IAAAJ,EAAK,WAAAI,CAAU,CAAE,EAEtD,KAAM,CAACC,EAAgB,GAAGC,CAAQ,EAAIN,EAAI,MAAM,GAAG,EACnD1C,EAAO+C,IAAmB,MAAS,EACnC,MAAME,EAAe,CAAC,GAAI,GAAGD,CAAQ,EAAE,KAAK,GAAG,GAAK,KACpDhD,EAAOiD,IAAiB,MAAQA,EAAa,WAAW,GAAG,CAAC,EAC5D,MAAMC,EAAOD,IAAiB,KAAO,GAAKE,EAAWF,EAAa,MAAM,CAAC,CAAC,EAEpE,CAACG,EAAkB,GAAGC,CAAU,EAAIN,EAAe,MAAM,GAAG,EAClE/C,EAAOoD,IAAqB,MAAS,EACrC,MAAME,EAAiB,CAAC,GAAI,GAAGD,CAAU,EAAE,KAAK,GAAG,GAAK,KACxDrD,EAAOsD,IAAmB,MAAQA,EAAe,WAAW,GAAG,EAAG,CAAE,IAAAZ,EAAK,eAAAY,CAAc,CAAE,EACzF,MAAMC,EAAS,CAAA,EACTC,EAAY,CAAA,EAClB,MAAM,KAAK,IAAI,gBAAgBF,GAAkB,EAAE,CAAC,EAAE,QAAQ,CAAC,CAACvF,EAAK0F,CAAG,IAAM,CAC1EF,EAAOxF,CAAG,EAAI0F,EACdD,EAAUzF,CAAG,EAAI,CAAC,GAAIyF,EAAUzF,CAAG,GAAK,CAAA,EAAK0F,CAAG,CACxD,CAAK,EAED,KAAM,CAAE,OAAAC,EAAQ,iBAAAC,CAAgB,EAAKC,GAAgBR,EAAkBN,CAAU,EACjF9C,EAAO0D,IAAW,MAAQA,IAAWP,EAAWO,CAAM,EAAG,CAAE,OAAAA,CAAM,CAAE,EACnE1D,EAAO2D,EAAiB,WAAW,GAAG,EAAG,CAAE,IAAAjB,EAAK,iBAAAiB,CAAgB,CAAE,EAClE3D,EAAO0D,IAAW,MAAQhB,EAAI,WAAWgB,CAAM,EAAG,CAAE,IAAAhB,EAAK,OAAAgB,CAAM,CAAE,EAEjE,MAAMG,EAAmBT,EAAiB,OAAOM,GAAU,IAAI,MAAM,EACrE,CACI,MAAMI,EAAe,GAAGJ,GAAU,KAAKG,IAAmBP,GAAkB,KAAKL,GAAgB,KACjGjD,EAAO0C,IAAQoB,EAAc,CAAE,IAAApB,EAAK,aAAAoB,CAAc,CAAA,CACrD,CAED,GAAI,CAAE,SAAAC,EAAU,cAAAC,CAAa,EAAKC,GAAkBN,EAAkBb,CAAU,EAChF,OAAAiB,EAAWG,GAAeH,CAAQ,EAClC/D,EAAO+D,EAAS,WAAW,GAAG,CAAC,EACxB,CACH,OAAAL,EACA,SAAAK,EACA,iBAAkBF,EAClB,cAAAG,EACA,OAAAT,EACA,UAAAC,EACA,eAAAF,EACA,KAAAJ,EACA,aAAAD,CACR,CACA,CACA,SAASE,EAAWgB,EAAc,CAC9B,GAAI,CACA,OAAO,mBAAmBA,CAAY,CACzC,MACD,CAAS,CACT,GAAI,CACA,OAAO,UAAUA,CAAY,CAChC,MACD,CAAS,CACT,OAAOA,CACX,CACA,SAASD,GAAeE,EAAa,CACjC,OAAOA,EACF,MAAM,GAAG,EACT,IAAKC,GAAQlB,EAAWkB,CAAG,EAAE,MAAM,GAAG,EAAE,KAAK,KAAK,CAAC,EACnD,KAAK,GAAG,CACjB,CACA,SAAST,GAAgBR,EAAkBN,EAAY,CACnD,IAAI5C,EAEJ,GAAIkD,EAAiB,WAAW,IAAI,EAChC,MAAO,CAAE,OAAQ,KAAM,iBAAkBA,CAAgB,EAE7D,IAAIkB,EAAkB,GACtB,MAAMC,EAAiB,WACjBC,EAAgB,UAClBpB,EAAiB,WAAWmB,CAAc,IAC1CD,EAAkB,GAClBlB,EAAmBoB,EAAgBpB,EAAiB,MAAMmB,EAAe,MAAM,GAEnF,IAAIb,EACAC,EACJ,GAAI,CAEA,MAAMc,EAAY,IAAI,IAAIrB,CAAgB,EAC1CM,EAASe,EAAU,OACnBd,EAAmBc,EAAU,QAChC,MACD,CAEIf,EAAS,KAET,IAAIgB,EAAO,OAAO,OAAW,OAGxBxE,EAAK,QAAW,KAA4B,OAAS,OAAO,YAAc,MAAQA,IAAO,OAAS,OAASA,EAAG,SACnHwE,EAAOA,GAAQ,0BAA4B5B,EAQ3Ca,EADkB,IAAI,IAAIP,EAAkBsB,CAAI,EACnB,QAChC,CACD,OAAKf,IACDA,EAAmB,KACnBW,IACAtE,EAAO0D,CAAM,EACb1D,EAAO0D,EAAO,WAAWc,CAAa,CAAC,EACvCd,EAASa,EAAiBb,EAAO,MAAMc,EAAc,MAAM,GAE/DxE,EAAO2D,EAAiB,WAAW,GAAG,EAAG,CAAE,iBAAAP,EAAkB,iBAAAO,CAAgB,CAAE,EAG/E3D,EAAO2D,IAAqBA,EAAiB,MAAM,GAAG,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,CAAC,EACjE,CAAE,OAAAD,EAAQ,iBAAAC,EACrB,CAeA,SAASgB,GAAeP,EAAa,CACjCpE,EAAOoE,EAAY,WAAW,GAAG,CAAC,EAClCpE,EAAO,CAACoE,EAAY,SAAS,GAAG,CAAC,EACjCpE,EAAO,CAACoE,EAAY,SAAS,GAAG,CAAC,CACrC,CACA,SAASH,GAAkBW,EAAqB9B,EAAY,CACxD6B,GAAeC,CAAmB,EAClC5E,EAAO6E,GAAa/B,CAAU,CAAC,EAE/B,IAAIsB,EAAcQ,EAGlB,GAFA5E,EAAOoE,EAAY,WAAW,GAAG,CAAC,EAClCpE,EAAO8C,EAAW,WAAW,GAAG,CAAC,EAC7BA,IAAe,IAEf,MAAO,CAAE,SADQ8B,EACE,cAAe,IAGtC,IAAIE,EAAuBhC,EAK3B,OAJIA,EAAW,SAAS,GAAG,GAAKsB,IAAgBrC,EAAMe,EAAY,EAAG,EAAE,IACnEgC,EAAuB/C,EAAMe,EAAY,EAAG,EAAE,EAC9C9C,EAAOoE,IAAgBU,CAAoB,GAE1CV,EAAY,WAAWU,CAAoB,GAIhD9E,EAAOoE,EAAY,WAAW,GAAG,GAAKA,EAAY,WAAW,MAAM,CAAC,EACpEpE,EAAOoE,EAAY,WAAWU,CAAoB,CAAC,EACnDV,EAAcA,EAAY,MAAMU,EAAqB,MAAM,EACtDV,EAAY,WAAW,GAAG,IAC3BA,EAAc,IAAMA,GACxBpE,EAAOoE,EAAY,WAAW,GAAG,CAAC,EAC3B,CAAE,SAAUA,EAAa,cAAe,EAAI,GARxC,CAAE,SADQQ,EACE,cAAe,GAS1C,CA0BA,SAASC,GAAa/B,EAAY,CAC9B,OAAOA,EAAW,WAAW,GAAG,CACpC,CC7NA,SAASiC,EAAaC,EAAKC,EAAa,CACpC,OAAO,OAAOD,EAAKC,CAAW,CAClC,CCJO,SAASC,EAAWlD,EAAO,CAC9B,OAAOA,aAAiB,UAAY,OAAOA,GAAU,UACzD,CCMA,SAASmD,GAAYC,EAAU,CAC3B,MAAO,CAACC,EAAUC,IAAa,CAC3B,MAAMC,EAAOH,EAASC,CAAQ,EACxBG,EAAOJ,EAASE,CAAQ,EAC9B,OAAIC,IAASC,EACF,EAEJD,EAAOC,EAAO,GAAK,CAClC,CACA,CAWA,SAASC,GAAUL,EAAU,CACzB,MAAO,CAACC,EAAUC,IAAa,CAC3B,MAAMC,EAAOH,EAASC,CAAQ,EACxBG,EAAOJ,EAASE,CAAQ,EAG9B,GAFAtF,EAAO,CAAC,GAAM,GAAO,IAAI,EAAE,SAASuF,CAAI,CAAC,EACzCvF,EAAO,CAAC,GAAM,GAAO,IAAI,EAAE,SAASwF,CAAI,CAAC,EACrCD,IAASC,EACT,MAAO,GAEX,GAAID,IAAS,IAAQC,IAAS,GAC1B,MAAO,GAEX,GAAIA,IAAS,IAAQD,IAAS,GAC1B,MAAO,GAEXvF,EAAO,EAAK,CACpB,CACA,CACA,SAAS0F,GAASN,EAAU,CACxB,OAAOK,GAAWE,GAAY,CAC1B,MAAMlC,EAAM2B,EAASO,CAAO,EAC5B,OAAIlC,IAAQ,KACD,KAGA,CAACA,CAEpB,CAAK,CACL,CClDA,SAASmC,EAAQZ,EAAKa,EAAMC,EAAO,UAAW,CAC1C,GAAI,CAAC5H,EAAS8G,CAAG,EACb,MAAO,GACX,GAAI,EAAEa,KAAQb,GACV,OAAOc,IAAS,YAEpB,GAAIA,IAAS,UACT,MAAO,GAEX,MAAMC,EAAYf,EAAIa,CAAI,EAC1B,OAAIC,IAAS,QACF,MAAM,QAAQC,CAAS,EAE9BD,IAAS,SACF5H,EAAS6H,CAAS,EAEzBD,IAAS,WACF,MAAM,QAAQC,CAAS,GAAKA,EAAU,MAAMvD,GAAM,OAAOA,GAAO,QAAQ,EAE/EsD,IAAS,WACFZ,EAAWa,CAAS,EAE3B,MAAM,QAAQD,CAAI,EACX,OAAOC,GAAc,UAAYD,EAAK,SAASC,CAAS,EAE/DD,IAAS,OACFC,IAAc,KAErBD,IAAS,YACFC,IAAc,OAErBD,IAAS,OACFC,IAAc,GAErBD,IAAS,QACFC,IAAc,GAElB,OAAOA,IAAcD,CAChC,CC3CA,SAASE,GAAcC,EAAMC,EAAM,CAC/B,OAAID,EAAK,cAAgBC,EAAK,YAAa,EAChC,GACPD,EAAK,cAAgBC,EAAK,YAAa,EAChC,EACJ,CACX,CCPO,MAAMC,GAAgBC,GAAMA,GAAM,KCMnCC,GAAW,KASjB,SAASC,GAAgBC,EAAM,CAC3B,MAAM5H,EAAUW,GAAQ,qBAAqBA,IAC7CU,EAAOuG,IAAS,KAAM5H,EAAO,MAAM,CAAC,EACpCqB,EAAO,OAAOuG,GAAS,SAAU5H,EAAO,oBAAoB,OAAO4H,IAAO,CAAC,EAC3EvG,EAAOuG,IAAS,GAAI5H,EAAO,gBAAgB,CAAC,EAC5CqB,EAAOuG,CAAI,EACXvG,EAAO,CAACuG,EAAK,SAASF,EAAQ,EAAG1H,EAAO4H,CAAI,CAAC,CACjD,CClBA,MAAMC,GAAS,CAEX,kBAEA,gBACJ,EAEMC,GAA0B,CAAC,MAAO,MAAM,EAC9C,SAASC,GAA2BC,EAAajF,EAAU,CACvDkF,GAA0BD,EAAajF,EAAU,EAAI,CACzD,CAMA,SAASkF,GAA0BD,EAAajF,EAAUmF,EAA6B,CAEnF,MAAMC,EADa,OAAO,KAAKH,CAAW,EACP,OAAQI,GAAe,CAACP,GAAO,SAASO,CAAU,CAAC,EAChFC,EAAiBF,EAAgB,OAAQG,GAAMA,IAAM,SAAS,EAC9DC,EAAoBJ,EAAgB,SAAS,SAAS,EAC5D,GAAIE,EAAe,SAAW,EAAG,CAC7B,GAAIE,EACA,OAGAlH,EAAO8G,EAAgB,SAAW,CAAC,EACnClI,EAAY,GAAO,GAAG8C,6EAAoF,UAGzG,CAAC+E,GAAwB,KAAM7E,GAAQF,EAAS,SAASE,CAAG,CAAC,EAAG,CACrE,MAAMuF,EAAoBH,EAAe,KAAK,IAAI,EAC9CH,EACAhI,EAAcmI,EAAe,SAAW,EAAG,GAAGtF,0DAAiEyF,QAAyB,CAAE,SAAU,EAAM,CAAA,EAG1JtI,EAAcmI,EAAe,SAAW,EAAG,GAAGtF,wBAA+ByF,iCAAiDA,QAAyB,CAAE,SAAU,EAAI,CAAE,EAGrL,CCzCA,SAASC,GAAcpC,EAAK,CACxB,OAAO,OAAO,QAAQA,CAAG,CAC7B,CCCA,MAAMqC,GAAc,CAAC,eAAe,EACpC,SAASC,GAAmBC,EAAU,CAClCF,GAAY,QAASN,GAAe,CAEhC,GADA/G,EAAOuH,EAAS,WAAW,EACvB,EAAER,KAAcQ,EAAS,aACzB,OACJ,MAAMC,EAAY,kBAAkBT,sCACpCnI,EAAY2I,EAAS,YAAYR,CAAU,IAAM,GAAO,GAAGQ,EAAS,2BAA2BR,yEAAkFA,mBAA4BS,IAAY,EACzN5I,EAAY2I,EAAS,YAAYR,CAAU,IAAM,GAAM,GAAGQ,EAAS,2BAA2BR,iCAA0CS,GAAW,CAC3J,CAAK,CACL,CAEA,MAAMC,GAA0B,CAAC,SAAU,gBAAiB,YAAa,gBAAgB,EACzF,SAASC,GAAqBC,EAAmBjG,EAAU,CACvD9C,EAAY,CAAC6I,GAAwB,SAASE,CAAiB,EAAG,GAAGjG,4BAAmCiG,6CAA6DA,gBAAgC,CACzM,CCfA,SAASC,GAAWC,EAAWC,EAAY,CACvC,MAAMC,EAAgB,CAAA,EAChBC,EAAS,CAAA,EACTC,EAAa,CAAA,EAoBnB,GAjBAJ,EAAU,QAASN,GAAa,CACPW,GAAgBX,CAAQ,EAChC,QAAQ,CAAC,CAAE,WAAAR,EAAY,YAAAoB,EAAa,oBAAAC,CAAmB,IAAO,CACvE,IAAIlI,EACJF,EAAO+G,IAAe,SAAS,EAC/BkB,EAAWlB,CAAU,GAAK7G,EAAK+H,EAAWlB,CAAU,KAAO,MAAQ7G,IAAO,OAASA,EAAK,CAAA,EACxF+H,EAAWlB,CAAU,EAAE,KAAK,CACxB,YAAAoB,EACA,aAAc,GAAGZ,EAAS,cAAca,EAAsB,sBAAsBrB,QAAmB,cAAcA,UACrH,SAAUQ,EAAS,SACnB,UAAWA,EAAS,SACpB,UAAWA,EAAS,SACpB,qBAAsBa,CACtC,CAAa,CACb,CAAS,CACT,CAAK,EAEGN,EAAY,CACZ,KAAM,CAAE,aAAAO,CAAc,EAAGP,EACzBV,GAAciB,CAAY,EAAE,QAAQ,CAAC,CAACC,EAAYC,CAAW,IAAM,CAC/D,IAAIrI,EAAIsI,EAAIC,EACZ,MAAMC,EAAgBZ,EAAW,eAAeQ,CAAU,EAC1DtI,EAAO0I,CAAa,EACpB,KAAM,CAAE,oBAAAC,EAAqB,gBAAAC,CAAiB,EAAGF,EACjD1I,EAAO2I,CAAmB,EAC1BX,EAAOM,CAAU,GAAKpI,EAAK8H,EAAOM,CAAU,KAAO,MAAQpI,IAAO,OAASA,EAAKqI,EAChFR,EAAcO,CAAU,GAAKE,EAAKT,EAAcO,CAAU,KAAO,MAAQE,IAAO,OAASA,EAAK,CAAA,EAE9FxI,EAAO+H,EAAcO,CAAU,EAAE,SAAW,CAAC,EAC7CP,EAAcO,CAAU,EAAE,KAAK,CAC3B,YAAAC,EACA,gBAAAK,EACA,oBAAAD,CAChB,CAAa,EAED,MAAM5B,EAAauB,EACnBL,EAAWlB,CAAU,GAAK0B,EAAKR,EAAWlB,CAAU,KAAO,MAAQ0B,IAAO,OAASA,EAAK,CAAA,EACxFR,EAAWlB,CAAU,EAAE,KAAK,CACxB,YAAawB,EACb,aAAcK,EACd,SAAUD,EACV,UAAWA,EACX,UAAW,KACX,qBAAsB,IACtC,CAAa,CACb,CAAS,EAEL,MAAME,EAAcC,KACdC,EAAU,CAAA,EAChB,cAAO,QAAQd,CAAU,EAAE,QAAQ,CAAC,CAAClB,EAAYiC,CAAM,IAAM,CACzDA,EAAO,QAAQ,CAAC,CAAE,YAAAb,EAAa,UAAAc,EAAW,qBAAAC,CAAoB,IAAO,CACjE,IAAIhJ,EACJ6I,EAAQhC,CAAU,GAAK7G,EAAK6I,EAAQhC,CAAU,KAAO,MAAQ7G,IAAO,OAASA,EAAKiI,EAE9Ec,IAAc,SAAW,CAACC,IACpBnC,KAAc8B,IAChBA,EAAY9B,CAAU,EAAIoB,GAG9C,CAAS,CACT,CAAK,EACDnI,EAAO,EAAE,YAAa+I,EAAQ,EAC9B/I,EAAO,EAAE,YAAaiI,EAAW,EAC1B,CACH,OAAAD,EACA,cAAAD,EAEA,QAAAgB,EACA,WAAAd,EACA,YAAAY,CACR,CACA,CACA,SAASX,GAAgBX,EAAU,CAC/B,KAAM,CAAE,SAAA7F,EAAU,YAAAiF,CAAa,EAAGY,EAClCvH,EAAO2G,CAAW,EAClB3G,EAAOyB,GAAaC,CAAQ,CAAC,EAC7B,MAAMyH,EAAe,CAAA,EACrB,cAAO,QAAQxC,CAAW,EACrB,KAAKjB,GAAS,CAAC,CAACqB,CAAU,IAAMA,IAAe,SAAS,CAAC,EACzD,QAAQ,CAAC,CAACA,EAAYoB,CAAW,IAAM,CACxC,IAAIC,EAAsBrB,IAAe,UACzC,GAAIqB,EACA,GAAItG,GAAeJ,CAAQ,EACvBqF,EAAa,WAEZ,CACDnI,EAAYV,EAASiK,CAAW,EAAG,6BAA6BzG,wBAA+B,EAC/F,OAAO,QAAQyG,CAAW,EAAE,QAAQ,CAAC,CAACR,EAAmByB,CAAkB,IAAM,CAC7E1B,GAAqBC,EAAmBjG,CAAQ,EAChDyH,EAAa,KAAK,CACd,WAAYxB,EACZ,YAAayB,EACb,oBAAAhB,CACxB,CAAqB,CACrB,CAAiB,EACD,OAGRe,EAAa,KAAK,CACd,WAAApC,EACA,YAAAoB,EACA,oBAAAC,CACZ,CAAS,CACT,CAAK,EACDe,EAAa,QAAQ,CAAC,CAAE,WAAApC,EAAY,oBAAAqB,CAAmB,IAAO,CAC1DpI,EAAO,EAAEoI,GAAuBX,GAAwB,SAASV,CAAU,EAAE,CACrF,CAAK,EACMoC,CACX,CACA,SAASL,IAAqC,CAC1C,OAAO,IAAI,MAAM,GAAI,CACjB,OAAOO,EAAM,CAET,OAAKtI,EAAS,GACVlC,EAAc,GAAO,oHAAqH,CAAE,SAAU,GAAM,eAAgB,EAAI,CAAE,EAE/K,QAAQ,IAAI,GAAGwK,CAAI,CAC7B,CACT,CAAK,CACL,CC/HA,SAASC,GAAmB5H,EAAU,CAClC,MAAM6H,EAAa,SACbC,EAASzH,EAAML,EAAS,MAAM6H,CAAU,EAAG,EAAG,EAAE,EAAE,KAAKA,CAAU,EACvE,OAAAvJ,EAAO,CAACwJ,EAAO,SAAS,IAAI,CAAC,EACtBA,CACX,CCLA,SAASC,EAAmB/H,EAAU,CAClC4E,GAAgB5E,CAAQ,CAI5B,CCHA,SAASgI,GAAeC,EAAcC,EAAa,CAC/C,GAAIA,EAAY,OAAS,EAAG,CACxB,MAAMC,EAAmBD,EAAY,OAAQxD,GAAMA,EAAE,WAAW,EAChE,OAAIyD,EAAiB,SAAW,EACrB,MACXjL,EAAYiL,EAAiB,SAAW,EAAG,oCAAoC,EACxEA,EAAiB,CAAC,EAAE,QAG/B,MAAMC,EAAe1L,EAAOuL,EAAa,IAAI,CAAC,CAAE,OAAAH,CAAQ,IAAKA,CAAM,EAAE,OAAQA,GAAWO,EAAcP,CAAa,CAAC,CAAC,EAErH,GADA5K,EAAYkL,EAAa,QAAU,EAAG,0DAA0DA,EAAa,KAAK,GAAG,GAAG,EACpHA,EAAa,OAAS,EAAG,CACzB,MAAME,EAAcF,EAAa,CAAC,EAClC,OAAA9J,EAAOgK,CAAW,EACXA,EAEX,OAAO,IACX,CAEA,SAASD,EAAcP,EAAQS,EAAa,CACxC,OAAAjK,EAAO,CAACwJ,EAAO,SAAS,IAAI,CAAC,EACtBA,EAAO,SAAS,SAAS,CACpC,CACA,SAASU,GAAYV,EAAQI,EAAa,CACtC,GAAIA,EAAY,OAAS,EAAG,CACxB,MAAM9B,EAAa8B,EAAY,KAAMxD,GAAMA,EAAE,SAAWoD,CAAM,EAC9D,OAAAxJ,EAAO8H,CAAU,EACVA,EAAW,gBAGlB,QAAOiC,EAAcP,CAAa,CAE1C,CC/BA,MAAMW,GAAY,CACd,QACA,eACA,cACA,eAIA,MACJ,EAIA,SAASC,GAAkB1I,EAAU,CAI7B,GAHJ4E,GAAgB5E,CAAQ,EAENA,EAAS,SAAS,MAAM,EAKlC,MAAO,OAGf1B,EAAOyB,GAAaC,CAAQ,EAAGA,CAAQ,EAEvC,MAAM2I,EADW3I,EAAS,MAAM,GAAG,EAAE,MAAM,EAAE,EAAE,CAAC,EACzB,MAAM,GAAG,EAC1B4I,EAAUD,EAAM,MAAM,EAAE,EAAE,CAAC,EAC3BE,EAAUF,EAAM,MAAM,EAAE,EAAE,CAAC,EACjC,GAAIE,IAAY,OACZ,MAAO,QAGX,GADAvK,EAAOsK,IAAY,OAAQ5I,CAAQ,EAC/B6I,IAAY,SACZ,MAAO,eAEX,GAAIA,IAAY,SACZ,MAAO,eAEX,GAAIA,IAAY,QACZ,MAAO,cAEXvK,EAAO,GAAO0B,CAAQ,CAC1B,CC1CA,SAAS8I,GAAkB9I,EAAU,CACjC,MAAM+I,EAAcjB,GAAWjC,EAAS,SAAWiC,GAC9CjC,EAAS,oBACLmD,EAAmBnD,EAAS,QAAQ,GAAKoD,GAAsBnB,EAAQjC,EAAS,QAAQ,GAC3FqD,EAAWR,GAAkB1I,CAAQ,EAcrC6F,EAAW,CACb,SAAA7F,EACA,SAAAkJ,EACA,MAhBWC,GAAQ,CAEnB,GADA7K,EAAO4K,IAAa,aAAa,EAC7BC,IAAQ,cACR,OAAOD,IAAa,gBAAkBA,IAAa,OAEvD,GAAIC,IAAQ,cACR,OAAOD,IAAa,eAExB,GAAIC,IAAQ,oBACR,OAAOD,IAAa,QAExB5K,EAAO,EAAK,CACpB,EAKQ,WAAAyK,EACA,kBAAmBK,EAAkBpJ,CAAQ,EAC7C,mBAAoBkJ,IAAa,QAAUE,EAAkBpJ,CAAQ,GAAKgJ,EAAmBhJ,CAAQ,EACrG,gBAAiBqI,EAAcrI,CAAe,EAC9C,OAAQ4H,GAAmB5H,CAAQ,CAC3C,EACI,OAAO6F,CACX,CACA,SAASuD,EAAkBpJ,EAAU,CAEjC,OADA+H,EAAmB/H,CAAQ,EACvBqI,EAAcrI,CAAe,EACtB,GAEJA,EAAS,SAAS,WAAW,CACxC,CACA,SAASgJ,EAAmBhJ,EAAU,CAClC,OAAA+H,EAAmB/H,CAAQ,EACpBA,EAAS,SAAS,YAAY,CACzC,CACA,SAASiJ,GAAsBnB,EAAQuB,EAAqB,CACxDtB,EAAmBD,CAAM,EACzBC,EAAmBsB,CAAmB,EACtC/K,EAAO,CAACwJ,EAAO,SAAS,GAAG,CAAC,EAC5BxJ,EAAO,CAAC+K,EAAoB,SAAS,GAAG,CAAC,EACzC/K,EAAO8K,EAAkBC,CAAmB,CAAC,EAC7C,MAAMC,EAAiBjJ,EAAMgJ,EAAoB,MAAM,GAAG,EAAG,EAAG,EAAE,EAC7D,OAAQE,GAAoBA,IAAoB,UAAU,EAC1D,KAAK,GAAG,EACb,OAAOzB,EAAO,WAAWwB,CAAc,CAC3C,CCvDA,SAASE,GAAkBtB,EAAa,CACpC5J,EAAO,MAAM,QAAQ4J,CAAW,GAAKA,IAAgB,IAAI,EAGzD5J,EAAO4J,IAAgB,IAAI,EAC3BA,EAAY,QAAS9B,GAAe,CAChC9H,EAAO9B,EAAS4J,CAAU,CAAC,EAC3B9H,EAAO4F,EAAQkC,EAAY,SAAU,QAAQ,CAAC,EAC9C9H,EAAO4F,EAAQkC,EAAY,kBAAmB,QAAQ,GAAKlC,EAAQkC,EAAY,kBAAmB,MAAM,CAAC,EACzG9H,EAAO4F,EAAQkC,EAAY,2BAA4B,QAAQ,GAC3DlC,EAAQkC,EAAY,2BAA4B,MAAM,CAAC,EAC3D9H,EAAO4F,EAAQkC,EAAY,gBAAiB,UAAU,CAAC,EACvD9H,EAAO4F,EAAQkC,EAAY,cAAe,SAAS,CAAC,EACpD9H,EAAO4F,EAAQkC,EAAY,iBAAkB,QAAQ,CAAC,EACtDqD,GAAqBrD,EAAW,eAAgB,EAAK,CAC7D,CAAK,CACL,CACA,SAASsD,GAAuBC,EAAkB,CAC9CF,GAAqBE,EAAkB,EAAI,CAC/C,CACA,SAASF,GAAqBG,EAAgBC,EAAgB,CAC1DvL,EAAO9B,EAASoN,CAAc,CAAC,EAC/B,OAAO,QAAQA,CAAc,EAAE,QAAQ,CAAC,CAAChD,EAAYI,CAAa,IAAM,CAEpE,GADA1I,EAAO9B,EAASwK,CAAa,GAAKA,IAAkB,IAAI,EACpDA,IAAkB,KAAM,CACxB1I,EAAOuL,CAAc,EACrB,OAEJvL,EAAO4F,EAAQ8C,EAAe,kBAAmB,QAAQ,CAAC,EAC1D1I,EAAO4F,EAAQ8C,EAAe,qBAAsB,QAAQ,GAAK9C,EAAQ8C,EAAe,qBAAsB,MAAM,CAAC,EACrH1I,EAAO4F,EAAQ8C,EAAe,YAAa,QAAQ,CAAC,EACpD1I,EAAO4F,EAAQ8C,EAAe,eAAgB,QAAQ,GAAK9C,EAAQ8C,EAAe,eAAgB,MAAM,CAAC,EACzG1I,EAAO4F,EAAQ8C,EAAe,iBAAkB,QAAQ,GAAK9C,EAAQ8C,EAAe,iBAAkB,MAAM,CAAC,EAC7G1I,EAAO4F,EAAQ8C,EAAe,wBAAyB,QAAQ,GAC3D9C,EAAQ8C,EAAe,wBAAyB,WAAW,CAAC,GAC5D6C,GAEAjD,IAAe,UACftI,EAAO4F,EAAQ8C,EAAe,aAAa,GAAK9C,EAAQ8C,EAAe,uBAAuB,CAAC,CAE3G,CAAK,CACL,CC3CA,MAAM8C,GAAQ,CACP,CACC,GAAK/H,GAAQA,IAAQ,OACrB,MAAQ5F,GAAQA,IAAQ,aACxB,UAAW,IAAM,aACjB,YAAa,IAAA,EACrB,EACO,CACC,GAAK4F,GAAQA,IAAQ,IACrB,MAAQ5F,GAAQA,IAAQ,YACxB,UAAW,IAAM,YACjB,YAAa,IAAM,GAC3B,EACO,CACC,GAAK4F,GAAQA,IAAQ,KACrB,MAAQ5F,GAAQA,IAAQ,aACxB,UAAW,IAAM,aACjB,YAAa,IAAM,IAC3B,EACO,CACC,GAAK4F,GAAQ,OAAOA,GAAQ,UAAY,MAAMA,CAAG,EACjD,MAAQ5F,GAAQA,IAAQ,OACxB,UAAW,IAAM,OACjB,YAAa,IAAM,GAC3B,EACO,CACC,GAAK4F,GAAQA,aAAe,KAC5B,MAAQ5F,GAAQA,EAAI,WAAW,QAAQ,EACvC,UAAY4F,GAAQ,SAAWA,EAAI,YAAa,EAChD,YAAc5F,GAAQ,IAAI,KAAKA,EAAI,MAAM,CAAe,CAAC,CACjE,EACO,CACC,GAAK4F,GAAQ,OAAOA,GAAQ,SAC5B,MAAQ5F,GAAQA,EAAI,WAAW,UAAU,EACzC,UAAY4F,GAAQ,WAAaA,EAAI,SAAU,EAC/C,YAAc5F,GAAQ,CAClB,GAAI,OAAO,OAAW,IAClB,MAAM,IAAI,MAAM,mFAAmF,EAEvG,OAAO,OAAOA,EAAI,MAAM,CAAiB,CAAC,CAC7C,CACT,EACO,CACC,GAAK4F,GAAQA,aAAe,OAC5B,MAAQ5F,GAAQA,EAAI,WAAW,UAAU,EACzC,UAAY4F,GAAQ,WAAaA,EAAI,SAAU,EAC/C,YAAc5F,GAAQ,CAClBA,EAAMA,EAAI,MAAM,CAAiB,EAEjC,MAAMwL,EAAOxL,EAAI,MAAM,eAAe,EAChC4N,EAAUpC,EAAK,CAAC,EAChBqC,EAAQrC,EAAK,CAAC,EACpB,OAAO,IAAI,OAAOoC,EAASC,CAAK,CACnC,CACT,EACO,CACC,GAAKjI,GAAQA,aAAe,IAC5B,MAAQ5F,GAAQA,EAAI,WAAW,OAAO,EACtC,UAAW,CAAC4F,EAAKkI,IAAe,QAAUA,EAAW,MAAM,KAAKlI,EAAI,QAAO,CAAE,CAAC,EAC9E,YAAa,CAAC5F,EAAK+N,IAAiB,IAAI,IAAIA,EAAa/N,EAAI,MAAM,CAAc,CAAC,CAAC,CAC3F,EACO,CACC,GAAK4F,GAAQA,aAAe,IAC5B,MAAQ5F,GAAQA,EAAI,WAAW,OAAO,EACtC,UAAW,CAAC4F,EAAKkI,IAAe,QAAUA,EAAW,MAAM,KAAKlI,EAAI,OAAM,CAAE,CAAC,EAC7E,YAAa,CAAC5F,EAAK+N,IAAiB,IAAI,IAAIA,EAAa/N,EAAI,MAAM,CAAc,CAAC,CAAC,CAC3F,EAEO,CACC,GAAK4F,GAAQ,OAAOA,GAAQ,UAAYA,EAAI,WAAW,GAAG,EAC1D,MAAQ5F,GAAQA,EAAI,WAAW,GAAG,EAClC,UAAY4F,GAAQ,IAAMA,EAC1B,YAAc5F,GAAQA,EAAI,MAAM,CAAC,CACzC,CACA,ECzEA,SAASgO,EAAMhO,EAAK,CAEhB,MAAMM,EAAQ,KAAK,MAAMN,CAAG,EAC5B,OAAOiO,GAAS3N,CAAK,CACzB,CACA,SAAS2N,GAAS3N,EAAO,CACrB,OAAI,OAAOA,GAAU,SACV4N,GAAQ5N,CAAK,GAEpB,OAAOA,GAAU,UAAYA,IAAU,MACvC,OAAO,QAAQA,CAAK,EAAE,QAAQ,CAAC,CAACJ,EAAK0F,CAAG,IAAM,CAE1CtF,EAAMJ,CAAG,EAAI+N,GAASrI,CAAG,CACrC,CAAS,EAEEtF,EACX,CACA,SAAS4N,GAAQ5N,EAAO,CACpB,SAAW,CAAE,MAAA6N,EAAO,YAAAC,CAAW,IAAMT,GACjC,GAAIQ,EAAM7N,CAAK,EACX,OAAO8N,EAAY9N,EAAO0N,CAAK,EAGvC,OAAO1N,CACX,CCtBA,SAAS+N,GAAiBtC,EAAa,CACnCA,EAAY,QAAS9B,GAAe,CAChC,OAAO,QAAQA,EAAW,cAAc,EAAE,QAAQ,CAAC,CAACQ,EAAYI,CAAa,IAAM,CAC/EyD,GAAiBzD,CAAa,EAC1BJ,IAAe,SACf8D,GAAuB1D,CAAa,CAEpD,CAAS,CACT,CAAK,CACL,CACA,SAASyD,GAAiBzD,EAAe,CACrC,KAAM,CAAE,sBAAA2D,CAAuB,EAAG3D,EAC9B2D,IAA0B,SAC1B3D,EAAc,YAAcmD,EAAMQ,CAAqB,EAE/D,CACA,SAASD,GAAuB1D,EAAe,CAC3C1I,EAAO4F,EAAQ8C,EAAe,aAAa,CAAC,EAC5C,KAAM,CAAE,YAAAH,CAAa,EAAGG,EAClB4D,EAAkB,OAAO/D,EAC/B3J,EAAY0N,IAAoB,UAAYpH,EAAWqD,CAAW,EAAG,GAAGG,EAAc,wCAAwC4D,wFAAsG,CAQxO,CCxBA,SAASC,GAAiBC,EAAkB,CACxCxM,EAAO4F,EAAQ4G,EAAkB,iBAAiB,CAAC,EACnDxM,EAAOwM,EAAiB,kBAAoB,GAAO,gEAAgE,EACnHxM,EAAOwM,EAAiB,kBAAoB,GAAM,yBAAyBA,EAAiB,mBAAmB,EAC/GxM,EAAO4F,EAAQ4G,EAAkB,gBAAiB,QAAQ,CAAC,EAC3DxM,EAAO4F,EAAQ4G,EAAkB,iBAAkB,QAAQ,CAAC,EAC5DxM,EAAO4F,EAAQ4G,EAAkB,2BAA4B,QAAQ,CAAC,EACtExM,EAAO4F,EAAQ4G,EAAkB,4BAA6B,QAAQ,CAAC,EACvExM,EAAO4F,EAAQ4G,EAAiB,cAAe,OAAO,CAAC,EACvDxM,EAAO4F,EAAQ4G,EAAiB,cAAe,cAAc,GAAK5G,EAAQ4G,EAAiB,cAAe,cAAc,CAAC,EACzHxM,EAAO4F,EAAQ4G,EAAkB,gBAAiB,UAAU,CAAC,EAC7DxM,EAAO4F,EAAQ4G,EAAkB,aAAa,CAAC,EAC/CxM,EAAO4F,EAAQ4G,EAAkB,kBAAkB,CAAC,EACpD,KAAM,CAAE,YAAA5C,EAAa,iBAAAyB,CAAkB,EAAGmB,EAC1CtB,GAAkBtB,CAAW,EAC7BsC,GAAiBtC,CAAW,EAC5BwB,GAAuBC,CAAgB,EACvC,MAAMoB,EAAe,CAAA,EACrBC,EAAgBF,EAAiB,aAAa,EAAE,QAAQ,CAAC,CAAE,SAAA9K,EAAU,SAAA6F,EAAU,UAAAoF,KAAgB,CAC3F,IAAIzM,EACJqH,EAAWkF,EAAa/K,CAAQ,GAAKxB,EAAKuM,EAAa/K,CAAQ,KAAO,MAAQxB,IAAO,OAASA,EAAKqH,EACnG,MAAMqF,EAAaD,EACnBE,EAAiBD,CAAU,EAC3BrF,EAAS,SAAW,SAAY,CACtB,gBAAiBA,IACnBA,EAAS,YAAc,MAAMqF,IAC7BtF,GAAmBC,CAAQ,EAE3C,CACA,CAAK,EACDmF,EAAgBF,EAAiB,wBAAwB,EAAE,QAAQ,CAAC,CAAE,SAAA9K,EAAU,SAAA6F,EAAU,UAAAoF,KAAgB,CACtG,IAAIzM,EACJqH,EAAWkF,EAAa/K,CAAQ,GAAKxB,EAAKuM,EAAa/K,CAAQ,KAAO,MAAQxB,IAAO,OAASA,EAAKqH,EACnG,MAAMqF,EAAaD,EACnBE,EAAiBD,CAAU,EAC3BrF,EAAS,gBAAkB,SAAY,CACnC,GAAI,EAAE,gBAAiBA,GAAW,CAC9B,MAAMuF,EAAgB,MAAMF,IAE5BhO,EAAY,gBAAiBkO,EAAe,2FAA2F,EACvI9M,EAAO4F,EAAQkH,EAAe,cAAe,UAAU,EAAGvF,EAAS,QAAQ,EAC3EA,EAAS,YAAcuF,EAAc,YAErD,CACA,CAAK,EAEDJ,EAAgBF,EAAiB,cAAc,EAAE,QAAQ,CAAC,CAAE,SAAA9K,EAAU,SAAA6F,EAAU,UAAAoF,KAAgB,CAC5F,IAAIzM,EACJqH,EAAWkF,EAAa/K,CAAQ,GAAKxB,EAAKuM,EAAa/K,CAAQ,KAAO,MAAQxB,IAAO,OAASA,EAAKqH,EACnG,MAAMuF,EAAgBH,EACtB3M,EAAO9B,EAAS4O,CAAa,CAAC,EAC9BvF,EAAS,YAAcuF,CAC/B,CAAK,EACDJ,EAAgBF,EAAiB,yBAAyB,EAAE,QAAQ,CAAC,CAAE,SAAA9K,EAAU,SAAA6F,EAAU,UAAAoF,KAAgB,CACvG,IAAIzM,EACJqH,EAAWkF,EAAa/K,CAAQ,GAAKxB,EAAKuM,EAAa/K,CAAQ,KAAO,MAAQxB,IAAO,OAASA,EAAKqH,EACnG,MAAMuF,EAAgBH,EACtB3M,EAAO9B,EAAS4O,CAAa,CAAC,EAC9B9M,EAAO4F,EAAQkH,EAAe,cAAe,UAAU,EAAGvF,EAAS,QAAQ,EAC3EA,EAAS,YAAcuF,EAAc,WAC7C,CAAK,EACDN,EAAiB,cAAc,QAAS9K,GAAa,CACjD,IAAIxB,EACJuM,EAAa/K,CAAQ,GAAKxB,EAAKuM,EAAa/K,CAAQ,KAAO,MAAQxB,IAAO,OAASA,EAAKsK,GAAkB9I,CAAQ,CAC1H,CAAK,EACD,MAAMmG,EAAY,OAAO,OAAO4E,CAAY,EAC5C,OAAA5E,EAAU,QAAQ,CAAC,CAAE,SAAAnG,KAAe,CAChC1B,EAAO,CAAC0B,EAAS,SAAS,IAAI,CAAC,CACvC,CAAK,EACM,CAAE,UAAAmG,EAAW,YAAA+B,EAAa,iBAAAyB,EACrC,CACA,SAASqB,EAAgBK,EAAY,CACjC,MAAMC,EAAM,CAAA,EACZ,cAAO,QAAQD,CAAU,EAAE,QAAQ,CAAC,CAACnC,EAAUqC,CAAS,IAAM,CAE1DjN,EAAOmK,GAAU,SAASS,CAAQ,CAAC,EACnC5K,EAAO9B,EAAS+O,CAAS,CAAC,EAC1B,OAAO,QAAQA,CAAS,EAAE,QAAQ,CAAC,CAACvL,EAAUiL,CAAS,IAAM,CACzD,MAAMpF,EAAWiD,GAAkB9I,CAAQ,EAC3C1B,EAAOuH,EAAS,WAAaqD,CAAQ,EACrCoC,EAAI,KAAK,CAAE,SAAAtL,EAAU,SAAA6F,EAAU,UAAAoF,CAAW,CAAA,CACtD,CAAS,CACT,CAAK,EACMK,CACX,CACA,SAASH,EAAiBF,EAAW,CACjC3M,EAAOkF,EAAWyH,CAAS,CAAC,CAChC,CCzFA,MAAMrO,EAAeR,EAAgB,kBAAmB,CAAA,CAAE,EAC1D,SAASoP,GAAaV,EAAkB,CACpC,KAAM,CAAE,UAAA3E,EAAW,YAAA+B,EAAa,iBAAAyB,CAAgB,EAAKkB,GAAiBC,CAAgB,EACtFlO,EAAa,aAAeuJ,EAC5BvJ,EAAa,YAAcsL,EAC3BtL,EAAa,iBAAmB+M,CACpC,CAMA,eAAe8B,GAAgBC,EAAcrO,EAAc,CACnDqO,GACApN,EAAO,CAAC1B,EAAa,eAAe,EACpC0B,EAAOjB,IAAiB,MAAS,IAGjCiB,EAAO1B,EAAa,eAAe,EACnC0B,EAAO,OAAOjB,GAAiB,SAAS,GACpC,CAACT,EAAa,cAEd,CAACS,IACD,MAAMT,EAAa,mBAG3B,KAAM,CAAE,aAAAqL,EAAc,YAAAC,EAAa,iBAAAyB,CAAgB,EAAK/M,EACxD0B,EAAO2J,GAAgBC,GAAeyB,CAAgB,EACtD,MAAMgC,EAAaC,GAAc3D,EAAcC,CAAW,EAC1D,MAAO,CAAE,aAAAD,EAAc,WAAA0D,EAAY,YAAAzD,EAAa,iBAAAyB,CAAgB,CACpE,CACA,SAASiC,GAAcC,EAAc3D,EAAa,CAC9C,MAAM4D,EAAUD,EAAa,OAAO,CAAC,CAAE,kBAAAE,CAAmB,IAAK,CAACA,CAAiB,EAAE,IAAI,CAAC,CAAE,OAAAjE,CAAQ,IAAKA,CAAM,EACvG6D,EAAajP,EAAOoP,CAAO,EAC3BE,EAAc9D,EAAY,IAAKxD,GAAMA,EAAE,MAAM,EACnD,MAAO,CAAC,GAAGiH,EAAY,GAAGK,CAAW,CACzC,CCrCA,SAASC,GAAuBhE,EAAcH,EAAQ,CAClD,OAAOoE,GAAUjE,EAAcH,EAAQ,EAAI,CAC/C,CACA,SAASqE,GAAuBlE,EAAcH,EAAQ,CAClD,OAAOoE,GAAUjE,EAAcH,EAAQ,EAAK,CAChD,CACA,SAASoE,GAAUjE,EAAcH,EAAQsE,EAAa,CAClD,MAAMjD,EAAMiD,EAAc,cAAgB,cACpCC,EAAoBpE,EACrB,OAAQvD,GAAMA,EAAE,WAAWoD,CAAM,GAAKpD,EAAE,WAAa,aAAa,EAClE,KAAK4H,GAAmBF,EAAatE,CAAM,CAAC,EAE3CyE,EAAiBC,GAAQ,CAC3B,MAAMC,EAAQJ,EAAkB,OAAQ3H,GAAMA,EAAE,SAAWoD,GAAUpD,EAAE,MAAM8H,EAAM,oBAAsBrD,CAAG,CAAC,EAC7GjM,EAAYuP,EAAM,QAAU,EAAG,iDAAiDA,EAAM,IAAK/H,GAAMA,EAAE,QAAQ,EAAE,KAAK,GAAG,GAAG,EACxH,MAAMgI,EAAaD,EAAM,CAAC,EAC1B,OAAAnO,EAAOoO,IAAe,QAAa,CAACA,EAAW,iBAAiB,EACzDA,CACf,EACUC,EAAgBJ,EAAc,EAAK,EACnCK,EAAgBL,EAAc,EAAI,EAGlCM,EAAmBL,GAAQH,EAAkB,OAAQ3H,GAAMA,EAAE,oBAAsBA,EAAE,MAAM8H,EAAM,oBAAsBrD,CAAG,CAAC,EAAE,CAAC,EAC9H2D,EAAkBD,EAAgB,EAAK,EACvCE,EAAkBF,EAAgB,EAAI,EAGtCG,EAA0BX,EAAkB,OAAQ3H,GAAMA,EAAE,mBAAqB,CAACA,EAAE,qBAAuBA,EAAE,MAAMyE,CAAG,GAAKzE,EAAE,MAAM,mBAAmB,EAAE,EAG9J,MADkB,CAACiI,EAAeC,EAAe,GAAGI,EAAyBF,EAAiBC,CAAe,EAAE,OAAOtI,EAAY,CAEtI,CACA,SAAS6H,GAAmBF,EAAatE,EAAQ,CAC7C,MAAMqB,EAAMiD,EAAc,cAAgB,cACpCa,EAAU,GACVC,EAAU,EACVC,EAAU,EAChB,MAAO,CAACC,EAAIC,IAAO,CAEf,GAAI,CAACD,EAAG,mBAAqBC,EAAG,kBAC5B,OAAOJ,EAEX,GAAI,CAACI,EAAG,mBAAqBD,EAAG,kBAC5B,OAAOF,EAGX,CACI,MAAMI,EAAgBF,EAAG,mBACnBG,EAAgBF,EAAG,mBACzB,GAAI,CAACC,GAAiBC,EAClB,OAAON,EAEX,GAAI,CAACM,GAAiBD,EAClB,OAAOJ,EAEX5O,EAAOgP,IAAkBC,CAAa,CACzC,CAED,CACI,MAAMC,EAAcC,EAAgB3F,EAAQsF,EAAG,QAAQ,EACjDM,EAAcD,EAAgB3F,EAAQuF,EAAG,QAAQ,EACvD,GAAIG,EAAcE,EACd,OAAOT,EAEX,GAAIS,EAAcF,EACd,OAAON,EAEX5O,EAAOkP,IAAgBE,CAAW,CACrC,CAED,CACI,GAAIN,EAAG,MAAMjE,CAAG,GAAKkE,EAAG,MAAM,mBAAmB,EAC7C,OAAOJ,EAEX,GAAII,EAAG,MAAMlE,CAAG,GAAKiE,EAAG,MAAM,mBAAmB,EAC7C,OAAOF,CAEd,CACD,OAAOC,CACf,CACA,CACA,SAASM,EAAgBE,EAAOC,EAAO,CACnC7F,EAAmB4F,CAAK,EACxB5F,EAAmB6F,CAAK,EAExB,IAAIC,EAAM,EACV,KAAOA,EAAMF,EAAM,QAAUE,EAAMD,EAAM,QACjCD,EAAME,CAAG,IAAMD,EAAMC,CAAG,EADiBA,IAC7C,CAGJ,MAAMC,EAAqBH,EAAM,MAAME,CAAG,EACpCE,EAAqBH,EAAM,MAAMC,CAAG,EACpCG,EAAYF,EAAmB,MAAM,GAAG,EAAE,OAC1CG,EAAYF,EAAmB,MAAM,GAAG,EAAE,OAEhD,OADiBC,EAAYC,CAEjC,CCrGA,SAASC,GAAaC,EAAc,CAChC,MAAMC,EAAUD,EAAe,IAC/B,GAAIC,EAAU,IAAK,CACf,MAAM,EAAIC,GAAMD,CAAO,EACvB,MAAO,GAAG,WAAWE,GAAO,CAAC,IAEjC,CACI,MAAMC,EAAUH,EAAU,GACpBI,EAAIH,GAAME,CAAO,EACvB,MAAO,GAAGC,WAAWF,GAAOE,CAAC,GAChC,CACL,CACA,SAASH,GAAMG,EAAG,CACd,IAAIC,EAAUD,EAAE,QAAQ,CAAC,EACzB,OAAIC,EAAQ,SAAS,IAAI,IACrBA,EAAUA,EAAQ,MAAM,EAAG,EAAE,GAC1BA,CACX,CACA,SAASH,GAAOE,EAAG,CACf,OAAOA,IAAM,IAAM,GAAK,GAC5B,CCfA,MAAM5R,GAAeR,EAAgB,uBAAwB,CACzD,eAAgB,IAAI,GACxB,CAAC,EAOD,SAASsS,GAAYC,EAAQC,EAAUC,EAAc,CACjD,KAAM,CAAE,WAAAC,EAAY,YAAAC,CAAa,EAAGC,GAAYJ,CAAQ,EACxD,IAAIK,EACAC,EACJ,MAAMC,EAAU,IAAI,QAAQ,CAACC,EAAUC,IAAY,CAC/CJ,EAAW3D,GAAQ,CACfgE,IACAF,EAAS9D,CAAG,CACxB,EACQ4D,EAAUxT,GAAQ,CACd4T,IACAD,EAAQ3T,CAAG,CACvB,CACA,CAAK,EACK4T,EAAgB,IAAM,CACxB,aAAaC,CAAE,EACf,aAAaC,CAAE,CACvB,EACUD,EAAK,WAAW,IAAM,CACxBpS,EAAc,GAAO,OAAOyR,uBAA8BC,yBAAoCX,GAAaa,CAAW,IAAK,CAAE,SAAU,EAAO,CAAA,CACjJ,EAAEA,CAAW,EACRS,EAAK,WAAW,IAAM,CACxB,MAAM9T,EAAMsD,GAAgB,qBAAqB4P,uBAA8BC,yBAAoCX,GAAaY,CAAU,GAAG,EAC7II,EAAOxT,CAAG,CACb,EAAEoT,CAAU,EACb,OAAC,SAAY,CACT,GAAI,CACA,MAAMxD,EAAM,MAAMqD,IAClBM,EAAQ3D,CAAG,CACd,OACM5P,EAAP,CACQc,EAASd,CAAG,GACZkB,GAAa,eAAe,IAAIlB,EAAK,CAAE,SAAAkT,EAAU,aAAAC,CAAY,CAAE,EAEnEK,EAAOxT,CAAG,CACb,CACT,KACWyT,CACX,CACA,SAASH,GAAYJ,EAAU,CAC3B,OAAIA,IAAa,gBACN,CACH,WAAY,EAAI,IAChB,YAAa,EAAI,GAC7B,EAEQA,IAAa,oBACN,CACH,WAAY,GAAK,GAAK,IACtB,YAAa,GAAK,GAC9B,EAEW,CACH,WAAY,GAAK,IACjB,YAAa,EAAI,GACzB,CACA,CCpEA,SAASa,GAAcC,EAAS,CAC5B,MAAM1O,EAAM,OAAO,SAAS,KACtB,CAAE,eAAAY,EAAgB,aAAAL,EAAc,SAAAc,CAAU,EAAGlB,GAASH,EAAK,GAAG,EACpE,IAAI2O,EACJ,OAAID,GAAY,MAAsCA,EAAQ,YAC1DC,EAAa,GAAGtN,IAAWT,GAAkB,KAG7C+N,EAAa,GAAGtN,IAAWT,GAAkB,KAAKL,GAAgB,KAEtEjD,EAAOqR,EAAW,WAAW,GAAG,CAAC,EAC1BA,CACX,CCXArR,EAAOe,EAAS,CAAE,ECDlB,SAASuQ,IAAiC,CACtC,MAAMC,EAAK,8BACLC,EAAO,SAAS,eAAeD,CAAE,EACvC3S,EAAY4S,EAAM,gBAAgBD,0MAA2MA,mCAAoC,EACjR,MAAME,EAAkBD,EAAK,YAC7BxR,EAAOyR,CAAe,EACtB,MAAMC,EAA8B7F,EAAM4F,CAAe,EACzD,OAAAzR,EAAO4F,EAAQ8L,EAA6B,UAAW,QAAQ,CAAC,EAChE3M,EAAa2M,EAA6B,CACtC,0BAA2B,EACnC,CAAK,EACMA,CACX,CCZA,SAASC,EAAQC,EAAatB,EAAU,CACpC,GAAI,EAAEA,KAAYsB,EAAY,SAC1B,OAAO,KAEX,MAAMvB,EAASuB,EAAY,QAAQtB,CAAQ,EACrCuB,EAAOD,EAAY,WAAWtB,CAAQ,EAAE,CAAC,EAC/CtQ,EAAO6R,EAAK,cAAgBxB,CAAM,EAClC,MAAME,EAAesB,EAAK,aAC1B,OAAA7R,EAAOuQ,CAAY,EACnBvQ,EAAO,CAACsQ,EAAS,SAAS,GAAG,CAAC,EAC9B1R,EAAYsG,EAAWmL,CAAM,EAAG,QAAQC,kBAAyBC,wBAAmC,EAC7F,CAAE,OAAAF,EAAQ,aAAAE,EACrB,CACA,SAASuB,GAAWF,EAAatB,EAAU,CACvCqB,EAAQC,EAAatB,CAAQ,CACjC,CCfA,SAASyB,GAAgBH,EAAa,CAClC,MAAMI,EAAU,OAAO,QAAQJ,CAAW,EAC1C,UAAW7T,KAAO6T,EACd,OAAOA,EAAY7T,CAAG,EAE1BiU,EACK,KAAK,CAAC,CAACC,CAAI,EAAG,CAACC,CAAI,IAAMlM,GAAciM,EAAMC,CAAI,CAAC,EAClD,QAAQ,CAAC,CAACnU,EAAK0F,CAAG,IAAM,CACzBmO,EAAY7T,CAAG,EAAI0F,CAC3B,CAAK,CACL,CCVA,SAAS0O,GAAoBP,EAAa,CACtCQ,GAAYR,CAAW,EACvBS,GAAST,CAAW,CACxB,CACA,SAASQ,GAAYR,EAAa,CAC1B1H,GAAY0H,EAAY,QAASA,EAAY,YAAY,GACzD5R,EAAO4F,EAAQgM,EAAa,QAAS,SAAS,CAAC,CAEvD,CACA,SAASS,GAAST,EAAa,CAC3B,GAAIA,EAAY,QAAU,QAAaA,EAAY,QAAU,KACzD,OACJ,MAAMU,EAAYV,EAAY,WAAa,GAC3C,GAAI,CAAC1T,EAASoU,CAAS,EAAG,CACtBzT,EAAc,GAAO,4CAA6C,CAAE,eAAgB,GAAM,SAAU,EAAI,CAAE,EAC1G,OAEJyT,EAAU,MAAQA,EAAU,OAASV,EAAY,MACjDA,EAAY,UAAYU,CAC5B,CCrBO,MAAMC,GAAkB,mBCEzBjU,EAAeR,EAAgB,gCAAiC,CAAA,CAAE,EAKxE,SAAS0U,GAA2BZ,EAAa,CAC7C,OAAA5R,EAAO,CAAC,GAAM,EAAK,EAAE,SAAS4R,EAAY,yBAAyB,CAAC,EACpE5R,EAAO,CAAC,GAAM,EAAK,EAAE,SAAS4R,EAAY,yBAAyB,CAAC,EAC7D,IAAI,MAAMA,EAAa,CAC1B,IAAIa,EAAG5M,EAAM,CACT,MAAMpC,EAAMmO,EAAY/L,CAAI,EACtB6M,EAAW,KAAK,UAAU7M,CAAI,EACpC,OAAAjH,EAAY6E,IAAQ8O,GAAiB,eAAeG,sHAA6H,EACjLC,GAAmBf,EAAa/L,EAAM,eAAe6M,iDAAwDA,4EAAmF,EACzLjP,CACV,CACT,CAAK,CACL,CACA,SAASkP,GAAmBf,EAAa/L,EAAMlH,EAAQ,CAG/CL,EAAa,UAAYuH,IAE7B+M,GAAe/M,CAAI,EACf,EAAAA,KAAQ+L,KAERiB,GAAWhN,CAAI,GAEf+L,EAAY,2BAA6B,CAACA,EAAY,2BAMtDhT,EAAY,GAAOD,CAAM,GAMjC,CACA,MAAMmU,GAAc,CAChB,OACA,QACJ,EACA,SAASD,GAAWhN,EAAM,CAOtB,MANI,GAAAiN,GAAY,SAASjN,CAAI,GAEzB,OAAOA,GAAS,UAEhB,OAAOA,GAAS,UAEhBA,EAAK,WAAW,MAAM,EAG9B,CACA,SAAS+M,GAAe/M,EAAM,CAC1BvH,EAAa,QAAUuH,EACvB,OAAO,WAAW,IAAM,CACpBvH,EAAa,QAAU,MAC1B,EAAE,CAAC,CACR,CC/CA,SAASyU,GAA+CnB,EAAaoB,EAAiB,CAClF,GAAIA,EAAiB,CACjB,MAAMC,EAAmBrB,EACzB5R,EAAO,CAAC,GAAM,EAAK,EAAE,SAASiT,EAAiB,WAAW,CAAC,EAC3DjT,EAAO,CAAC,GAAM,GAAO,IAAI,EAAE,SAASiT,EAAiB,oBAAoB,CAAC,MAEzE,CACD,MAAMA,EAAmBrB,EACzB5R,EAAOiT,EAAiB,cAAgB,EAAI,EAC5CjT,EAAOiT,EAAiB,uBAAyB,IAAI,EAEzDjT,EAAO,WAAY4R,CAAW,EAC9B5R,EAAO,kBAAmB4R,CAAW,EAErC5R,EAAO,YAAa4R,CAAW,EAC/B5R,EAAO,eAAgB4R,CAAW,EAClC5R,EAAO,gBAAiB4R,CAAW,EACnC5R,EAAO9B,EAAS0T,EAAY,WAAW,CAAC,EACxC,MAAMsB,EAAOtB,EAAY,QAAQ,KACjC7M,EAAa6M,EAAa,CAAE,KAAAsB,CAAI,CAAE,EAElCC,GAAevB,CAAW,EAE1BG,GAAgBH,CAAW,EAC3B,MAAMwB,EAAgCZ,GAA2BZ,CAAW,EAC5E,OAAAO,GAAoBP,CAAW,EACxBwB,CACX,CAGA,SAASD,GAAevB,EAAa,CACjC,OAAO,QAAQA,CAAW,EAAE,QAAQ,CAAC,CAAC7T,EAAK0F,CAAG,IAAM,CAChD,OAAOmO,EAAY7T,CAAG,EACtB6T,EAAY7T,CAAG,EAAI0F,CAC3B,CAAK,CACL,CClDA,SAAS4P,GAAezJ,EAAaJ,EAAQ,CACzC,IAAItJ,EACJ,MAAMoT,EAAS1J,EAAY,OAAQxD,GAAMA,EAAE,SAAWoD,CAAM,EAC5D,OAAAxJ,EAAOsT,EAAO,QAAU,CAAC,GACLpT,EAAKoT,EAAO,CAAC,KAAO,MAAQpT,IAAO,OAASA,EAAK,IAEzE,CCNA,eAAeqT,GAAazL,EAAY0L,EAAO,CAC3C,MAAMnL,EAAe,CAAA,EAErB,MAAI,CAACmL,GAAS,iBAAkB1L,KAGd,MAAMA,EAAW,iBACzB,QAAS2L,GAAa,CAC5B,KAAM,CAAE,WAAAnL,EAAY,aAAAoL,CAAc,EAAGD,EACrC,IAAIlL,EACJ,GAAIkL,EAAS,WAAY,CACrB,KAAM,CAAE,gBAAAE,CAAiB,EAAGF,EACxBnL,IAAe,UACf5B,GAA2BiN,EAAiBD,CAAY,EAE5D,OAAO,QAAQC,CAAe,EAAE,QAAQ,CAAC,CAAC5M,EAAYoB,CAAW,IAAM,CACnE,MAAMyL,EAAe7M,IAAe,UAC9BuB,EAAasL,EAAe7M,EAAa0M,EAAS,WAClDlL,EAAcJ,EAEpB,GADAE,EAAaC,CAAU,EAAIC,EACvBqL,EAAc,CACd,MAAMC,EAA4B/L,EAAW,eAAe2L,EAAS,UAAU,EAC/EzT,EAAO6T,CAAyB,EAChC/L,EAAW,eAAeQ,CAAU,EAAI,CACpC,YAAAC,EACA,eAAgBxB,EAChB,aAAA2M,EACA,oBAAqBA,EACrB,gBAAiB,GAAGA,gBAA2B3M,MAC/C,UAAW8M,EAA0B,UACrC,mBAAoB,IAC5C,EAEA,CAAa,OAGDtL,EAAckL,EAAS,oBACvBpL,EAAaC,CAAU,EAAIC,CAEvC,CAAK,EACD,OAAO,QAAQT,EAAW,cAAc,EAAE,IAAI,CAAC,CAACQ,EAAYI,CAAa,IAAM,CACvEA,EAAc,eAElBL,EAAaC,CAAU,EAAII,EAAc,YACjD,CAAK,EACD3D,EAAa+C,EAAY,CAAE,aAAAO,CAAY,CAAE,GAClCP,CACX,CC5CA,MAAMgM,GAAQ,wBACd,eAAeC,GAAwBpK,EAAcC,EAAaJ,EAAQ,CACtE,MAAMwK,EAAsBrG,GAAuBhE,EAAcH,CAAM,EACjE1B,EAAauL,GAAezJ,EAAaJ,CAAM,EACrD,IAAIyK,EACJ,GAAI,CAMAA,GAJe,MAAM,QAAQ,IAAI,CAC7BnM,GAAcyL,GAAazL,EAAY,EAAmB,EAC1D,GAAGkM,EAAoB,IAAK5N,GAAM,CAAE,IAAIlG,EAAI,OAAQA,EAAKkG,EAAE,YAAc,MAAQlG,IAAO,OAAS,OAASA,EAAG,KAAKkG,CAAC,EAAI,CACnI,CAAS,GACyB,CAAC,CAC9B,OACMhJ,EAAP,CAEI,MAAI8W,GAAa9W,CAAG,GAChB,OAAO,OAAOA,EAAK,CAAE,CAAC0W,EAAK,EAAG,EAAI,CAAE,EAElC1W,CACT,CACD,KAAM,CAAE,OAAA4K,EAAQ,cAAAD,EAAe,QAAAgB,EAAS,WAAAd,EAAY,YAAAY,CAAW,EAAKjB,GAAWoM,EAAqBC,CAAgB,EASpH,MAR4B,CACxB,OAAAjM,EACA,cAAAD,EACA,QAAAgB,EACA,WAAAd,EACA,YAAAY,EACA,iBAAkBmL,CAC1B,CAEA,CACA,SAASG,GAA4B/W,EAAK,CACtC,OAAKA,EAGEA,EAAI0W,EAAK,IAAM,GAFX,EAGf,CAEA,SAASI,GAAa9W,EAAK,CACvB,OAAMA,aAAe,MAIY,CAE7B,8CAEA,4CAEA,mCAEA,mCAEA,0BACR,EACoC,KAAMuC,GAAMvC,EAAI,QAAQ,YAAW,EAAG,SAASuC,EAAE,YAAW,CAAE,CAAC,EAfpF,EAgBf,CCzDA,eAAeyU,GAA0BxC,EAAaoB,EAAiB,CACnE,MAAMI,EAAgCL,GAA+CnB,EAAaoB,CAAe,EACjH,IAAIqB,EAAO,KACP/D,EAGA+D,EADmB1C,EAAQC,EAAa,QAAQ,EAEhDtB,EAAW,SAEf,CACI,MAAMgE,EAAa3C,EAAQC,EAAa,gBAAgB,EACpD0C,IACAD,EAAOC,EACPhE,EAAW,iBAElB,CACD,GAAI,CAAC+D,EAAM,CACP,MAAME,EAAaC,GAAc5C,CAAW,EAC5C,GAAIA,EAAY,aAAa,OAAS,EAElChT,EAAY,GAAO,6CAA6C2V,qEAA8E,MAE7I,CAGD,MAAME,EAAyB7C,EAAY,iBAAiB,OAAQxL,GAAMA,EAAE,WAAa,cAAc,EACvG,IAAIzH,EACA8V,EAAuB,SAAW,EAClC9V,EAAS,2CAA6C4V,EAGtD5V,EACI,+DACI8V,EAAuB,IAAKrO,GAAMA,EAAE,QAAQ,EAAE,KAAK,GAAG,EAElExH,EAAY,GAAOD,CAAM,GAGjCqB,EAAOqU,CAAI,EACX,MAAMC,EAAaD,EAAK,OACxBrU,EAAOsQ,CAAQ,EAEf,MAAMoE,EAAa,MAAMtE,GAAY,IAAMkE,EAAWlB,CAA6B,EAAG9C,EAAU+D,EAAK,YAAY,EACjHzV,EAAY8V,IAAe,OAAW,OAAOpE,uBAA8B+D,EAAK,8CAA8C,CAClI,CACA,SAASG,GAAc5C,EAAa,CAChC,IAAI1R,EACJ,IAAIwC,EAEJ,GAAI,CACAA,GAEKxC,EAAK0R,EAAY,eAAiB,MAAQ1R,IAAO,OAASA,EAE3D0R,EAAY,WACnB,MACD,CAAS,CACT,OAAAlP,EAAMA,GAAuC,OAAO,SAAS,KACtDA,CACX","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51]}