{"version":3,"file":"chunk-226da2c5.js","sources":["../../../../pages/search/ControlButton/ControlButton.tsx","../../../../pages/search/KakaoMap.tsx","../../../../components/button/BackCurrentLocation.tsx","../../../../pages/search/ResultInRadius/CountMessage.tsx","../../../../pages/search/ResultInRadius/ResultInRadius.tsx","../../../../pages/search/MapView.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../../../renderer/store/hooks';\r\nimport {\r\n    CATEGORY_FILTER_MODAL,\r\n    CHANGE_RADIUS_MODAL,\r\n    CHANGE_REGION_MODAL,\r\n    SET_MAP_MODE,\r\n    SHOW_LIST_IN_REGION_MODAL,\r\n} from '../../../renderer/_reducers/_slices/mapSlice';\r\nimport appModalMode from '../../../components/modal/appModalMode';\r\n\r\nexport { ControlButton };\r\n\r\nfunction ControlButton() {\r\n    return (\r\n        <div className=\"wrapper-map-control-button\">\r\n            <div className=\"container-button-map-mode\">\r\n                <ChangeRadius />\r\n                <SelectRegion />\r\n            </div>\r\n            <div>\r\n                <CategoryFilter />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction CategoryFilter() {\r\n    const dispatch = useAppDispatch();\r\n\r\n    const handleClick = () => {\r\n        initializeMapMode();\r\n        dispatch(CATEGORY_FILTER_MODAL(true));\r\n    };\r\n\r\n    function initializeMapMode() {\r\n        dispatch(CHANGE_RADIUS_MODAL(false));\r\n        dispatch(CHANGE_REGION_MODAL(false));\r\n        dispatch(SHOW_LIST_IN_REGION_MODAL(false));\r\n        dispatch(CATEGORY_FILTER_MODAL(false));\r\n    }\r\n\r\n    return (\r\n        <button type=\"button\" onClick={handleClick}>\r\n            업종 필터\r\n        </button>\r\n    );\r\n}\r\n\r\nfunction SelectRegion() {\r\n    const dispatch = useAppDispatch();\r\n\r\n    const mapMode = useAppSelector((state) => state.mapSlice.mapMode);\r\n\r\n    function handleClick() {\r\n        appModalMode(true);\r\n        initializeMapMode();\r\n\r\n        dispatch(CHANGE_REGION_MODAL(true));\r\n\r\n        // 지역버튼 클릭 시 지역리스트 결과모달 켜져 있을 때는 끄기\r\n        dispatch(SET_MAP_MODE('지역탐색 모드'));\r\n    }\r\n\r\n    function initializeMapMode() {\r\n        dispatch(CHANGE_RADIUS_MODAL(false));\r\n        dispatch(CHANGE_REGION_MODAL(false));\r\n        dispatch(SHOW_LIST_IN_REGION_MODAL(false));\r\n        dispatch(CATEGORY_FILTER_MODAL(false));\r\n    }\r\n\r\n    return (\r\n        <button onClick={handleClick} className={`button-map-mode ${mapMode === '지역탐색 모드' ? 'on' : ''}`}>\r\n            지역 탐색 모드\r\n        </button>\r\n    );\r\n}\r\n\r\nfunction ChangeRadius() {\r\n    const dispatch = useAppDispatch();\r\n\r\n    const mapMode = useAppSelector((state) => state.mapSlice.mapMode);\r\n\r\n    const radius = useAppSelector((state) => state.mapSlice.radius);\r\n    const [calcRadius, setCalcRadius] = useState(radius);\r\n    const [unit, setUnit] = useState('m');\r\n\r\n    useEffect(() => {\r\n        if (radius < 1000) {\r\n            setCalcRadius(radius);\r\n            setUnit('m');\r\n        } else {\r\n            setCalcRadius(radius / 1000);\r\n            setUnit('km');\r\n        }\r\n    }, [radius]);\r\n\r\n    const handleClick = () => {\r\n        appModalMode(true);\r\n        initializeMapMode();\r\n\r\n        dispatch(CHANGE_RADIUS_MODAL(true));\r\n        dispatch(SET_MAP_MODE('반경탐색 모드'));\r\n    };\r\n\r\n    function initializeMapMode() {\r\n        dispatch(CHANGE_RADIUS_MODAL(false));\r\n        dispatch(CHANGE_REGION_MODAL(false));\r\n        dispatch(SHOW_LIST_IN_REGION_MODAL(false));\r\n        dispatch(CATEGORY_FILTER_MODAL(false));\r\n    }\r\n\r\n    return (\r\n        <button\r\n            type=\"button\"\r\n            onClick={handleClick}\r\n            className={`button-map-mode ${mapMode === '반경탐색 모드' ? 'on' : ''}`}\r\n        >\r\n            <span>반경 </span>\r\n            <span>{calcRadius}</span>\r\n            <span>{unit}</span>\r\n            <span> 탐색 모드</span>\r\n        </button>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../../renderer/store/hooks';\r\nimport { checkLoginForInfoWindow, clearCircle, init, optimizeMapLevel, setCircle } from './kakaoApi/index.js';\r\nimport { API_URL } from '../../renderer/CONSTANT_URL';\r\nimport { SET_NEAREST_LIST, SET_RESULT_IN_RADIUS } from '../../renderer/_reducers/_slices/mapSlice';\r\nimport { MongoLocation } from './kakaoApi/types';\r\n\r\nexport { KakaoMap };\r\n\r\nfunction KakaoMap({ isLoggedIn }: { isLoggedIn: boolean }) {\r\n    const dispatch = useAppDispatch();\r\n\r\n    const radius = useAppSelector((state) => state.mapSlice.radius);\r\n    const [isInitialized, setIsInitialized] = useState(false);\r\n    const [currentLocation, setCurrentLocation] = useState<MongoLocation | null>(null);\r\n\r\n    const selectedCategory = useAppSelector((state) => state.mapSlice.selectedCategory);\r\n\r\n    useEffect(() => {\r\n        checkLoginForInfoWindow(isLoggedIn);\r\n\r\n        init().then((locPosition: kakao.maps.LatLng) => {\r\n            setIsInitialized(true);\r\n            setCurrentLocation([locPosition.getLng(), locPosition.getLat()] as MongoLocation);\r\n        });\r\n    }, []);\r\n\r\n    const getListInRadius = useCallback(\r\n        async (currentLocation: MongoLocation) => {\r\n            if (Array.isArray(currentLocation)) {\r\n                const res = await fetch(`${API_URL}/map/within-radius-of?radius=${radius}`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({ currentLocation: currentLocation, category: selectedCategory }),\r\n                });\r\n\r\n                const data = await res.json();\r\n\r\n                return data;\r\n            }\r\n        },\r\n        [radius, selectedCategory, currentLocation]\r\n    );\r\n\r\n    // 반경 내 식당이 없을 경우 보여주는 데이터\r\n    const getNearestList = useCallback(\r\n        async (currentLocation: MongoLocation) => {\r\n            if (Array.isArray(currentLocation)) {\r\n                const count = 5;\r\n\r\n                const res = await fetch(`${API_URL}/map/nearest?top=${count}`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({ currentLocation: currentLocation }),\r\n                });\r\n\r\n                const data = await res.json();\r\n\r\n                return data;\r\n            }\r\n        },\r\n        [radius, currentLocation]\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (isInitialized) {\r\n            clearCircle();\r\n            setCircle(radius);\r\n\r\n            if (currentLocation) {\r\n                getListInRadius(currentLocation).then((data) => {\r\n                    if (data.success) {\r\n                        dispatch(SET_RESULT_IN_RADIUS(data.lists));\r\n                        optimizeMapLevel(radius);\r\n                    }\r\n                });\r\n\r\n                getNearestList(currentLocation).then((data) => {\r\n                    if (data.success) {\r\n                        dispatch(SET_NEAREST_LIST(data.lists));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [radius, isInitialized, selectedCategory, currentLocation]);\r\n\r\n    return <div id=\"map\" />;\r\n}\r\n","import React from 'react';\r\nimport { useAppDispatch } from '../../renderer/store/hooks';\r\nimport { moveToCurrentLocation } from '../../pages/search/kakaoApi';\r\nimport { SHOW_LIST_IN_REGION_MODAL } from '../../renderer/_reducers/_slices/mapSlice';\r\n\r\nexport { BackCurrentLocation };\r\n\r\nfunction BackCurrentLocation() {\r\n    const dispatch = useAppDispatch();\r\n\r\n    const handleClick = () => {\r\n        moveToCurrentLocation();\r\n        // 지역탐색 결과 모달 끄기\r\n        dispatch(SHOW_LIST_IN_REGION_MODAL(false));\r\n    };\r\n\r\n    return (\r\n        <button\r\n            type=\"button\"\r\n            onClick={handleClick}\r\n            className=\"button-move-to-my\"\r\n            title=\"내 위치로\"\r\n            aria-label=\"내 위치로 이동 버튼\"\r\n        />\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { useAppSelector } from '../../../renderer/store/hooks';\r\n\r\nexport { CountMessage };\r\n\r\nfunction CountMessage() {\r\n    const currentSido = useAppSelector((state) => state.mapSlice.currentSido);\r\n    const currentSigungu = useAppSelector((state) => state.mapSlice.currentSigungu);\r\n    const resultInRadius = useAppSelector((state) => state.mapSlice.resultInRadius);\r\n\r\n    return resultInRadius.length > 0 ? (\r\n        <p className=\"txt-result-in-radius\">\r\n            내 위치({`${currentSido} ${currentSigungu}`})에 검색된 식당 <span>{resultInRadius.length}</span>개\r\n        </p>\r\n    ) : (\r\n        <p className=\"txt-result-in-radius\">\r\n            결과가 없어요!😥\r\n            <br />\r\n            가장 가까운 식당 TOP 5\r\n        </p>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { CountMessage } from './CountMessage';\r\nimport { RestaurantList } from './RestaurantList';\r\n\r\nexport { ResultInRadius };\r\n\r\nfunction ResultInRadius() {\r\n    return (\r\n        <div className=\"wrapper-result-in-radius\">\r\n            <CountMessage />\r\n            <RestaurantList />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { ControlButton } from './ControlButton/ControlButton';\r\nimport { KakaoMap } from './KakaoMap';\r\nimport { BackCurrentLocation } from '../../components/button/BackCurrentLocation';\r\nimport { ResultInRadius } from './ResultInRadius/ResultInRadius';\r\n\r\nexport default function MapView({ isLoggedIn }: { isLoggedIn: boolean }) {\r\n    return (\r\n        <main className=\"main-map\">\r\n            <ControlButton />\r\n            <KakaoMap isLoggedIn={isLoggedIn} />\r\n            <BackCurrentLocation />\r\n            <ResultInRadius />\r\n        </main>\r\n    );\r\n}\r\n"],"names":["ControlButton","jsxs","jsx","ChangeRadius","SelectRegion","CategoryFilter","dispatch","useAppDispatch","handleClick","initializeMapMode","CATEGORY_FILTER_MODAL","CHANGE_RADIUS_MODAL","CHANGE_REGION_MODAL","SHOW_LIST_IN_REGION_MODAL","mapMode","useAppSelector","state","appModalMode","SET_MAP_MODE","radius","calcRadius","setCalcRadius","useState","unit","setUnit","useEffect","KakaoMap","isLoggedIn","isInitialized","setIsInitialized","currentLocation","setCurrentLocation","selectedCategory","checkLoginForInfoWindow","init","locPosition","getListInRadius","useCallback","API_URL","getNearestList","clearCircle","setCircle","data","SET_RESULT_IN_RADIUS","optimizeMapLevel","SET_NEAREST_LIST","BackCurrentLocation","moveToCurrentLocation","CountMessage","currentSido","currentSigungu","resultInRadius","ResultInRadius","RestaurantList","MapView"],"mappings":"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"}