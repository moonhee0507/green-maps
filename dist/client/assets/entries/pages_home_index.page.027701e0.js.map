{"version":3,"mappings":"8MAeA,SAASA,GAAO,CACZ,KAAM,CAACC,EAAWC,CAAY,EAAIC,WAAS,EAAI,EACzC,CAACC,EAAgBC,CAAiB,EAAIF,WAA0C,IAAI,EACpF,CAACG,EAAWC,CAAY,EAAIJ,WAAc,IAAMK,CAAW,EAE3DC,EAA6BC,GAAoC,CACnEA,EAAM,eAAe,EAErBL,EAAkBK,CAAK,GAG3BC,mBAAU,IAAM,CACN,MAAAC,EAAY,WAAW,IAAM,CAC/BV,EAAa,EAAK,GACnB,GAAI,EAEP,OAAAK,EAAa,IAAMM,EAAM,KAAK,IAAMC,EAAA,WAAO,6BAAe,EAAC,uEAAC,EAErD,IAAM,CACT,aAAaF,CAAS,EAE9B,EAAG,CAAE,GAELD,YAAU,KACDV,GACM,wBAAiB,sBAAuBQ,CAAgC,EAG5E,IAAM,CACF,2BAAoB,sBAAuBA,CAAgC,IAEvF,CAACR,CAAS,CAAC,SAGTY,EAAM,SAAN,CAAe,SAAUE,MAACP,IAAY,EAClC,UACGP,EAAAc,EAAA,IAAC,OACG,MAAO,CACH,MAAO,OACP,SAAU,WACV,IAAK,MACL,KAAM,MACN,UAAW,wBACX,QAAS,MACb,EAEA,SAACA,MAAA,OAAI,IAAKC,EAAY,IAAI,KAAK,MAAO,CAAE,MAAO,MAAU,KAAG,aAAc,KAE9E,KACJD,MAACT,EAAU,gBAAAF,EAAgC,kBAAAC,CAAsC,EACrF,GAER","names":["Page","isLoading","setIsLoading","useState","deferredPrompt","setDeferredPrompt","Component","setComponent","LoadingMain","handleBeforeInstallPrompt","event","useEffect","timeoutId","React","__vitePreload","jsx","imgLoading"],"sources":["../../../../pages/home/index.page.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport LoadingMain from '../../components/Loading/LoadingMain';\r\nimport imgLoading from '/images/spinner.webp';\r\n\r\nexport { Page };\r\n\r\nexport interface BeforeInstallPromptEvent extends Event {\r\n    readonly platforms: Array<string>;\r\n    readonly userChoice: Promise<{\r\n        outcome: 'accepted' | 'dismissed';\r\n        platform: string;\r\n    }>;\r\n    prompt(): Promise<void>;\r\n}\r\n\r\nfunction Page() {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [deferredPrompt, setDeferredPrompt] = useState<BeforeInstallPromptEvent | null>(null);\r\n    const [Component, setComponent] = useState<any>(() => LoadingMain);\r\n\r\n    const handleBeforeInstallPrompt = (event: BeforeInstallPromptEvent) => {\r\n        event.preventDefault();\r\n\r\n        setDeferredPrompt(event);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const timeoutId = setTimeout(() => {\r\n            setIsLoading(false);\r\n        }, 5000);\r\n\r\n        setComponent(() => React.lazy(() => import('./HomeMain.js')));\r\n\r\n        return () => {\r\n            clearTimeout(timeoutId);\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!isLoading) {\r\n            window.addEventListener('beforeinstallprompt', handleBeforeInstallPrompt as any); // (지원 o) chrome 44, edge 79, opera, 삼성브라우저, android webview / (지원 x) 사파리, ios 사파리, firefox\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeinstallprompt', handleBeforeInstallPrompt as any);\r\n        };\r\n    }, [isLoading]);\r\n\r\n    return (\r\n        <React.Suspense fallback={<LoadingMain />}>\r\n            {isLoading ? (\r\n                <div\r\n                    style={{\r\n                        width: '50px',\r\n                        position: 'absolute',\r\n                        top: '50%',\r\n                        left: '50%',\r\n                        transform: 'translate(-50%, -50%)',\r\n                        opacity: '0.33',\r\n                    }}\r\n                >\r\n                    <img src={imgLoading} alt=\"로딩\" style={{ width: '100%' }} id=\"__LOADING__\" />\r\n                </div>\r\n            ) : null}\r\n            <Component deferredPrompt={deferredPrompt} setDeferredPrompt={setDeferredPrompt} />\r\n        </React.Suspense>\r\n    );\r\n}\r\n"],"file":"assets/entries/pages_home_index.page.027701e0.js"}