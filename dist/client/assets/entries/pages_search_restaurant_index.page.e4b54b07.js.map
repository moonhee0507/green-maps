{"version":3,"mappings":"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","names":["EditDeleteNotifyModal","show","setShow","useState","editDeleteNotifyModalOn","useAppSelector","state","sameUserOwner","useEffect","jsx","jsxs","Fragment","EDIT","DELETE","reviewId","restaurantId","handleClick","API_URL","err","ModalGroup","on","dispatch","useAppDispatch","handleClose","event","app","EDIT_DELETE_NOTIFY_MODAL","RestaurantDetail","React","Page","pageContext","routeParams","isLoggedIn","userInfo","useCheckLoginStatus","_a","restaurantInfo","setRestaurantInfo","getRestaurantList","data","TopBar","LoadingMain","NavBar"],"sources":["../../../../pages/search/restaurant/ModalGroup/EditDeleteNotifyModal/EditDeleteNotifyModal.tsx","../../../../pages/search/restaurant/ModalGroup/ModalGroup.tsx","../../../../pages/search/restaurant/index.page.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useAppSelector } from '../../../../../renderer/store/hooks';\r\nimport { API_URL } from '../../../../../renderer/CONSTANT_URL';\r\n\r\nexport { EditDeleteNotifyModal };\r\n\r\nfunction EditDeleteNotifyModal() {\r\n    const [show, setShow] = useState(false);\r\n    const editDeleteNotifyModalOn = useAppSelector((state) => state.reviewSlice.editDeleteNotifyModalOn);\r\n    const sameUserOwner = useAppSelector((state) => state.reviewSlice.sameUserOwner);\r\n\r\n    useEffect(() => {\r\n        if (editDeleteNotifyModalOn === true) setShow(true);\r\n        else setShow(false);\r\n    }, [editDeleteNotifyModalOn]);\r\n\r\n    return (\r\n        <article className={`modal-edit-delete-notify ${show ? 'on' : ''}`}>\r\n            <h4 className=\"sr-only\">수정, 삭제, 신고용 모달</h4>\r\n            <ul>\r\n                {sameUserOwner ? (\r\n                    <>\r\n                        <EDIT />\r\n                        <DELETE />\r\n                    </>\r\n                ) : (\r\n                    <li> 🚨 신고하기</li>\r\n                )}\r\n            </ul>\r\n        </article>\r\n    );\r\n}\r\n\r\nfunction EDIT() {\r\n    const reviewId = useAppSelector((state) => state.reviewSlice.reviewId);\r\n    const restaurantId = useAppSelector((state) => state.reviewSlice.restaurantId);\r\n\r\n    function handleClick() {\r\n        window.location.href = `/search/${restaurantId}/reviews/${reviewId}/edit`;\r\n    }\r\n\r\n    return <li onClick={handleClick}>🩹 수정하기</li>;\r\n}\r\n\r\nfunction DELETE() {\r\n    const reviewId = useAppSelector((state) => state.reviewSlice.reviewId);\r\n    const restaurantId = useAppSelector((state) => state.reviewSlice.restaurantId);\r\n\r\n    async function handleClick() {\r\n        try {\r\n            const res = await fetch(`${API_URL}/reviews/${reviewId}`, {\r\n                credentials: 'include',\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ restaurantId: restaurantId }),\r\n            });\r\n            const data = await res.json();\r\n            if (data.success) {\r\n                window.location.href = `/search/${restaurantId}`;\r\n            } else {\r\n                alert('다시 시도해주세요.');\r\n            }\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n    return <li onClick={handleClick}>🗑️ 삭제하기</li>;\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../../../../renderer/store/hooks';\r\nimport { EDIT_DELETE_NOTIFY_MODAL } from '../../../../renderer/_reducers/_slices/reviewSlice';\r\nimport { EditDeleteNotifyModal } from './EditDeleteNotifyModal/EditDeleteNotifyModal';\r\n\r\nexport { ModalGroup };\r\n\r\nfunction ModalGroup() {\r\n    const on = useAppSelector((state) => state.reviewSlice.editDeleteNotifyModalOn);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        if (on === true) setShow(true);\r\n        else setShow(false);\r\n    }, [on]);\r\n\r\n    useEffect(() => {\r\n        if (show) {\r\n            document.addEventListener('click', handleClose);\r\n        }\r\n\r\n        return () => {\r\n            document.removeEventListener('click', handleClose);\r\n        };\r\n    }, [show]);\r\n\r\n    function handleClose(event: MouseEvent) {\r\n        if ((event.target as HTMLElement).className === 'app modal-mode') {\r\n            const app = document.querySelector('.app');\r\n            app?.classList.remove('modal-mode');\r\n\r\n            dispatch(EDIT_DELETE_NOTIFY_MODAL(false));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`modal-group ${show ? 'on' : ''}`}>\r\n            <EditDeleteNotifyModal />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { TopBar } from '../../../components/topBar/topBar';\r\nimport { NavBar } from '../../../components/navBar';\r\nimport { ModalGroup } from './ModalGroup/ModalGroup';\r\nimport { API_URL } from '../../../renderer/CONSTANT_URL';\r\nimport { useCheckLoginStatus } from '../../../renderer/_hooks/useCheckLoginStatus';\r\nimport LoadingMain from '../../../components/Loading/LoadingMain';\r\nimport type { PageContext } from '../../../renderer/types';\r\nimport type { Restaurant } from '../../../server/models/Restaurant';\r\n\r\nconst RestaurantDetail = React.lazy(() => import('./RestaurantDetail/RestaurantDetail'));\r\n\r\nexport { Page };\r\n\r\nfunction Page(pageContext: PageContext) {\r\n    const { routeParams } = pageContext;\r\n\r\n    const [isLoggedIn, userInfo] = useCheckLoginStatus();\r\n    const restaurantId = pageContext.routeParams?.restaurantId || '';\r\n\r\n    const [restaurantInfo, setRestaurantInfo] = useState<Restaurant | null>(null);\r\n\r\n    useEffect(() => {\r\n        getRestaurantList();\r\n    }, [routeParams]);\r\n\r\n    async function getRestaurantList() {\r\n        const res = await fetch(`${API_URL}/restaurants/${restaurantId}`, {\r\n            headers: {\r\n                'Cache-Control': 's-maxage=2678400, max-age=0',\r\n            },\r\n        });\r\n        const data = (await res.json()) as { success: boolean; restaurantInfo: Restaurant; totalReview: number };\r\n\r\n        if (data.success) {\r\n            setRestaurantInfo(data.restaurantInfo);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <TopBar title=\"상세정보\" />\r\n            <React.Suspense fallback={<LoadingMain />}>\r\n                <RestaurantDetail restaurantInfo={restaurantInfo} isLoggedIn={isLoggedIn} userInfo={userInfo} />\r\n            </React.Suspense>\r\n            <NavBar isLoggedIn={isLoggedIn} />\r\n            <ModalGroup />\r\n        </>\r\n    );\r\n}\r\n"],"file":"assets/entries/pages_search_restaurant_index.page.e4b54b07.js"}