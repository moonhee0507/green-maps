{"version":3,"file":"pages_login_index.page.8e5b9894.js","sources":["../../../../../../../../../images/icon-kakao.webp","../../../../pages/login/LoginMain/SelectStage.tsx","../../../../pages/login/LoginMain/IdStage.tsx","../../../../pages/login/LoginMain/PasswordStage.tsx","../../../../pages/login/LoginMain/LoginMain.tsx","../../../../pages/login/index.page.tsx"],"sourcesContent":["export default \"__VITE_PUBLIC_ASSET__95e4d656__\"","import React, { useEffect } from 'react';\r\nimport { useAppDispatch } from '../../../renderer/store/hooks';\r\nimport { LOGGING_IN } from '../../../renderer/_reducers/_slices/loginSlice';\r\nimport { Link } from '../../../renderer/Link';\r\nimport { API_URL } from '../../../renderer/CONSTANT_URL';\r\nimport imgKakao from '/images/icon-kakao.webp';\r\n\r\nexport { SelectStage };\r\n\r\nfunction SelectStage({ setMove }: { setMove: React.Dispatch<React.SetStateAction<number>> }) {\r\n    const dispatch = useAppDispatch();\r\n\r\n    const nextStage = () => {\r\n        setMove(-100);\r\n        dispatch(LOGGING_IN(true));\r\n    };\r\n\r\n    async function callAgreementScreen() {\r\n        window.location.href = `${API_URL}/oauth/kakao`;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const queryString = window.location.search;\r\n        const paramFromQueryString = new URLSearchParams(queryString); // 쿼리 문자열을 메서드로 처리할 수 있음\r\n        const authorizeCode = paramFromQueryString.get('code');\r\n\r\n        try {\r\n            if (queryString !== '') {\r\n                if (authorizeCode) {\r\n                    getAccessTokenFromKakao(authorizeCode).then((data) => {\r\n                        if (data.success) {\r\n                            getKakaoUserData().then((data) => {\r\n                                if (data.success) {\r\n                                    window.location.href = '/my';\r\n                                } else {\r\n                                    console.error(`카카오 사용자 데이터 가져오기 실패`);\r\n                                }\r\n                            });\r\n                        } else {\r\n                            console.error(`카카오 API 토큰 요청에 실패했습니다.`);\r\n                        }\r\n                    });\r\n                } else {\r\n                    console.error(`카카오 AuthorizeCode가 없습니다.`);\r\n                }\r\n            }\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }, []);\r\n\r\n    async function getAccessTokenFromKakao(authorizeCode: string) {\r\n        const res = await fetch(`${API_URL}/oauth/kakao/token?code=${authorizeCode}`, {\r\n            credentials: 'include',\r\n            method: 'GET',\r\n        });\r\n        const data = await res.json();\r\n\r\n        return data;\r\n    }\r\n\r\n    async function getKakaoUserData() {\r\n        const res = await fetch(`${API_URL}/oauth/kakao/users`, {\r\n            credentials: 'include',\r\n            method: 'GET',\r\n        });\r\n        const data = await res.json();\r\n\r\n        return data;\r\n    }\r\n\r\n    return (\r\n        <section className=\"login-select-stage\">\r\n            <h3 className=\"sr-only\">로그인 방식 선택</h3>\r\n            <div className=\"container-rocket\">\r\n                <span>🚀</span>\r\n            </div>\r\n            <button type=\"button\" onClick={nextStage} className=\"styled-button reuse-in-login\">\r\n                로그인\r\n            </button>\r\n            <button type=\"button\" className=\"styled-button kakao-login\" onClick={callAgreementScreen}>\r\n                <img src={imgKakao} alt=\"카카오 아이콘\" role=\"presentation\" />\r\n                <span>카카오 로그인</span>\r\n            </button>\r\n            <Link href=\"/signup\" className=\"link-to-signup\">\r\n                회원가입\r\n            </Link>\r\n        </section>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useAppDispatch } from '../../../renderer/store/hooks';\r\nimport { LOGGING_IN, SET_ID } from '../../../renderer/_reducers/_slices/loginSlice';\r\n\r\nexport { IdStage };\r\n\r\nfunction IdStage({ setMove }: { setMove: React.Dispatch<React.SetStateAction<number>> }) {\r\n    const dispatch = useAppDispatch();\r\n    const [id, setId] = useState('');\r\n\r\n    const handlePrev = () => {\r\n        setMove((prev) => prev + 100);\r\n        dispatch(LOGGING_IN(false));\r\n    };\r\n\r\n    const handleNext = () => {\r\n        setMove((prev) => prev - 100);\r\n        dispatch(SET_ID(id));\r\n    };\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setId(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <section className=\"login-id-stage\">\r\n            <h3 className=\"sr-only\">아이디 입력</h3>\r\n            <label htmlFor=\"loginId\">아이디</label>\r\n            <input type=\"text\" id=\"loginId\" onChange={handleChange} />\r\n            <div className=\"button-group-move\">\r\n                <button type=\"button\" onClick={handlePrev} aria-label=\"이전 화면으로 이동\">\r\n                    첫 화면\r\n                </button>\r\n                <button type=\"button\" onClick={handleNext} aria-label=\"다음 화면으로 이동\">\r\n                    비밀번호\r\n                </button>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n","import React, { ChangeEvent, useState } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../../../renderer/store/hooks';\r\nimport { LOGGING_IN } from '../../../renderer/_reducers/_slices/loginSlice';\r\nimport { API_URL } from '../../../renderer/CONSTANT_URL';\r\n\r\nexport { PasswordStage };\r\n\r\nfunction PasswordStage({ setMove }: { setMove: React.Dispatch<React.SetStateAction<number>> }) {\r\n    const dispatch = useAppDispatch();\r\n\r\n    const id = useAppSelector((state) => state.loginSlice.currentId);\r\n    const [password, setPassword] = useState<string>('');\r\n    const [isChecked, setIsChecked] = useState<boolean>(false);\r\n\r\n    const handlePrev = () => {\r\n        setMove((prev) => prev + 100);\r\n    };\r\n\r\n    const handlePasswordChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(event.target.value);\r\n    };\r\n    const handleCheckChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setIsChecked(event.target.checked);\r\n    };\r\n\r\n    async function handleClick() {\r\n        // 톱바의 뒤로가기 보여줘도 됨\r\n        dispatch(LOGGING_IN(false));\r\n\r\n        // 로그인 통신\r\n        try {\r\n            const body = new URLSearchParams();\r\n            body.append('userId', id);\r\n            body.append('password', password);\r\n            body.append('keepLogin', isChecked ? 'true' : 'false');\r\n\r\n            const res = await fetch(`${API_URL}/users/login`, {\r\n                credentials: 'include',\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                },\r\n                body: body.toString(),\r\n            });\r\n\r\n            const data = await res.json();\r\n\r\n            if (data.success) {\r\n                window.alert('🎉🎉로그인에 성공했습니다🎉🎉');\r\n                window.location.href = '/search';\r\n            } else {\r\n                window.alert('로그인에 실패했습니다');\r\n            }\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className=\"login-password-stage\">\r\n            <h3 className=\"sr-only\">비밀번호 입력</h3>\r\n\r\n            <label htmlFor=\"loginPassword\">비밀번호</label>\r\n            <input type=\"password\" id=\"loginPassword\" onChange={handlePasswordChange} />\r\n\r\n            <label htmlFor=\"loginPersist\">로그인 유지</label>\r\n            <input type=\"checkbox\" id=\"loginPersist\" onChange={handleCheckChange} />\r\n\r\n            <div className=\"button-group-move\">\r\n                <button type=\"button\" onClick={handlePrev} aria-label=\"이전 화면으로 이동\">\r\n                    아이디\r\n                </button>\r\n                <button type=\"button\" onClick={handleClick} aria-label=\"다음 화면으로 이동\">\r\n                    로그인\r\n                </button>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { SelectStage } from './SelectStage';\r\nimport { IdStage } from './IdStage';\r\nimport { PasswordStage } from './PasswordStage';\r\n\r\nexport { LoginMain };\r\n\r\nfunction LoginMain() {\r\n    const [move, setMove] = useState(0);\r\n\r\n    return (\r\n        <main className=\"main-login\">\r\n            <div className=\"login-stage-wrapper\" style={{ left: `${move}%`, transition: '.5s' }}>\r\n                <SelectStage setMove={setMove} />\r\n                <IdStage setMove={setMove} />\r\n                <PasswordStage setMove={setMove} />\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { TopBar } from '../../components/topBar/topBar';\r\nimport { LoginMain } from './LoginMain/LoginMain';\r\nimport { useCheckLoginStatus } from '../../renderer/_hooks/useCheckLoginStatus';\r\n\r\nexport const documentProps = {\r\n    title: '로그인 | Green Maps',\r\n    description: '채식 식당 지도 서비스 로그인',\r\n};\r\n\r\nexport { Page };\r\n\r\nfunction Page() {\r\n    useCheckLoginStatus();\r\n\r\n    return (\r\n        <>\r\n            <TopBar title={'로그인'} />\r\n            <LoginMain />\r\n        </>\r\n    );\r\n}\r\n"],"names":["imgKakao","SelectStage","setMove","dispatch","useAppDispatch","nextStage","LOGGING_IN","callAgreementScreen","API_URL","useEffect","queryString","authorizeCode","getAccessTokenFromKakao","data","getKakaoUserData","err","jsxs","jsx","Link","IdStage","id","setId","useState","handlePrev","prev","handleNext","SET_ID","handleChange","event","PasswordStage","useAppSelector","state","password","setPassword","isChecked","setIsChecked","handlePasswordChange","handleCheckChange","handleClick","body","LoginMain","move","documentProps","Page","useCheckLoginStatus","Fragment","TopBar"],"mappings":"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"}