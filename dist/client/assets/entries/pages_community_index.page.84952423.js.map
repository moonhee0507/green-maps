{"version":3,"mappings":"2YAIA,SAASA,GAAa,CAClB,KAAM,CAACC,EAAWC,CAAY,EAAIC,WAAkB,EAAK,EAEnDC,EAAeC,SAAyB,IAAI,EAElD,SAASC,GAAmB,CACpB,GAAAF,EAAa,UAAY,KAAM,CACzB,MAAAG,EAAUH,EAAa,QAAQ,MACjC,GAAAG,EAAQ,OAAS,EAAG,CACpB,MAAMC,EAAM,qBAAqBD,IAEjC,OAAO,SAAS,KAAOC,OAEvB,OAAO,MAAM,cAAc,EAGvC,CAEA,OAEQC,EAAA,KAAAC,WAAA,WAAAC,MAAC,OAAI,UAAU,aACX,eAAC,MACI,UAAAV,SACI,MACG,WAAAU,MAAC,QAAM,SAAQ,aAAa,UAAU,UAAU,SAEhD,aACAA,MAAC,SAAM,KAAK,SAAS,GAAG,aAAa,IAAKP,EAAc,UAAS,EAAC,IACtE,EAECO,MAAA,MAAG,UAAU,YAAY,eAAG,CAErC,GACJ,EACAA,EAAA,IAAC,UACG,KAAK,SACL,QAAS,IAAOV,EAAYK,EAAW,EAAIJ,EAAa,EAAI,EAC5D,aAAW,YACd,cAED,CACJ,GAER,CCzCA,SAASU,GAAY,CAEb,OAAAH,EAAA,KAAC,MAAI,WAAU,iBACX,UAAAE,EAAA,IAACE,EAAa,UACbb,EAAW,GAChB,GAER,CCFA,MAAMc,EAAgBC,EAAM,KAAK,IAAMC,EAAA,WAAO,6BAAiB,sTAAC,EAEzD,SAASC,EAAKC,EAA0B,SAC3C,KAAM,CAACC,EAAYC,CAAC,EAAIC,EAAoB,EAGtCC,EAAUC,EAAgBC,GAAUA,EAAM,UAAU,OAAO,EAC3DC,EAAcF,EAAgBC,GAAUA,EAAM,UAAU,KAAK,YAAY,EAEzEE,EAAQ,GAGR,CAACC,EAAOC,CAAQ,EAAIzB,EAAA,WAAsB0B,GAAAC,EAAAZ,EAAY,YAAZ,YAAAY,EAAuB,YAAvB,YAAAD,EAAkC,QAAS,EAAE,EAEvFE,EAAWC,cAAY,SAAY,CACjC,IAcO,OAFM,MAVD,MAAM,MACd,GAAGC,KAAWX,IAAY,GAAK,YAAcA,EAAU,gBAAgBG,WAAqBC,IAC5F,CACI,YAAa,UACb,QAAS,CACL,eAAgB,kBACpB,CACJ,IAGmB,aAGlBQ,GACL,QAAQ,MAAMA,CAAG,CACrB,GACD,CAACT,EAAaH,CAAO,CAAC,EAEnBa,EAAWC,IAEjBC,mBAAU,IAAM,CACHN,EAAA,EAAE,KAAMO,GAAc,CAClBV,EAAAU,EAAK,cAAgB,EAAIA,EAAK,MAAQ,CAAC,GAAGX,EAAO,GAAGW,EAAK,KAAK,CAAC,EAE/DH,EAAA,CACL,KAAM,yBACN,MAAOG,EAAK,MACZ,aAAcA,EAAK,YACtB,EACJ,GACF,CAACP,CAAQ,CAAC,SAGRhB,EAAM,SAAN,CAAe,SAAUJ,MAAC4B,IAAY,EACnC,UAAA5B,EAAA,IAACC,EAAU,IACVD,MAAAG,EAAA,CAAc,WAAAK,EAAwB,MAAAQ,EAAc,MAAAD,CAAc,GACnEf,MAAC6B,GAAO,WAAArB,EAAwB,CACpC,GAER","names":["SearchForm","showInput","setShowInput","useState","inputElement","useRef","moveToPage","keyword","url","jsxs","Fragment","jsx","SearchBar","ButtonGoBack","CommunityMain","React","__vitePreload","Page","pageContext","isLoggedIn","_","useCheckLoginStatus","subject","useAppSelector","state","currentPage","limit","posts","setPosts","_b","_a","getPosts","useCallback","API_URL","err","dispatch","useDispatch","useEffect","data","LoadingMain","NavBar"],"sources":["../../../../pages/community/SearchForm.tsx","../../../../pages/community/SearchBar.tsx","../../../../pages/community/index.page.tsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\n\r\nexport { SearchForm };\r\n\r\nfunction SearchForm() {\r\n    const [showInput, setShowInput] = useState<boolean>(false);\r\n\r\n    const inputElement = useRef<HTMLInputElement>(null);\r\n\r\n    function moveToPage(): void {\r\n        if (inputElement.current !== null) {\r\n            const keyword = inputElement.current.value;\r\n            if (keyword.length > 0) {\r\n                const url = `/community/search/${keyword}`;\r\n                // navigate(url, { keepScrollPosition: true });\r\n                window.location.href = url;\r\n            } else {\r\n                window.alert('Í≤ÄÏÉâÏñ¥Î•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.');\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"search-bar\">\r\n                <div>\r\n                    {showInput ? (\r\n                        <div>\r\n                            <label htmlFor=\"searchItem\" className=\"sr-only\">\r\n                                Í≤åÏãúÍ∏Ä Í≤ÄÏÉâÌïòÍ∏∞\r\n                            </label>\r\n                            <input type=\"search\" id=\"searchItem\" ref={inputElement} autoFocus />\r\n                        </div>\r\n                    ) : (\r\n                        <h2 className=\"top-title\">Í≤åÏãúÌåê</h2>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <button\r\n                type=\"button\"\r\n                onClick={() => (showInput ? moveToPage() : setShowInput(true))}\r\n                aria-label=\"Í≤åÏãúÍ∏Ä Í≤ÄÏÉâ Î≤ÑÌäº\"\r\n            >\r\n                üîç\r\n            </button>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { ButtonGoBack } from '../../components/button/buttonGoBack';\r\nimport { SearchForm } from './SearchForm';\r\n\r\nexport { SearchBar };\r\n\r\nfunction SearchBar() {\r\n    return (\r\n        <div className=\"top-bar search\">\r\n            <ButtonGoBack />\r\n            <SearchForm />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { SearchBar } from './SearchBar';\r\nimport { NavBar } from '../../components/navBar';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useAppSelector } from '../../renderer/store/hooks';\r\nimport { API_URL } from '../../renderer/CONSTANT_URL';\r\nimport { useCheckLoginStatus } from '../../renderer/_hooks/useCheckLoginStatus';\r\nimport LoadingMain from '../../components/Loading/LoadingMain';\r\nimport type { PageContext } from '../../renderer/types';\r\nimport type { Post } from '../../server/models/Post';\r\n\r\nconst CommunityMain = React.lazy(() => import('./CommunityMain'));\r\n\r\nexport function Page(pageContext: PageContext) {\r\n    const [isLoggedIn, _] = useCheckLoginStatus();\r\n\r\n    // Ï†ÑÏó≠ÏóêÏÑú Í¥ÄÎ¶¨ÌïòÎäî Î≥ÄÏàò: subject Îì±Î°ù Ïó¨Î∂Ä, ÌòÑÏû¨ ÌéòÏù¥ÏßÄ, ÌïúÌéòÏù¥ÏßÄÎãπ ÏµúÎåÄÍ≤åÏãúÎ¨º Ïàò\r\n    const subject = useAppSelector((state) => state.postSlice.SUBJECT);\r\n    const currentPage = useAppSelector((state) => state.postSlice.post.CURRENT_PAGE);\r\n\r\n    const limit = 20;\r\n\r\n    // ÎÇ¥Î†§Î≥¥ÎÇ¥Îäî Îç∞Ïù¥ÌÑ∞Îäî Ïó¨Í∏∞ÏÑú Ï†ïÌï¥Ïßê\r\n    const [posts, setPosts] = useState<Array<Post>>(pageContext.pageProps?.postProps?.lists || []);\r\n\r\n    const getPosts = useCallback(async () => {\r\n        try {\r\n            // ÎßêÎ®∏Î¶¨Ïóê ÎÇ¥Ïö©Ïù¥ ÏûàÏúºÎ©¥ subjects/:name, ÏïÑÎãàÎ©¥ posts\r\n            const res = await fetch(\r\n                `${API_URL}/${subject !== '' ? 'subjects/' + subject : 'posts'}?page=${currentPage}&limit=${limit}`,\r\n                {\r\n                    credentials: 'include',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                }\r\n            );\r\n\r\n            const data = await res.json();\r\n\r\n            return data;\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }, [currentPage, subject]); // ÌòÑÏû¨ ÌéòÏù¥ÏßÄ Î∞îÎÄåÎ©¥ ÏÉà Í≤åÏãúÎ¨º Í∞ÄÏ†∏Ïò§Í∏∞ + ÎßêÎ®∏Î¶¨ Î∞îÎÄåÎ©¥ ÏÉà Í≤åÏãúÎ¨º Í∞ÄÏ†∏Ïò§Í∏∞\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        getPosts().then((data: any) => {\r\n            setPosts(data.currentPage === 1 ? data.lists : [...posts, ...data.lists]); // Í≤åÏãúÎ¨ºÎì§ÏùÄ ÎÇ¥Î†§Î≥¥ÎÉÑ\r\n            // ÌòÑÏû¨ ÌéòÏù¥ÏßÄ\r\n            dispatch({\r\n                type: 'postSlice/POST_IN_PAGE',\r\n                TOTAL: data.total,\r\n                CURRENT_PAGE: data.currentPage,\r\n            });\r\n        });\r\n    }, [getPosts]);\r\n\r\n    return (\r\n        <React.Suspense fallback={<LoadingMain />}>\r\n            <SearchBar />\r\n            <CommunityMain isLoggedIn={isLoggedIn} posts={posts} limit={limit} />\r\n            <NavBar isLoggedIn={isLoggedIn} />\r\n        </React.Suspense>\r\n    );\r\n}\r\n"],"file":"assets/entries/pages_community_index.page.84952423.js"}