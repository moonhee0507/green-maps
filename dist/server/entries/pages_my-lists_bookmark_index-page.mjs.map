{"version":3,"file":"pages_my-lists_bookmark_index-page.mjs","sources":["../../../pages/my-lists/bookmark/index.page.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { TopBar } from '../../../components/topBar/topBar';\r\n// import { BookmarkListMain } from './BookmarkListMain/BookmarkListMain';\r\nimport { NavBar } from '../../../components/navBar';\r\nimport { ModalGroup } from '../ModalGroup/ModalGroup';\r\nimport { useCheckLoginStatus } from '../../../renderer/_hooks/useCheckLoginStatus';\r\nimport type { PageContext } from '../../../renderer/types';\r\nimport { Bookmark } from '../../../server/models/User';\r\nimport LoadingMain from '../../../components/Loading/LoadingMain';\r\n\r\nexport const documentProps = {\r\n    title: '내 북마크 | Green Maps',\r\n    description: '북마크 목록 페이지',\r\n};\r\n\r\nconst BookmarkListMain = React.lazy(() => import('./BookmarkListMain/BookmarkListMain'));\r\n\r\nexport function Page(pageContext: PageContext) {\r\n    const { routeParams } = pageContext;\r\n    const [isLoggedIn, info] = useCheckLoginStatus();\r\n\r\n    // const listHasGroupName = info?.bookmarkList.filter((list) => list.groupName === routeParams?.bookmarkGroupName);\r\n    const [listHasGroupName, setListHasGroupName] = useState<Bookmark[]>([]);\r\n\r\n    useEffect(() => {\r\n        if (info !== null) {\r\n            setListHasGroupName(info.bookmarkList.filter((list) => list.groupName === routeParams?.bookmarkGroupName));\r\n        }\r\n    }, [info]);\r\n\r\n    return isLoggedIn ? (\r\n        <>\r\n            <TopBar title={routeParams?.bookmarkGroupName || ''} />\r\n            <React.Suspense fallback={<LoadingMain />}>\r\n                <BookmarkListMain\r\n                    info={info}\r\n                    groupName={routeParams?.bookmarkGroupName || ''}\r\n                    lists={listHasGroupName}\r\n                />\r\n            </React.Suspense>\r\n            <NavBar isLoggedIn={isLoggedIn} />\r\n            <ModalGroup userInfo={info} />\r\n        </>\r\n    ) : (\r\n        <LoadingMain />\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAUO,MAAM,gBAAgB;AAAA,EACzB,OAAO;AAAA,EACP,aAAa;AACjB;AAEA,MAAM,mBAAmB,MAAM,KAAK,MAAM,OAAO,6BAAqC,CAAC;AAEhF,SAAS,KAAK,aAA0B;AACrC,QAAA,EAAE,YAAgB,IAAA;AACxB,QAAM,CAAC,YAAY,IAAI,IAAI,oBAAoB;AAG/C,QAAM,CAAC,kBAAkB,mBAAmB,IAAI,SAAqB,CAAE,CAAA;AAEvE,YAAU,MAAM;AACZ,QAAI,SAAS,MAAM;AACK,0BAAA,KAAK,aAAa,OAAO,CAAC,SAAS,KAAK,eAAc,2CAAa,kBAAiB,CAAC;AAAA,IAC7G;AAAA,EAAA,GACD,CAAC,IAAI,CAAC;AAET,SAAO,aAEC,qBAAA,UAAA,EAAA,UAAA;AAAA,IAAA,oBAAC,QAAO,EAAA,QAAO,2CAAa,sBAAqB,IAAI;AAAA,wBACpD,MAAM,UAAN,EAAe,UAAU,oBAAC,eAAY,GACnC,UAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACG;AAAA,QACA,YAAW,2CAAa,sBAAqB;AAAA,QAC7C,OAAO;AAAA,MAAA;AAAA,IAAA,GAEf;AAAA,IACA,oBAAC,UAAO,YAAwB;AAAA,IAChC,oBAAC,YAAW,EAAA,UAAU,KAAM,CAAA;AAAA,EAChC,EAAA,CAAA,wBAEC,aAAY,CAAA,CAAA;AAErB;"}