{"version":3,"file":"pages_community_search_index-page.mjs","sources":["../../../pages/community/search/index.page.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport { TopBar } from '../../../components/topBar/topBar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { API_URL } from '../../../renderer/CONSTANT_URL';\r\nimport type { PageProps } from '../../../renderer/types';\r\nimport type { RootState } from '../../../renderer/store';\r\nimport type { Post } from '../../../server/models/Post';\r\nimport LoadingMain from '../../../components/Loading/LoadingMain';\r\n\r\nconst SearchMain = React.lazy(() => import('./SearchMain'));\r\n\r\nexport const documentProps = {\r\n    title: '게시글 검색 | Green Maps',\r\n    description: '게시글 검색 페이지',\r\n};\r\n\r\nexport { Page };\r\n\r\nfunction Page(pageProps: PageProps) {\r\n    const dispatch = useDispatch();\r\n    dispatch({\r\n        type: 'postSlice/SEARCH',\r\n        KEYWORD: pageProps.routeParams?.keyword || '',\r\n    });\r\n\r\n    const [posts, setPosts] = useState<Post[]>([]); // 초기값: keyword를 포함하는 게시물\r\n    const [window, setWindow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (typeof window !== 'undefined') {\r\n            setWindow(true);\r\n            setPosts(pageProps.postInfo.lists);\r\n        }\r\n    }, []);\r\n\r\n    // 현재 페이지, 말머리, 범위, 정렬이 변경되면 새 게시물 가져오기\r\n    const keyword = useSelector((state: RootState) => state.postSlice.KEYWORD);\r\n    const subject = useSelector((state: RootState) => state.postSlice.SUBJECT);\r\n    const currentPage = useSelector((state: RootState) => state.postSlice.post.CURRENT_PAGE);\r\n    const boundary = useSelector((state: RootState) => state.postSlice.BOUNDARY);\r\n    const orderBy = useSelector((state: RootState) => state.postSlice.ORDERBY);\r\n    const limit = 20;\r\n\r\n    const getPosts = useCallback(async () => {\r\n        try {\r\n            const res = await fetch(\r\n                `${API_URL}/posts?keyword=${keyword}&subject=${encodeURIComponent(\r\n                    subject\r\n                )}&page=${currentPage}&limit=${limit}&boundary=${boundary}&orderby=${orderBy}`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                }\r\n            );\r\n\r\n            const data = await res.json();\r\n\r\n            return data;\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }, [keyword, subject, currentPage, boundary, orderBy]);\r\n\r\n    useEffect(() => {\r\n        getPosts().then((data) => {\r\n            setPosts(data.currentPage === 1 ? data.lists : [...posts, ...data.lists]);\r\n\r\n            dispatch({\r\n                type: 'postSlice/POST_IN_PAGE',\r\n                TOTAL: data.total,\r\n                CURRENT_PAGE: data.currentPage,\r\n            });\r\n        });\r\n    }, [getPosts]);\r\n\r\n    return window ? (\r\n        <React.Suspense fallback={<LoadingMain />}>\r\n            <TopBar title=\"검색 결과\" />\r\n            <SearchMain posts={posts} limit={limit} />\r\n        </React.Suspense>\r\n    ) : (\r\n        <LoadingMain />\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;AASA,MAAM,aAAa,MAAM,KAAK,MAAM,OAAO,6BAAc,CAAC;AAEnD,MAAM,gBAAgB;AAAA,EACzB,OAAO;AAAA,EACP,aAAa;AACjB;AAIA,SAAS,KAAK,WAAsB;;AAChC,QAAM,WAAW;AACR,WAAA;AAAA,IACL,MAAM;AAAA,IACN,WAAS,eAAU,gBAAV,mBAAuB,YAAW;AAAA,EAAA,CAC9C;AAED,QAAM,CAAC,OAAO,QAAQ,IAAI,SAAiB,CAAE,CAAA;AAC7C,QAAM,CAAC,QAAQ,SAAS,IAAI,SAAS,KAAK;AAE1C,YAAU,MAAM;AACR,QAAA,OAAO,WAAW,aAAa;AAC/B,gBAAU,IAAI;AACL,eAAA,UAAU,SAAS,KAAK;AAAA,IACrC;AAAA,EACJ,GAAG,CAAE,CAAA;AAGL,QAAM,UAAU,YAAY,CAAC,UAAqB,MAAM,UAAU,OAAO;AACzE,QAAM,UAAU,YAAY,CAAC,UAAqB,MAAM,UAAU,OAAO;AACzE,QAAM,cAAc,YAAY,CAAC,UAAqB,MAAM,UAAU,KAAK,YAAY;AACvF,QAAM,WAAW,YAAY,CAAC,UAAqB,MAAM,UAAU,QAAQ;AAC3E,QAAM,UAAU,YAAY,CAAC,UAAqB,MAAM,UAAU,OAAO;AACzE,QAAM,QAAQ;AAER,QAAA,WAAW,YAAY,YAAY;AACjC,QAAA;AACA,YAAM,MAAM,MAAM;AAAA,QACd,GAAG,yBAAyB,mBAAmB;AAAA,UAC3C;AAAA,QAAA,UACM,qBAAqB,kBAAkB,oBAAoB;AAAA,QACrE;AAAA,UACI,SAAS;AAAA,YACL,gBAAgB;AAAA,UACpB;AAAA,QACJ;AAAA,MAAA;AAGE,YAAA,OAAO,MAAM,IAAI;AAEhB,aAAA;AAAA,aACF;AACL,cAAQ,MAAM,GAAG;AAAA,IACrB;AAAA,EAAA,GACD,CAAC,SAAS,SAAS,aAAa,UAAU,OAAO,CAAC;AAErD,YAAU,MAAM;AACH,aAAA,EAAE,KAAK,CAAC,SAAS;AACb,eAAA,KAAK,gBAAgB,IAAI,KAAK,QAAQ,CAAC,GAAG,OAAO,GAAG,KAAK,KAAK,CAAC;AAE/D,eAAA;AAAA,QACL,MAAM;AAAA,QACN,OAAO,KAAK;AAAA,QACZ,cAAc,KAAK;AAAA,MAAA,CACtB;AAAA,IAAA,CACJ;AAAA,EAAA,GACF,CAAC,QAAQ,CAAC;AAEN,SAAA,8BACF,MAAM,UAAN,EAAe,UAAU,oBAAC,eAAY,GACnC,UAAA;AAAA,IAAC,oBAAA,QAAA,EAAO,OAAM,QAAQ,CAAA;AAAA,IACtB,oBAAC,YAAW,EAAA,OAAc,MAAc,CAAA;AAAA,EAC5C,EAAA,CAAA,wBAEC,aAAY,CAAA,CAAA;AAErB;"}