{"version":3,"file":"chunk-fbafafc9.js","sources":["../../../pages/community/component/PostSection/component/Title.tsx","../../../pages/community/component/PostSection/component/PreviewText.tsx","../../../pages/community/component/PostSection/component/PostItemDetail.tsx","../../../pages/community/component/PostSection/component/Subject.tsx","../../../pages/community/useIntersectionObserver.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport DOMPurify from 'isomorphic-dompurify';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../../renderer/store';\r\n\r\nexport { Title };\r\n\r\nfunction Title(props: { title: string }) {\r\n    const { title } = props;\r\n    const keyword = useSelector((state: RootState) => state.postSlice.KEYWORD);\r\n\r\n    const [decoTitle, setDecoTitle] = useState<string>(title);\r\n\r\n    useEffect(() => {\r\n        if (keyword && keyword !== '') {\r\n            // 키워드에 문자가 있으면\r\n            if (title.includes(keyword)) {\r\n                // 제목에 키워드가 있으면\r\n                const regex = new RegExp(keyword, 'gi');\r\n                const replaceWord = title.replace(regex, `<span style=\"color: blue;\">${keyword}</span>`);\r\n\r\n                setDecoTitle(replaceWord);\r\n            } else {\r\n                setDecoTitle(title);\r\n            }\r\n        } else {\r\n            setDecoTitle(title);\r\n        }\r\n    }, [title, keyword]);\r\n\r\n    return (\r\n        <>\r\n            <dt className=\"sr-only\">제목</dt>\r\n            {keyword && keyword !== '' ? (\r\n                <dd\r\n                    className=\"txt-postitem-title\"\r\n                    dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(decoTitle) }}\r\n                />\r\n            ) : (\r\n                <dd className=\"txt-postitem-title\">{title}</dd>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport DOMPurify from 'isomorphic-dompurify';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../../renderer/store';\r\n\r\nexport { PreviewText };\r\n\r\nfunction PreviewText(props: { content: string }) {\r\n    const { content } = props;\r\n    const keyword = useSelector((state: RootState) => state.postSlice.KEYWORD);\r\n\r\n    const [decoContent, setDecoContent] = useState<string>(content);\r\n\r\n    useEffect(() => {\r\n        if (keyword && keyword !== '') {\r\n            if (content.includes(keyword)) {\r\n                const regex = new RegExp(keyword, 'gi');\r\n                const replaceWord = content.replace(regex, `<span style=\"color: blue;\">${keyword}</span>`);\r\n\r\n                setDecoContent(replaceWord);\r\n            } else {\r\n                setDecoContent(content); // 검색 할때마다 새롭게 그려야 하기 때문에 초기화 해줘야 함\r\n            }\r\n        } else {\r\n            setDecoContent(content);\r\n        }\r\n    }, [content, keyword]);\r\n\r\n    return (\r\n        <>\r\n            <dt className=\"sr-only\">내용</dt>\r\n            {keyword && keyword !== '' ? (\r\n                <dd\r\n                    className=\"txt-postitem-content\"\r\n                    dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(decoContent) }}\r\n                />\r\n            ) : (\r\n                <dd className=\"txt-postitem-content\">{content}</dd>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { CommentInPost } from '../../../../../server/models/Post';\r\nimport { isSameDay } from '../../../../../components/Date/isSameDay';\r\n\r\nexport { PostItemDetail };\r\n\r\nfunction PostItemDetail(props: {\r\n    like?: Array<{ user: string }>;\r\n    comments?: Array<CommentInPost>;\r\n    registeredAt: string;\r\n    owner: string;\r\n}) {\r\n    const { like, comments, registeredAt, owner } = props;\r\n\r\n    return (\r\n        <>\r\n            <dt className=\"sr-only\">상세 내용</dt>\r\n            <dd>\r\n                <dl className=\"container-post-subinfo\">\r\n                    <LikeCount like={like} />\r\n                    <CommentCount comments={comments} />\r\n                    <Time registeredAt={registeredAt} />\r\n                    <Owner owner={owner} />\r\n                </dl>\r\n            </dd>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction LikeCount(props: { like?: Array<{ user: string }> }) {\r\n    return (\r\n        <>\r\n            <dt className=\"sr-only\">좋아요 개수</dt>\r\n            <dd className=\"container-count-like\">\r\n                <span>{props.like?.length || 0}</span>\r\n            </dd>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction CommentCount(props: { comments?: Array<CommentInPost> }) {\r\n    return (\r\n        <>\r\n            <dt className=\"sr-only\">댓글 개수</dt>\r\n            <dd className=\"container-count-comment\">\r\n                <span>{props.comments?.length || 0}</span>\r\n            </dd>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Time(props: { registeredAt: string }) {\r\n    const { registeredAt } = props;\r\n\r\n    const date = isSameDay(registeredAt)\r\n        ? `${registeredAt.split('. ').at(-1)?.split(':')[0]}:${registeredAt.split('. ').at(-1)?.split(':')[1]}`\r\n        : registeredAt.slice(0, 13);\r\n\r\n    return (\r\n        <>\r\n            <dt className=\"sr-only\">작성 시간</dt>\r\n            <dd className=\"container-post-time\">\r\n                <time dateTime=\"\">{date}</time>\r\n            </dd>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Owner(props: { owner: string }) {\r\n    return (\r\n        <>\r\n            <dt className=\"sr-only\">작성자</dt>\r\n            <dd className=\"txt-post-owner\">{props.owner}</dd>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport { Subject };\r\n\r\nfunction Subject(props: { subject: string }) {\r\n    return (\r\n        <>\r\n            <dt className=\"sr-only\">말머리</dt>\r\n            <dd className=\"txt-subject-in-community\">{props.subject}</dd>\r\n        </>\r\n    );\r\n}\r\n","import { useRef, useEffect } from 'react';\r\n\r\nexport default function useIntersectionObserver(callback: () => void) {\r\n    const observer = useRef<IntersectionObserver | null>(null);\r\n\r\n    useEffect(() => {\r\n        const handleIntersect: IntersectionObserverCallback = (entries) => {\r\n            if (entries.at(-1)?.isIntersecting) {\r\n                callback();\r\n            }\r\n        };\r\n\r\n        const root = document.querySelector('.main-community');\r\n        observer.current = new IntersectionObserver(handleIntersect, {\r\n            root: root,\r\n            rootMargin: '0px',\r\n            threshold: 0.5,\r\n        });\r\n\r\n        return () => {\r\n            observer.current?.disconnect();\r\n        };\r\n    }, [callback]);\r\n\r\n    const observe = (element: HTMLLIElement | null) => {\r\n        if (element && observer.current) observer.current.observe(element);\r\n    };\r\n\r\n    const unobserve = (element: HTMLLIElement | null) => {\r\n        if (element && observer.current) observer.current.unobserve(element);\r\n    };\r\n\r\n    return [observe, unobserve];\r\n}\r\n"],"names":[],"mappings":"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"}