{"version":3,"file":"chunk-4eefc2ac.js","sources":["../../../components/image/CATEGORY.ts","../../../components/image/getAppCategory.ts","../../../pages/search/ResultInRadius/DistanceContainer.tsx","../../../pages/search/ResultInRadius/useSwipeHook.ts","../../../pages/search/ResultInRadius/RestaurantList.tsx","../../../pages/search/ResultInRadius/RestaurantListItem.tsx","../../../pages/search/ModalGroup/CategoryFilterModal/CloseButton.tsx","../../../pages/search/ModalGroup/CategoryFilterModal/SubmitButton.tsx","../../../pages/search/ModalGroup/CategoryFilterModal/CategoryFilterModal.tsx"],"sourcesContent":["type Thumb = {\r\n    src: string;\r\n    copyRight: string;\r\n};\r\n\r\ntype MatchList = string[];\r\n\r\nexport type CategoryInfo = {\r\n    thumb: Thumb;\r\n    list: MatchList;\r\n};\r\n\r\ninterface CATEGORIES {\r\n    [key: string]: CategoryInfo;\r\n}\r\n\r\nconst CATEGORIES: CATEGORIES = {\r\n    일식: {\r\n        thumb: {\r\n            src: 'images/category-japan.webp',\r\n            copyRight: 'ultimatearm - Flaticon',\r\n        },\r\n        list: ['일식', '퓨전일식', '초밥,롤'],\r\n    },\r\n    '멕시칸/브라질': {\r\n        thumb: {\r\n            src: 'images/category-south-america.webp',\r\n            copyRight: 'Eucalyp - Flaticon',\r\n        },\r\n        list: ['멕시칸,브라질'],\r\n    },\r\n    샐러드: {\r\n        thumb: {\r\n            src: 'images/category-salad.webp',\r\n            copyRight: 'Victoruler - Flaticon',\r\n        },\r\n        list: ['샐러드'],\r\n    },\r\n    한식: {\r\n        thumb: {\r\n            src: 'images/category-korea.webp',\r\n            copyRight: 'Darius Dan - Flaticon',\r\n        },\r\n        list: [\r\n            '한식',\r\n            '분식',\r\n            '한정식',\r\n            '퓨전한식',\r\n            '칼국수',\r\n            '떡,한과',\r\n            '떡볶이',\r\n            '쌈밥',\r\n            '한식뷔페',\r\n            '돈까스,우동',\r\n            '두부전문점',\r\n            '찌개,전골',\r\n            '도시락',\r\n            '채식뷔페',\r\n            '뷔페',\r\n            '샤브샤브',\r\n            '구내식당',\r\n            '국수',\r\n            '퓨전요리',\r\n        ],\r\n    },\r\n    '인도/중동': {\r\n        thumb: {\r\n            src: 'images/category-middle-east.webp',\r\n            copyRight: 'cah nggunung - Flaticon',\r\n        },\r\n        list: ['인도/중동', '인도음식', '터키음식'],\r\n    },\r\n    양식: {\r\n        thumb: {\r\n            src: 'images/category-west.webp',\r\n            copyRight: 'pojok d - Flaticon',\r\n        },\r\n        list: ['양식', '이탈리안', '피자', '토스트', '햄버거', '패밀리레스토랑', '패스트푸드'],\r\n    },\r\n    카페: {\r\n        thumb: {\r\n            src: 'images/category-cafe.webp',\r\n            copyRight: 'Freepik - Flaticon',\r\n        },\r\n        list: [\r\n            '베이커리',\r\n            '까페',\r\n            '카페',\r\n            '커피전문점',\r\n            '제과,베이커리',\r\n            '디저트카페',\r\n            '샌드위치',\r\n            '갤러리카페',\r\n            '테마카페',\r\n            '아이스크림',\r\n            '도넛',\r\n            '북카페',\r\n            '전통찻집',\r\n            '스튜디오카페',\r\n            '고양이카페',\r\n        ],\r\n    },\r\n    술집: {\r\n        thumb: {\r\n            src: 'images/category-drink.webp',\r\n            copyRight: 'Good Ware - Flaticon',\r\n        },\r\n        list: ['술집', '호프,요리주점', '와인바', '일본식주점', '칵테일바'],\r\n    },\r\n    중식: {\r\n        thumb: {\r\n            src: 'images/category-china.webp',\r\n            copyRight: 'GOWI - Flaticon',\r\n        },\r\n        list: ['중국식', '중국요리', '중식', '아시아음식', '퓨전중식'],\r\n    },\r\n    동남아: {\r\n        thumb: {\r\n            src: 'images/category-east-south-asia.webp',\r\n            copyRight: 'Eucalyp - Flaticon',\r\n        },\r\n        list: ['동남아', '태국음식', '동남아음식'],\r\n    },\r\n    치킨: {\r\n        thumb: {\r\n            src: 'images/category-chicken.webp',\r\n            copyRight: 'Soni Sokell - Flaticon',\r\n        },\r\n        list: ['닭강정'],\r\n    },\r\n    해산물: {\r\n        thumb: {\r\n            src: 'images/category-fish.webp',\r\n            copyRight: 'fjstudio - Flaticon',\r\n        },\r\n        list: ['해물,생선', '참치회'],\r\n    },\r\n    죽: {\r\n        thumb: {\r\n            src: 'images/category-porridge.webp',\r\n            copyRight: 'Freepik - Flaticon',\r\n        },\r\n        list: ['죽'],\r\n    },\r\n    기타: {\r\n        thumb: {\r\n            src: 'images/category-food.webp',\r\n            copyRight: '3ab2ou - Flaticon',\r\n        },\r\n        list: ['과일,채소가게', '식품판매', '생과일전문점', '교육,학문', '음식점', '식품가공,제조', '슈퍼마켓'],\r\n    },\r\n};\r\n\r\nexport default CATEGORIES;\r\n","import CATEGORIES, { CategoryInfo } from './CATEGORY';\r\n\r\nexport default function getAppCategory(name: string | null): string {\r\n    if (name === '' || name === null) return '기타';\r\n\r\n    for (const CATEGORY in CATEGORIES) {\r\n        const categoryInfo: CategoryInfo = CATEGORIES[CATEGORY];\r\n\r\n        if (categoryInfo.list.includes(name)) {\r\n            return CATEGORY;\r\n        }\r\n    }\r\n\r\n    return '기타';\r\n}\r\n","import React from 'react';\r\nimport { Distance } from '../../my-lists/bookmark/BookmarkListMain/BookmarkList/Distance';\r\n\r\nexport { DistanceContainer };\r\n\r\nfunction DistanceContainer({ location }: { location: [number, number] }) {\r\n    return (\r\n        <div className=\"container-distance\">\r\n            <Distance location={location} />\r\n        </div>\r\n    );\r\n}\r\n","import { RefObject, useEffect, useRef } from 'react';\r\n// import Hammer from 'hammerjs';\r\n// import * as hammerJs from 'hammerjs';\r\n\r\n// const { DIRECTION_HORIZONTAL } = ((hammerJs as any).default ?? hammerJs) as typeof hammerJs;\r\n\r\ntype PanCallback = HammerListener;\r\n\r\ntype UseSwipeHookProps = {\r\n    elRef: RefObject<Element>;\r\n    onDragMove: PanCallback;\r\n};\r\n\r\n// onDragMove에 등록되어 있는 콜백함수가 실행될 때마다\r\n// ref 객체에 콜백함수를 담아서 hammer 이벤트 실행 시 콜백 함수로 사용\r\nexport default function useSwipeHook({ elRef, onDragMove }: UseSwipeHookProps) {\r\n    const dragMoveRef = useRef<PanCallback | null>(null);\r\n    dragMoveRef.current = onDragMove;\r\n\r\n    useEffect(() => {\r\n        let manager: HammerManager;\r\n        import('hammerjs').then((module) => {\r\n            const { DIRECTION_HORIZONTAL } = module;\r\n\r\n            if (!elRef || !elRef.current) {\r\n                console.error('useSwipe hook은 swipe 컨테이너를 참조해야 합니다.');\r\n\r\n                return;\r\n            }\r\n\r\n            const container = elRef.current;\r\n            manager = new Hammer.Manager(container);\r\n            const Drag = new Hammer.Pan({ threshold: 10, direction: DIRECTION_HORIZONTAL });\r\n\r\n            manager.add(Drag);\r\n            manager.on('panmove', (event: HammerInput) => dragMoveRef.current && dragMoveRef.current(event));\r\n\r\n            return () => {\r\n                manager.off('panstart');\r\n                manager.off('panmove');\r\n            };\r\n        });\r\n    }, [dragMoveRef]);\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport useSwipeHook from './useSwipeHook';\r\nimport { useAppSelector } from '../../../renderer/store/hooks';\r\nimport { RestaurantListItem } from './RestaurantListItem';\r\nimport { Restaurant } from '../../../server/models/Restaurant';\r\n\r\nexport { RestaurantList };\r\n\r\nexport const __FLEX_GAP__ = 10;\r\nexport const __LI_WIDTH__ = 350;\r\nexport const __BORDER__ = 1 * 2;\r\n\r\nfunction RestaurantList() {\r\n    const resultInRadius = useAppSelector((state) => state.mapSlice.resultInRadius);\r\n    const nearest = useAppSelector((state) => state.mapSlice.nearest);\r\n    const swipeContainerRef = useRef<HTMLDivElement>(null);\r\n\r\n    const [dataInUse, setDataInUse] = useState<Restaurant[]>(resultInRadius);\r\n\r\n    useEffect(() => {\r\n        if (resultInRadius.length > 0) {\r\n            setDataInUse(resultInRadius);\r\n        } else {\r\n            setDataInUse(nearest);\r\n        }\r\n    }, [resultInRadius]);\r\n\r\n    const [left, setLeft] = useState(0);\r\n\r\n    const handleDragMove = (event: HammerInput) => {\r\n        const deltaX = event.deltaX;\r\n\r\n        setLeft((prevLeft) => {\r\n            const newLeft = prevLeft + deltaX;\r\n\r\n            // left가 바뀌면 left가 0 초과이거나 마지막요소의 왼쪽 위치보다 작으면 최대/최소값으로 이동\r\n            if (newLeft > 0) {\r\n                return 0;\r\n            }\r\n\r\n            const leftOfLastElement = (__FLEX_GAP__ + __LI_WIDTH__ + __BORDER__) * (dataInUse.length - 1) * -1;\r\n            if (newLeft < leftOfLastElement) {\r\n                return leftOfLastElement;\r\n            }\r\n\r\n            return newLeft;\r\n        });\r\n    };\r\n\r\n    useSwipeHook({\r\n        elRef: swipeContainerRef,\r\n        onDragMove: handleDragMove,\r\n    });\r\n\r\n    return (\r\n        <div className=\"wrapper-swiper\">\r\n            <div\r\n                className=\"container-swiper\"\r\n                ref={swipeContainerRef}\r\n                style={{ transform: `translateX(${left}px)`, transition: '1s' }}\r\n            >\r\n                {\r\n                    <ul className=\"ul-restaurant-in-radius\" style={{ gap: `${__FLEX_GAP__}px` }}>\r\n                        {dataInUse.map((restaurantInfo) => {\r\n                            return <RestaurantListItem key={Math.random()} restaurantInfo={restaurantInfo} />;\r\n                        })}\r\n                    </ul>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { Thumb } from './Thumb';\r\nimport { DistanceContainer } from './DistanceContainer';\r\nimport { __LI_WIDTH__, __BORDER__ } from './RestaurantList';\r\nimport { useAppSelector } from '../../../renderer/store/hooks';\r\nimport type { Restaurant } from '../../../server/models/Restaurant';\r\n\r\nexport { RestaurantListItem };\r\n\r\nfunction RestaurantListItem({ restaurantInfo, isFirst }: { restaurantInfo: Restaurant; isFirst?: boolean }) {\r\n    const { _id, category, title, address, rating, reviews, certification, location } = restaurantInfo;\r\n    const currentPage = useAppSelector((state) => state.paginationSlice.currentPage);\r\n\r\n    const liElement = useRef<HTMLLIElement>(null);\r\n\r\n    useEffect(() => {\r\n        if (isFirst && liElement.current) {\r\n            liElement.current.scrollIntoView(false); // search 결과에서 사용. 첫번째 아이템이 하단에 내려가게.\r\n        }\r\n    }, [isFirst, currentPage]);\r\n\r\n    return (\r\n        <li style={{ width: `${__LI_WIDTH__}px`, borderWidth: `${__BORDER__ / 2}px` }} ref={liElement}>\r\n            <div onClick={() => (window.location.href = `/search/${_id}`)}>\r\n                <Thumb category={category} />\r\n                <DistanceContainer location={location.coordinates} />\r\n                <div className=\"container-right\">\r\n                    <dl>\r\n                        {certification ? (\r\n                            <dl>\r\n                                <dt className=\"sr-only\">채식 인증 내용</dt>\r\n                                <dd className=\"txt-cert\">{certification}</dd>\r\n                            </dl>\r\n                        ) : null}\r\n                        <dl>\r\n                            <dt className=\"sr-only\">식당 이름</dt>\r\n                            <dd className=\"txt-title\">{title}</dd>\r\n                            <dt className=\"sr-only\">업종</dt>\r\n                            <dd className=\"txt-category\">{category}</dd>\r\n                        </dl>\r\n                        <dl>\r\n                            <dt className=\"sr-only\">주소</dt>\r\n                            <dd className=\"txt-address\">{address}</dd>\r\n                        </dl>\r\n\r\n                        <dl className=\"container-rating-count\">\r\n                            <dt className=\"sr-only\">평점</dt>\r\n                            <dd className=\"txt-rating\">{rating}</dd>\r\n                            <dt className=\"sr-only\">리뷰 수</dt>\r\n                            <dd className=\"txt-count-comment\">{reviews ? reviews.length : 0}</dd>\r\n                        </dl>\r\n                    </dl>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport imgClose from '/images/icon-plus.svg';\r\nimport { useAppDispatch } from '../../../../renderer/store/hooks';\r\nimport appModalMode from '../../../../components/modal/appModalMode';\r\nimport { CATEGORY_FILTER_MODAL } from '../../../../renderer/_reducers/_slices/mapSlice';\r\n\r\nexport function CloseButton() {\r\n    const dispatch = useAppDispatch();\r\n\r\n    function handleClose() {\r\n        appModalMode(false);\r\n\r\n        dispatch(CATEGORY_FILTER_MODAL(false));\r\n    }\r\n\r\n    return (\r\n        <button type=\"button\" className=\"button-close\" onClick={handleClose}>\r\n            <img src={imgClose} alt=\"X 아이콘\" className=\"img-close\" />\r\n        </button>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {\r\n    ADD_SELECTED_CATEGORY,\r\n    CATEGORY_FILTER_MODAL,\r\n    SHOW_LIST_IN_REGION_MODAL,\r\n} from '../../../../renderer/_reducers/_slices/mapSlice';\r\nimport { useAppDispatch, useAppSelector } from '../../../../renderer/store/hooks';\r\n\r\nexport function SubmitButton() {\r\n    const dispatch = useAppDispatch();\r\n\r\n    const mapMode = useAppSelector((state) => state.mapSlice.mapMode);\r\n\r\n    const handleClick = () => {\r\n        // 체크한 업종에 대한 필터 진행.\r\n        // 체크한 업종 리스트\r\n        const checkedNode = Array.from(\r\n            document.querySelectorAll('.checkbox-category-filter') as NodeList\r\n        ) as HTMLInputElement[];\r\n\r\n        const totalCategoryCount: number = checkedNode.length; // 13\r\n        const checkedCategoryName: string[] = checkedNode\r\n            .filter((node) => node.checked === true)\r\n            .map((node) => node.value);\r\n\r\n        if (checkedCategoryName.length === 0) {\r\n            alert('업종을 선택해주세요.');\r\n            return;\r\n        }\r\n\r\n        if (totalCategoryCount === checkedCategoryName.length) {\r\n            // 전체 카테고리\r\n            dispatch(ADD_SELECTED_CATEGORY('*'));\r\n        } else {\r\n            // 스토어에 저장하고 루트 데이터에서 이 상태를 구독하게 만들기\r\n            dispatch(ADD_SELECTED_CATEGORY(checkedCategoryName));\r\n        }\r\n\r\n        // 지역탐색 모드이면 지역탐색 결과에 대한 필터 진행\r\n        if (mapMode === '지역탐색 모드') {\r\n            // 업종 필터 모달 끄기\r\n            dispatch(CATEGORY_FILTER_MODAL(false));\r\n\r\n            // show 지역리스트 모달 켜기\r\n            dispatch(SHOW_LIST_IN_REGION_MODAL(true));\r\n        } else if (mapMode === '반경탐색 모드') {\r\n            // 업종 필터 모달 끄기\r\n            dispatch(CATEGORY_FILTER_MODAL(false));\r\n\r\n            // 스와이프에서 보여주기\r\n        }\r\n\r\n        // 검색 모드이면 ...?\r\n    };\r\n\r\n    return (\r\n        <button type=\"button\" onClick={handleClick} className=\"button-apply-filter\">\r\n            적용하기\r\n        </button>\r\n    );\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../../../../renderer/store/hooks.js';\r\nimport { ADD_SELECTED_CATEGORY } from '../../../../renderer/_reducers/_slices/mapSlice.js';\r\nimport { CloseButton } from './CloseButton.js';\r\nimport { SubmitButton } from './SubmitButton.js';\r\nimport CATEGORIES from '../../../../components/image/CATEGORY.js';\r\n\r\nexport { CategoryFilterModal };\r\n\r\nfunction CategoryFilterModal() {\r\n    const dispatch = useAppDispatch();\r\n\r\n    const [show, setShow] = useState(false);\r\n    const categoryFilterModalOn = useAppSelector((state) => state.mapSlice.categoryFilterModalOn);\r\n\r\n    const [categoryList, _] = useState<string[]>(() => {\r\n        const tempList = Object.keys(CATEGORIES).filter((key) => key !== '기타'); // [일식, ... ]\r\n\r\n        dispatch(ADD_SELECTED_CATEGORY([...tempList].sort()));\r\n\r\n        return [...tempList].sort(); // 체크박스 렌더링용\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (categoryFilterModalOn === true) setShow(true);\r\n        else setShow(false);\r\n    }, [categoryFilterModalOn]);\r\n\r\n    const checkboxRefs = useRef<Array<React.RefObject<HTMLInputElement>>>([]);\r\n\r\n    useEffect(() => {\r\n        // current에 배열을 할당(ref 배열)\r\n        checkboxRefs.current = Array(categoryList.length)\r\n            .fill(null)\r\n            .map(() => React.createRef<HTMLInputElement>());\r\n    }, [categoryList]);\r\n\r\n    const handleUncheck = () => {\r\n        // current 배열을 순회하면서 check 끔\r\n        checkboxRefs.current.map((ref) => {\r\n            if (ref.current !== null) {\r\n                ref.current.checked = false;\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <article className={`modal-group-item ${show ? 'on' : ''}`}>\r\n            <h4>업종 필터</h4>\r\n            <form>\r\n                <div className=\"container-button-all-in-modal\">\r\n                    <button type=\"button\" onClick={handleUncheck} className=\"button-all-category\">\r\n                        전체 해제\r\n                    </button>\r\n                    <button type=\"reset\" className=\"button-all-category\">\r\n                        전체 선택\r\n                    </button>\r\n                </div>\r\n                <div className=\"wrapper-checkbox-category\">\r\n                    {categoryList.map((name, i) => {\r\n                        return <CategoryItem key={Math.random()} name={name} index={i} ref={checkboxRefs.current[i]} />;\r\n                    })}\r\n                </div>\r\n                <SubmitButton />\r\n            </form>\r\n            <CloseButton />\r\n        </article>\r\n    );\r\n}\r\n\r\n// 검색결과에서 재사용\r\nexport const CategoryItem = React.forwardRef<HTMLInputElement, { name: string; index: number }>(function CategoryItem(\r\n    { name, index }: { name: string; index: number },\r\n    ref: React.ForwardedRef<HTMLInputElement>\r\n) {\r\n    const selectedCategory = useAppSelector((state) => state.mapSlice.selectedCategory);\r\n    const [isChecked, setIsChecked] = useState(selectedCategory.includes(name) || selectedCategory === '*');\r\n\r\n    const handleCheckboxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setIsChecked(event.target.checked);\r\n    };\r\n\r\n    // selectedCategory가 배열이니까... 계속 깜빡임\r\n    useEffect(() => {\r\n        // 카테고리 선택 완료한 경우 체크상태 기억\r\n        if (selectedCategory === '*') {\r\n            setIsChecked(true);\r\n        } else {\r\n            setIsChecked(selectedCategory.includes(name));\r\n        }\r\n    }, [selectedCategory]);\r\n\r\n    console.log('i: isChecked', index, ': ', isChecked);\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"checkbox\"\r\n                checked={isChecked}\r\n                onChange={handleCheckboxChange}\r\n                id={`checkboxCategory-${index}`}\r\n                className=\"checkbox-category-filter\"\r\n                value={name}\r\n                ref={ref}\r\n            />\r\n            <label htmlFor={`checkboxCategory-${index}`}>{name}</label>\r\n        </div>\r\n    );\r\n});\r\n"],"names":["CategoryItem"],"mappings":"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"}