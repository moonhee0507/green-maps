{"version":3,"file":"chunk-1a5b0e59.js","sources":["../../../renderer/_reducers/_slices/myListSlice.ts"],"sourcesContent":["import * as toolkitRaw from '@reduxjs/toolkit';\r\n\r\nconst { createSlice } = ((toolkitRaw as any).default ?? toolkitRaw) as typeof toolkitRaw;\r\n\r\ntype InitialState = {\r\n    clicked: string;\r\n    orderModalOn: boolean;\r\n    groupNameOrder: string;\r\n    addGroupModalOn: boolean;\r\n    groupName: null | string;\r\n    selectedIcon: string;\r\n    editGroupModalOn: boolean;\r\n    targetGroup: string;\r\n    sameIcon: boolean;\r\n    moveListModalOn: boolean;\r\n    countChecked: number;\r\n    copyModalOn: boolean;\r\n    restaurantToMove: Array<string>;\r\n    deleteLikeListModalOn: boolean;\r\n};\r\n\r\nconst initialState: InitialState = {\r\n    clicked: '북마크',\r\n    orderModalOn: false,\r\n    groupNameOrder: '등록순',\r\n    addGroupModalOn: false,\r\n    groupName: null,\r\n    selectedIcon: '/images/icon-star.svg',\r\n    editGroupModalOn: false,\r\n    targetGroup: '',\r\n    sameIcon: true,\r\n    moveListModalOn: false,\r\n    countChecked: 0,\r\n    copyModalOn: false,\r\n    restaurantToMove: [],\r\n    deleteLikeListModalOn: false,\r\n};\r\n\r\nconst myListSlice = createSlice({\r\n    name: 'myListSlice',\r\n    initialState,\r\n    reducers: {\r\n        SHOW(state, action: toolkitRaw.PayloadAction<string>) {\r\n            state.clicked = action.payload;\r\n        },\r\n        ORDER_MODAL(state, action: toolkitRaw.PayloadAction<boolean>) {\r\n            state.orderModalOn = action.payload;\r\n        },\r\n        ORDER_STANDARD(state, action: toolkitRaw.PayloadAction<string>) {\r\n            state.groupNameOrder = action.payload;\r\n        },\r\n        ADD_GROUP_MODAL(state, action: toolkitRaw.PayloadAction<boolean>) {\r\n            state.addGroupModalOn = action.payload;\r\n        },\r\n        SET_GROUP_NAME(state, action: toolkitRaw.PayloadAction<null | string>) {\r\n            state.groupName = action.payload;\r\n        },\r\n        ICON_STANDARD(state, action: toolkitRaw.PayloadAction<string>) {\r\n            state.selectedIcon = action.payload;\r\n        },\r\n        EDIT_GROUP_MODAL(state, action: toolkitRaw.PayloadAction<boolean>) {\r\n            state.editGroupModalOn = action.payload;\r\n        },\r\n        SET_TARGET_GROUP(state, action: toolkitRaw.PayloadAction<string>) {\r\n            state.targetGroup = action.payload;\r\n        },\r\n        COMPARE_ICON(state, action: toolkitRaw.PayloadAction<boolean>) {\r\n            state.sameIcon = action.payload;\r\n        },\r\n        MOVE_LIST_MODAL(state, action: toolkitRaw.PayloadAction<boolean>) {\r\n            state.moveListModalOn = action.payload;\r\n        },\r\n        INCREASE_CHECKED(state, action: toolkitRaw.PayloadAction<number>) {\r\n            state.countChecked += action.payload;\r\n        },\r\n        DECREASE_CHECKED(state, action: toolkitRaw.PayloadAction<number>) {\r\n            state.countChecked -= action.payload;\r\n        },\r\n        RESET_CHECKED(state) {\r\n            state.countChecked = 0;\r\n        },\r\n        COPY_MODAL(state, action: toolkitRaw.PayloadAction<boolean>) {\r\n            state.copyModalOn = action.payload;\r\n        },\r\n        PUSH_RESTAURANT_LIST(state, action: toolkitRaw.PayloadAction<string[]>) {\r\n            state.restaurantToMove = action.payload;\r\n        },\r\n        DELETE_RESTAURANT_LIST(state, action: toolkitRaw.PayloadAction<string[]>) {\r\n            state.restaurantToMove = action.payload;\r\n        },\r\n        RESET_RESTAURANT_LIST(state, action: toolkitRaw.PayloadAction<[]>) {\r\n            state.restaurantToMove = action.payload;\r\n        },\r\n        DELETE_LIKELIST_MODAL(state, action: toolkitRaw.PayloadAction<boolean>) {\r\n            state.deleteLikeListModalOn = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const {\r\n    SHOW,\r\n    ORDER_MODAL,\r\n    ORDER_STANDARD,\r\n    ADD_GROUP_MODAL,\r\n    SET_GROUP_NAME,\r\n    ICON_STANDARD,\r\n    EDIT_GROUP_MODAL,\r\n    SET_TARGET_GROUP,\r\n    COMPARE_ICON,\r\n    MOVE_LIST_MODAL,\r\n    INCREASE_CHECKED,\r\n    DECREASE_CHECKED,\r\n    RESET_CHECKED,\r\n    COPY_MODAL,\r\n    PUSH_RESTAURANT_LIST,\r\n    DELETE_RESTAURANT_LIST,\r\n    RESET_RESTAURANT_LIST,\r\n    DELETE_LIKELIST_MODAL,\r\n} = myListSlice.actions;\r\n\r\nexport default myListSlice.reducer;\r\n"],"names":[],"mappings":";AAEA,MAAM,EAAE,YAAkB,IAAA,WAAmB,WAAW;AAmBxD,MAAM,eAA6B;AAAA,EAC/B,SAAS;AAAA,EACT,cAAc;AAAA,EACd,gBAAgB;AAAA,EAChB,iBAAiB;AAAA,EACjB,WAAW;AAAA,EACX,cAAc;AAAA,EACd,kBAAkB;AAAA,EAClB,aAAa;AAAA,EACb,UAAU;AAAA,EACV,iBAAiB;AAAA,EACjB,cAAc;AAAA,EACd,aAAa;AAAA,EACb,kBAAkB,CAAC;AAAA,EACnB,uBAAuB;AAC3B;AAEA,MAAM,cAAc,YAAY;AAAA,EAC5B,MAAM;AAAA,EACN;AAAA,EACA,UAAU;AAAA,IACN,KAAK,OAAO,QAA0C;AAClD,YAAM,UAAU,OAAO;AAAA,IAC3B;AAAA,IACA,YAAY,OAAO,QAA2C;AAC1D,YAAM,eAAe,OAAO;AAAA,IAChC;AAAA,IACA,eAAe,OAAO,QAA0C;AAC5D,YAAM,iBAAiB,OAAO;AAAA,IAClC;AAAA,IACA,gBAAgB,OAAO,QAA2C;AAC9D,YAAM,kBAAkB,OAAO;AAAA,IACnC;AAAA,IACA,eAAe,OAAO,QAAiD;AACnE,YAAM,YAAY,OAAO;AAAA,IAC7B;AAAA,IACA,cAAc,OAAO,QAA0C;AAC3D,YAAM,eAAe,OAAO;AAAA,IAChC;AAAA,IACA,iBAAiB,OAAO,QAA2C;AAC/D,YAAM,mBAAmB,OAAO;AAAA,IACpC;AAAA,IACA,iBAAiB,OAAO,QAA0C;AAC9D,YAAM,cAAc,OAAO;AAAA,IAC/B;AAAA,IACA,aAAa,OAAO,QAA2C;AAC3D,YAAM,WAAW,OAAO;AAAA,IAC5B;AAAA,IACA,gBAAgB,OAAO,QAA2C;AAC9D,YAAM,kBAAkB,OAAO;AAAA,IACnC;AAAA,IACA,iBAAiB,OAAO,QAA0C;AAC9D,YAAM,gBAAgB,OAAO;AAAA,IACjC;AAAA,IACA,iBAAiB,OAAO,QAA0C;AAC9D,YAAM,gBAAgB,OAAO;AAAA,IACjC;AAAA,IACA,cAAc,OAAO;AACjB,YAAM,eAAe;AAAA,IACzB;AAAA,IACA,WAAW,OAAO,QAA2C;AACzD,YAAM,cAAc,OAAO;AAAA,IAC/B;AAAA,IACA,qBAAqB,OAAO,QAA4C;AACpE,YAAM,mBAAmB,OAAO;AAAA,IACpC;AAAA,IACA,uBAAuB,OAAO,QAA4C;AACtE,YAAM,mBAAmB,OAAO;AAAA,IACpC;AAAA,IACA,sBAAsB,OAAO,QAAsC;AAC/D,YAAM,mBAAmB,OAAO;AAAA,IACpC;AAAA,IACA,sBAAsB,OAAO,QAA2C;AACpE,YAAM,wBAAwB,OAAO;AAAA,IACzC;AAAA,EACJ;AACJ,CAAC;AAEY,MAAA;AAAA,EACT;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ,IAAI,YAAY;AAEhB,MAAe,gBAAA,YAAY;"}