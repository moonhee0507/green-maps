{"version":3,"file":"chunk-3e2eef8e.js","sources":["../../../renderer/_reducers/_slices/postSlice.ts"],"sourcesContent":["import * as toolkitRaw from '@reduxjs/toolkit';\r\n\r\nconst { createSlice } = ((toolkitRaw as any).default ?? toolkitRaw) as typeof toolkitRaw;\r\n\r\ntype AccessTarget = 'post' | 'comment';\r\n\r\nconst initialState = {\r\n    SUBJECT: '',\r\n    NICKNAME: '',\r\n    TITLE: '',\r\n    CONTENT: '',\r\n    image: {\r\n        FILE_INFO: [],\r\n        RANDOM_NAME: [],\r\n    },\r\n    post: {\r\n        TOTAL: 0,\r\n        CURRENT_PAGE: 1,\r\n    },\r\n    KEYWORD: '',\r\n    BOUNDARY: 'tc',\r\n    ORDERBY: 'latest',\r\n    editDeleteNotifyModalOn: false,\r\n    sameUserOwner: false,\r\n    postId: '',\r\n    commentId: '',\r\n    editMode: false,\r\n    accessTarget: 'post',\r\n    editCommentMode: false,\r\n    txtComment: '',\r\n};\r\nconst postSlice = createSlice({\r\n    name: 'postSlice',\r\n    initialState: initialState,\r\n    reducers: {\r\n        SUBJECT_STATE: (state, action: any) => {\r\n            state.SUBJECT = action.SUBJECT;\r\n        },\r\n        OWNER_STATE: (state, action: any) => {\r\n            state.NICKNAME = action.NICKNAME;\r\n        },\r\n        TITLE_STATE: (state, action: any) => {\r\n            state.TITLE = action.TITLE;\r\n        },\r\n        CONTENT_STATE: (state, action: any) => {\r\n            state.CONTENT = action.CONTENT;\r\n        },\r\n        IMAGE_STATE: (state, action: any) => {\r\n            state.image.FILE_INFO = action.FILE_INFO;\r\n            state.image.RANDOM_NAME = action.RANDOM_NAME;\r\n        },\r\n        POST_IN_PAGE: (state, action: any) => {\r\n            state.post.TOTAL = action.TOTAL;\r\n            state.post.CURRENT_PAGE = action.CURRENT_PAGE;\r\n        },\r\n        SEARCH: (state, action: any) => {\r\n            state.KEYWORD = action.KEYWORD;\r\n        },\r\n        SEARCH_POOL: (state, action: any) => {\r\n            state.BOUNDARY = action.BOUNDARY;\r\n        },\r\n        SEARCH_ORDER: (state, action: any) => {\r\n            state.ORDERBY = action.ORDERBY;\r\n        },\r\n        EDIT_DELETE_NOTIFY_MODAL: (state, action: toolkitRaw.PayloadAction<boolean>) => {\r\n            state.editDeleteNotifyModalOn = action.payload;\r\n        },\r\n        SAME_USER_OWNER: (state, action: toolkitRaw.PayloadAction<boolean>) => {\r\n            state.sameUserOwner = action.payload;\r\n        },\r\n        SET_POST_ID: (state, action: toolkitRaw.PayloadAction<string>) => {\r\n            state.postId = action.payload;\r\n        },\r\n        SET_COMMENT_ID: (state, action: toolkitRaw.PayloadAction<string>) => {\r\n            state.commentId = action.payload;\r\n        },\r\n        EDIT_MODE: (state, action: toolkitRaw.PayloadAction<boolean>) => {\r\n            state.editMode = action.payload;\r\n        },\r\n        SET_ACCESS_TARGET: (state, action: toolkitRaw.PayloadAction<AccessTarget>) => {\r\n            // 게시글쪽 더보기 버튼인지 댓글쪽 더보기 버튼인지 구분\r\n            state.accessTarget = action.payload;\r\n        },\r\n        SET_EDIT_COMMENT_MODE: (state, action: toolkitRaw.PayloadAction<boolean>) => {\r\n            // 댓글 수정 UI 용\r\n            state.editCommentMode = action.payload;\r\n        },\r\n        SET_COMMENT_CONTENT: (state, action: toolkitRaw.PayloadAction<string>) => {\r\n            // 댓글 수정 텍스트\r\n            state.txtComment = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const {\r\n    EDIT_DELETE_NOTIFY_MODAL,\r\n    SAME_USER_OWNER,\r\n    SET_POST_ID,\r\n    SET_COMMENT_ID,\r\n    EDIT_MODE,\r\n    SET_ACCESS_TARGET,\r\n    SET_EDIT_COMMENT_MODE,\r\n    SET_COMMENT_CONTENT,\r\n} = postSlice.actions;\r\n\r\nexport default postSlice.reducer;\r\n"],"names":[],"mappings":";AAEA,MAAM,EAAE,YAAkB,IAAA,WAAmB,WAAW;AAIxD,MAAM,eAAe;AAAA,EACjB,SAAS;AAAA,EACT,UAAU;AAAA,EACV,OAAO;AAAA,EACP,SAAS;AAAA,EACT,OAAO;AAAA,IACH,WAAW,CAAC;AAAA,IACZ,aAAa,CAAC;AAAA,EAClB;AAAA,EACA,MAAM;AAAA,IACF,OAAO;AAAA,IACP,cAAc;AAAA,EAClB;AAAA,EACA,SAAS;AAAA,EACT,UAAU;AAAA,EACV,SAAS;AAAA,EACT,yBAAyB;AAAA,EACzB,eAAe;AAAA,EACf,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,UAAU;AAAA,EACV,cAAc;AAAA,EACd,iBAAiB;AAAA,EACjB,YAAY;AAChB;AACA,MAAM,YAAY,YAAY;AAAA,EAC1B,MAAM;AAAA,EACN;AAAA,EACA,UAAU;AAAA,IACN,eAAe,CAAC,OAAO,WAAgB;AACnC,YAAM,UAAU,OAAO;AAAA,IAC3B;AAAA,IACA,aAAa,CAAC,OAAO,WAAgB;AACjC,YAAM,WAAW,OAAO;AAAA,IAC5B;AAAA,IACA,aAAa,CAAC,OAAO,WAAgB;AACjC,YAAM,QAAQ,OAAO;AAAA,IACzB;AAAA,IACA,eAAe,CAAC,OAAO,WAAgB;AACnC,YAAM,UAAU,OAAO;AAAA,IAC3B;AAAA,IACA,aAAa,CAAC,OAAO,WAAgB;AAC3B,YAAA,MAAM,YAAY,OAAO;AACzB,YAAA,MAAM,cAAc,OAAO;AAAA,IACrC;AAAA,IACA,cAAc,CAAC,OAAO,WAAgB;AAC5B,YAAA,KAAK,QAAQ,OAAO;AACpB,YAAA,KAAK,eAAe,OAAO;AAAA,IACrC;AAAA,IACA,QAAQ,CAAC,OAAO,WAAgB;AAC5B,YAAM,UAAU,OAAO;AAAA,IAC3B;AAAA,IACA,aAAa,CAAC,OAAO,WAAgB;AACjC,YAAM,WAAW,OAAO;AAAA,IAC5B;AAAA,IACA,cAAc,CAAC,OAAO,WAAgB;AAClC,YAAM,UAAU,OAAO;AAAA,IAC3B;AAAA,IACA,0BAA0B,CAAC,OAAO,WAA8C;AAC5E,YAAM,0BAA0B,OAAO;AAAA,IAC3C;AAAA,IACA,iBAAiB,CAAC,OAAO,WAA8C;AACnE,YAAM,gBAAgB,OAAO;AAAA,IACjC;AAAA,IACA,aAAa,CAAC,OAAO,WAA6C;AAC9D,YAAM,SAAS,OAAO;AAAA,IAC1B;AAAA,IACA,gBAAgB,CAAC,OAAO,WAA6C;AACjE,YAAM,YAAY,OAAO;AAAA,IAC7B;AAAA,IACA,WAAW,CAAC,OAAO,WAA8C;AAC7D,YAAM,WAAW,OAAO;AAAA,IAC5B;AAAA,IACA,mBAAmB,CAAC,OAAO,WAAmD;AAE1E,YAAM,eAAe,OAAO;AAAA,IAChC;AAAA,IACA,uBAAuB,CAAC,OAAO,WAA8C;AAEzE,YAAM,kBAAkB,OAAO;AAAA,IACnC;AAAA,IACA,qBAAqB,CAAC,OAAO,WAA6C;AAEtE,YAAM,aAAa,OAAO;AAAA,IAC9B;AAAA,EACJ;AACJ,CAAC;AAEY,MAAA;AAAA,EACT;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ,IAAI,UAAU;AAEd,MAAe,cAAA,UAAU;"}