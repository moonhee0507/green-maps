{"version":3,"file":"chunk-e0988469.js","sources":["../../../pages/search/restaurant/RestaurantDetail/PrimarySection/component/Stars.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport { Stars };\r\n\r\nfunction Stars(props: { rating: string }) {\r\n    const [rating] = useState(Number(props.rating));\r\n    const maxRating = 5.0;\r\n\r\n    try {\r\n        if (maxRating < rating) {\r\n            throw new Error('해당 식당의 평점 데이터가 올바르지 않습니다.');\r\n        }\r\n    } catch (e: any) {\r\n        console.error(e.message);\r\n    }\r\n\r\n    const [arrStar, _] = useState<number[]>(() => {\r\n        const maxInt = Math.floor(rating);\r\n        const rest = rating - maxInt;\r\n\r\n        return new Array(maxRating).fill(0).map((_, i) => {\r\n            if (i <= maxInt - 1) return 100;\r\n            else if (i === maxInt) return rest * 100;\r\n            else return 0;\r\n        });\r\n    });\r\n\r\n    return (\r\n        <div className=\"container-rating\">\r\n            {arrStar.map((percent: number, i: number) => {\r\n                return <Star key={i + 1} id={i + 1} percent={percent} />;\r\n            })}\r\n            {window.location.pathname !== '/search' && <span>({rating.toFixed(1)})</span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Star(props: { id: number; percent: number }) {\r\n    return (\r\n        <>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\" width={30}>\r\n                <defs>\r\n                    <linearGradient id={`starSegre${props.id}`} gradientTransform=\"rotate(0)\">\r\n                        <stop offset={`${props.percent}%`} stopColor=\"#fc0\" />\r\n                        <stop offset={`${props.percent}%`} stopColor=\"#d3d3d3\" />\r\n                    </linearGradient>\r\n                </defs>\r\n                <path\r\n                    d=\"M316.9 18C311.6 7 300.4 0 288.1 0s-23.4 7-28.8 18L195 150.3 51.4 171.5c-12 1.8-22 10.2-25.7 21.7s-.7 24.2 7.9 32.7L137.8 329 113.2 474.7c-2 12 3 24.2 12.9 31.3s23 8 33.8 2.3l128.3-68.5 128.3 68.5c10.8 5.7 23.9 4.9 33.8-2.3s14.9-19.3 12.9-31.3L438.5 329 542.7 225.9c8.6-8.5 11.7-21.2 7.9-32.7s-13.7-19.9-25.7-21.7L381.2 150.3 316.9 18z\"\r\n                    fill={`url('#starSegre${props.id}')`}\r\n                />\r\n            </svg>\r\n        </>\r\n    );\r\n}\r\n"],"names":["_"],"mappings":";;AAIA,SAAS,MAAM,OAA2B;AACtC,QAAM,CAAC,MAAM,IAAI,SAAS,OAAO,MAAM,MAAM,CAAC;AAC9C,QAAM,YAAY;AAEd,MAAA;AACA,QAAI,YAAY,QAAQ;AACd,YAAA,IAAI,MAAM,2BAA2B;AAAA,IAC/C;AAAA,WACK;AACG,YAAA,MAAM,EAAE,OAAO;AAAA,EAC3B;AAEA,QAAM,CAAC,SAAS,CAAC,IAAI,SAAmB,MAAM;AACpC,UAAA,SAAS,KAAK,MAAM,MAAM;AAChC,UAAM,OAAO,SAAS;AAEf,WAAA,IAAI,MAAM,SAAS,EAAE,KAAK,CAAC,EAAE,IAAI,CAACA,IAAG,MAAM;AAC9C,UAAI,KAAK,SAAS;AAAU,eAAA;AAAA,eACnB,MAAM;AAAQ,eAAO,OAAO;AAAA;AACzB,eAAA;AAAA,IAAA,CACf;AAAA,EAAA,CACJ;AAGG,SAAA,qBAAC,OAAI,EAAA,WAAU,oBACV,UAAA;AAAA,IAAQ,QAAA,IAAI,CAAC,SAAiB,MAAc;AACzC,iCAAQ,MAAiB,EAAA,IAAI,IAAI,GAAG,QAAA,GAAlB,IAAI,CAAgC;AAAA,IAAA,CACzD;AAAA,IACA,OAAO,SAAS,aAAa,kCAAc,QAAK,EAAA,UAAA;AAAA,MAAA;AAAA,MAAE,OAAO,QAAQ,CAAC;AAAA,MAAE;AAAA,IAAA,GAAC;AAAA,EAC1E,EAAA,CAAA;AAER;AAEA,SAAS,KAAK,OAAwC;AAE9C,SAAA,oBAAA,UAAA,EACI,+BAAC,OAAI,EAAA,OAAM,8BAA6B,SAAQ,eAAc,OAAO,IACjE,UAAA;AAAA,IAAC,oBAAA,QAAA,EACG,+BAAC,kBAAe,EAAA,IAAI,YAAY,MAAM,MAAM,mBAAkB,aAC1D,UAAA;AAAA,MAAA,oBAAC,UAAK,QAAQ,GAAG,MAAM,YAAY,WAAU,QAAO;AAAA,0BACnD,QAAK,EAAA,QAAQ,GAAG,MAAM,YAAY,WAAU,WAAU;AAAA,IAAA,EAAA,CAC3D,EACJ,CAAA;AAAA,IACA;AAAA,MAAC;AAAA,MAAA;AAAA,QACG,GAAE;AAAA,QACF,MAAM,kBAAkB,MAAM;AAAA,MAAA;AAAA,IAClC;AAAA,EAAA,EACJ,CAAA,EACJ,CAAA;AAER;"}