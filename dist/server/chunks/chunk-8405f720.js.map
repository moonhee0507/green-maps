{"version":3,"file":"chunk-8405f720.js","sources":["../../../pages/community/create/component/SubmitButton.tsx","../../../components/topBar/topBar.tsx"],"sourcesContent":["import React, { useCallback, useEffect } from 'react';\r\nimport { useDispatch, useStore } from 'react-redux';\r\nimport { useAppSelector } from '../../../../renderer/store/hooks';\r\nimport { API_URL } from '../../../../renderer/CONSTANT_URL';\r\nimport { EDIT_MODE } from '../../../../renderer/_reducers/_slices/postSlice';\r\n\r\nexport { SubmitButton };\r\n\r\nfunction SubmitButton() {\r\n    const dispatch = useDispatch();\r\n\r\n    const editMode = useAppSelector((state) => state.postSlice.editMode);\r\n\r\n    const postId = useAppSelector((state) => state.postSlice.postId);\r\n    const subject = useAppSelector((state) => state.postSlice.SUBJECT);\r\n    const owner = useAppSelector((state) => state.postSlice.NICKNAME);\r\n    const title = useAppSelector((state) => state.postSlice.TITLE);\r\n    const content = useAppSelector((state) => state.postSlice.CONTENT);\r\n\r\n    const getUserInfo = useCallback(async () => {\r\n        const res = await fetch(`${API_URL}/users/`, {\r\n            credentials: 'include',\r\n            method: 'GET',\r\n        });\r\n        const data = await res.json();\r\n\r\n        return data.user;\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getUserInfo().then((info) => {\r\n            if (info) {\r\n                dispatch({ type: 'postSlice/OWNER_STATE', NICKNAME: info.nickName });\r\n            } else {\r\n                console.log('사용자 정보가 없습니다. 로그인 하세요.');\r\n            }\r\n        });\r\n    }, [getUserInfo]);\r\n\r\n    async function handleSubmit() {\r\n        try {\r\n            const body = {\r\n                subject: subject,\r\n                owner: owner,\r\n                title: title,\r\n                content: content,\r\n            };\r\n\r\n            const res = await fetch(`${API_URL}/posts/${editMode ? postId : ''}`, {\r\n                credentials: 'include',\r\n                method: editMode ? 'PATCH' : 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(body),\r\n            });\r\n            const data = await res.json();\r\n\r\n            if (data.success) {\r\n                alert('게시글이 등록되었습니다.');\r\n            } else {\r\n                alert('다시 시도해주세요.');\r\n            }\r\n        } catch (err) {\r\n            console.error(err);\r\n        } finally {\r\n            dispatch({ type: 'postSlice/SUBJECT_STATE', SUBJECT: '' });\r\n            dispatch(EDIT_MODE(false));\r\n            history.back();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <button type=\"button\" onClick={handleSubmit}>\r\n            등록\r\n        </button>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { ButtonGoBack } from '../button/buttonGoBack';\r\nimport { SubmitButton } from '../../pages/community/create/component/SubmitButton';\r\n\r\nexport { TopBar };\r\n\r\nfunction TopBar(props: { title: string }) {\r\n    const [title] = useState(props.title);\r\n\r\n    return (\r\n        <div className=\"top-bar\">\r\n            <ButtonGoBack />\r\n            <h2 className=\"top-title\">{title}</h2>\r\n            {title === '글 쓰기' || title === '글 수정' ? <SubmitButton /> : null}\r\n        </div>\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;;;AAQA,SAAS,eAAe;AACpB,QAAM,WAAW;AAEjB,QAAM,WAAW,eAAe,CAAC,UAAU,MAAM,UAAU,QAAQ;AAEnE,QAAM,SAAS,eAAe,CAAC,UAAU,MAAM,UAAU,MAAM;AAC/D,QAAM,UAAU,eAAe,CAAC,UAAU,MAAM,UAAU,OAAO;AACjE,QAAM,QAAQ,eAAe,CAAC,UAAU,MAAM,UAAU,QAAQ;AAChE,QAAM,QAAQ,eAAe,CAAC,UAAU,MAAM,UAAU,KAAK;AAC7D,QAAM,UAAU,eAAe,CAAC,UAAU,MAAM,UAAU,OAAO;AAE3D,QAAA,cAAc,YAAY,YAAY;AACxC,UAAM,MAAM,MAAM,MAAM,GAAG,kBAAkB;AAAA,MACzC,aAAa;AAAA,MACb,QAAQ;AAAA,IAAA,CACX;AACK,UAAA,OAAO,MAAM,IAAI;AAEvB,WAAO,KAAK;AAAA,EAChB,GAAG,CAAE,CAAA;AAEL,YAAU,MAAM;AACA,gBAAA,EAAE,KAAK,CAAC,SAAS;AACzB,UAAI,MAAM;AACN,iBAAS,EAAE,MAAM,yBAAyB,UAAU,KAAK,UAAU;AAAA,MAAA,OAChE;AACH,gBAAQ,IAAI,wBAAwB;AAAA,MACxC;AAAA,IAAA,CACH;AAAA,EAAA,GACF,CAAC,WAAW,CAAC;AAEhB,iBAAe,eAAe;AACtB,QAAA;AACA,YAAM,OAAO;AAAA,QACT;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MAAA;AAGJ,YAAM,MAAM,MAAM,MAAM,GAAG,iBAAiB,WAAW,SAAS,MAAM;AAAA,QAClE,aAAa;AAAA,QACb,QAAQ,WAAW,UAAU;AAAA,QAC7B,SAAS;AAAA,UACL,gBAAgB;AAAA,QACpB;AAAA,QACA,MAAM,KAAK,UAAU,IAAI;AAAA,MAAA,CAC5B;AACK,YAAA,OAAO,MAAM,IAAI;AAEvB,UAAI,KAAK,SAAS;AACd,cAAM,eAAe;AAAA,MAAA,OAClB;AACH,cAAM,YAAY;AAAA,MACtB;AAAA,aACK;AACL,cAAQ,MAAM,GAAG;AAAA,IAAA,UACnB;AACE,eAAS,EAAE,MAAM,2BAA2B,SAAS,GAAI,CAAA;AAChD,eAAA,UAAU,KAAK,CAAC;AACzB,cAAQ,KAAK;AAAA,IACjB;AAAA,EACJ;AAEA,6BACK,UAAO,EAAA,MAAK,UAAS,SAAS,cAAc,UAE7C,KAAA,CAAA;AAER;ACvEA,SAAS,OAAO,OAA0B;AACtC,QAAM,CAAC,KAAK,IAAI,SAAS,MAAM,KAAK;AAGhC,SAAA,qBAAC,OAAI,EAAA,WAAU,WACX,UAAA;AAAA,IAAA,oBAAC,cAAa,EAAA;AAAA,IACb,oBAAA,MAAA,EAAG,WAAU,aAAa,UAAM,OAAA;AAAA,IAChC,UAAU,UAAU,UAAU,SAAS,oBAAC,eAAa,CAAA,IAAK;AAAA,EAC/D,EAAA,CAAA;AAER;"}